{"version":3,"sources":["static/assets/images/user-icon.svg","static/assets/images/login.svg","static/assets/images/logo-est.png","static/assets/tara/tara-logo-et.png","static/assets/images/arena-logo.png","process/Base.tsx","byNameStore.tsx","process/Arena.tsx","i18n.ts","components/LogRows.tsx","process/client/types.tsx","components/SendButton.tsx","process/consentService/types.tsx","util.tsx","process/consentService/declarationAPI.tsx","process/consentService/ui.tsx","process/consentService/referenceAPI.tsx","process/serviceProvider/types.tsx","process/consentService/validationAPI.tsx","process/consentService/reportingAPI.tsx","process/serviceProvider/messages.tsx","process/client/messages.tsx","process/client/EnduserUI.tsx","process/client/views.tsx","process/client/constructor.tsx","process/serviceProvider/views.tsx","process/serviceProvider/constructor.tsx","config/hl7.tsx","postMessage.tsx","components/MessageLog.tsx","components/Process.tsx","process/consentService/views.tsx","process/consentService/constructor.tsx","config/demo.tsx","config.tsx","process/Theatre.tsx","components/Arena.tsx","components/Theatre.tsx","process/consentService/altUI/backendAPI.tsx","process/consentService/altUI/veera/footer.tsx","components/LanguageSelector.tsx","process/consentService/altUI/veera/header.tsx","process/consentService/altUI/veera/layout.tsx","process/consentService/altUI/tabs/Tab.tsx","process/consentService/altUI/tabs/Tabs.tsx","process/consentService/altUI/ConsentModal.tsx","process/consentService/altUI/MyConsents.tsx","process/consentService/altUI/ConsentHistory.tsx","process/consentService/altUI/CSEnduserUI.tsx","process/consentService/altUI/tara.tsx","components/Explainer.tsx","App.tsx","serviceWorker.ts","store.tsx","index.tsx"],"names":["module","exports","MESSAGE","handlers","addHandlerClass","impl","c","handler","type","undefined","addHandler","name","p","a","handle","obj","values","createMessage","message","arena","sender","receivers","length","GenericMessageHandler","this","process","action","mem","updateMem","queue","concat","payload","send","error","extra","withResponse","response","uiMap","defaultRender","JSON","stringify","renderers","addRenderer","view","renderer","updateDb","newdb","db","addByName","old","byName","allNames","init","filter","n","reduceByName","reducer","Object","assign","map","k","fromArray","reduce","MESSAGE_DELAY","createProcess","reduceProcesses","CREATE_PROCESS","FLUSH_QUEUE","reduceArena","state","includes","console","reduceMessage","log","fixNowAndRandom","m","now","Date","random","Math","queueListener","store","queued","arenas","flat","d","getQueued","getState","theatre","keys","forEach","dispatch","window","setTimeout","delayedSender","shift","i18n","use","Backend","LanguageDetector","initReactI18next","fallbackLng","debug","backend","loadPath","location","pathname","whitelist","nonExplicitWhitelist","interpolation","escapeValue","__","props","labels","options","suffix","join","proc","t","pref","styleNameFor","fullname","id","prop","replace","person","business","formatProcess","className","formatLogtime","epochSeconds","toLocaleString","formatHeader","msg","owner","showPopup","onClick","ev","names","r","i","formatBody","statusUpdateChannel","max","key","value","substring","defaultRenderer","LogRow","findLogRenderer","addLogRenderers","addLogRenderer","consentRefApiLogRenderers","ClientIS","ClientDefaultView","parseOrRaw","s","startsWith","parse","f","Array","from","elements","u","e","out","selected","push","split","checked","o","Send","preventDefault","messageToAction","currentTarget","form","handleClick","title","text","React","SimpleSend","connect","target","ConsentService","ConsentServiceDefaultView","findFrom","items","example","find","hash","input","createHash","update","digest","address2org","address","match","renderText","stack","last","indent","children","l","prefix","pop","ul","addServiceDeclaration","cs","sd","serviceDeclarations","decl","serviceProviderId","serviceDeclarationId","withErrorResponse","withOkResponse","addPurposeDeclaration","pd","purposeDeclarations","clientId","purposeDeclarationId","services","sdRef","loginMessage","ui","user","giveConsentMessage","con","consents","newConsent","dataSubject","revoked","updatedCS","addConsent","activeUser","activePurposeDeclaration","updatedCS2","setActivePD","callbackURL","fetchConsentReference","revokeConsentMessage","ref","consentReference","validUntil","revokeAt","revokeIfReferenceEquals","revokeConsent","updateAPDforUser","refs","activatePurposeDeclarationMessage","ConsentReferenceResponseTypeName","fixRevoked","getConsentReference","req","_cs","consent","subjectId","ServiceProviderIS","ServiceProviderDefaultView","requestTypeName","responseTypeName","ValidationResponseTypeName","NotValidResponse","asyncId","valid","validateConsentReference","notValid","validFrom","purposeDeclaration","consentExpiration","toISOString","dataSubjectId","reportServiceUse","usageLog","addUsageRecord","addData","spis","datatype","rec","dbrec","subject","data","declareService","consentService","requestId","service","requestReference","serviceName","submitRequest","_send","report","result","serviceDeclarationIds","requiredServiceDeclarationIds","usageTime","reqState","validationRequestId","clientAddress","withInfligh","inflight","partyId","ifr","resp","removeInflight","usageReport","submitResponse","records","x","returnedDatatypes","selectServiceMessage","cachedConsentRefs","consentRefByUser","cachedConsentRef","consentServiceId","declarePurpose","cis","updateCSRef","csByUser","executeRequest","userConsentRefs","purposeId","conf","config","serviceAddress","_cis","newResponses","requestReferenceId","__cis","generateRequestReference","updateConsentRefInCache","validateConsentRef","LOGIN","SELECT_SERVICE","WAIT_FOR_CONSENT_REF","CONSENT_NOT_FOUND","SERVICE_V1","Header","alt","src","require","currentView","ClientView_","sendMessagesFor","loading","changeView","withMessages","setState","componentDidUpdate","actualView","returnButton","role","aria-hidden","size","defaultValue","width","dangerouslySetInnerHTML","__html","open","ClientView","EnduserUI","show","setShow","handleClose","onHide","bsPrefix","Title","Body","Footer","Button","variant","DeclarePurposePopup","useState","sdrefs","setSDRefs","closeButton","sp","setOpts","declTemplate","htmlFor","onChange","decls","declId","description","prefillPurposeDeclaration","dt","declarationPrefill","rows","multiple","sdref","placeholder","opts","spId","_spId","sdId","_sdId","addSDRef","hasUser","purpose","consentRef","consentRefDesc","dropdownToggle","forwardRef","updateConsentRefDropdown","style","Dropdown","Toggle","as","Menu","purposeView","updateMaxDuration","v","technicalDescription","needSignature","md","consentMaxDurationSeconds","prefillServiceDeclaration","DeclareServicePopup","createServiceProvider","firstname","lastname","fn","root","ext","studyFor","patient","immunizationFor","allValues","sort","alert","STATE_UPDATE","INITIALIZED","StateUpdateMessage","StateUpdater","url","_cachedState","_storeUnsubscriber","_messageListener","_channel","URL","href","subscribe","stateChanged","processMessage","addEventListener","removeEventListener","ps","selectProcess","postMessage","origin","unregisterListeners","registeredUpdaters","BackendStateUpdater","setter","caster","receiveNewState","newState","withUpdater","opener","channelId","BackendAPI","updater","LogView","filterFn","showSelf","scollToBottom","scroll","current","scrollHeight","index","_this","closePopup","logLines","slice","maxRows","popup","line","formatLogLine","MessageLog","ownProps","arenaFromState","LogButton","ModalFooter","render","findRenderer","ProcessUI","visible","setVisible","UILink","button","useStore","launch","registerListeners","launchUI","el","createConsentService","CS1Address","createData","defaultArena","processes","diagnoos","arst","logRenderers","createDemoArena","initialTheatre","active","SELECT_ARENA","Arena","useTranslation","_Theatre","PureComponent","Theatre","ArenaSelectorComponent","arenaNames","selectArenaMessage","ArenaSelector","ConsentServiceBackend","post","getValidUntil","floor","getConsents","ur","candidate","expiresIn","getServiceDeclaration","Number","CSBackend","createContext","ctx","useContext","rel","LanguageSelector","lang","lng","changeLanguage","language","backendUse","tRefs","_t","login","VeeraLayout","Tab","label","activeTab","cursor","Component","Tabs","onClickTabItem","tab","child","ConsentModal","buttonText","t_","dec","rowView","formatDate","isConsentActive","clientName","handleRevoke","MyConsents","Table","header","getPurposeDeclaration","purposeDeclName","endName","consentDescription","formatTimestamp","purposeName","ConsentHistory","getUsageLogRecords","usageRecordDescription","Modal","ActivePurposeDeclaration","signPopup","returnPopup","showConsentTab","bind","savedClientId","tabRef","toggleSignPopup","giveConsentByPurpose","activeDecl","showReturnPopup","close","ReturnScreen","clientNTR","Popover","MainView","LoginScreen","getActivePurposeDeclaration","CSEnduserUI","context","backendLink","csb","createRef","document","body","classList","add","resetState","Provider","timestamp","withTime","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Ria","aria-label","data-tab","click","version","xmlns","viewBox","Explainer","localStorage","getItem","hide","setItem","Page","basename","path","Loader","App","fallback","Boolean","hostname","rootReducer","combineReducers","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","su","source","registerGlobalListener","configureStore","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b9f0fb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-icon.bdeaa261.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.9f370677.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-est.bca08fff.png\";","module.exports = __webpack_public_path__ + \"static/media/tara-logo-et.5947b56d.png\";","module.exports = __webpack_public_path__ + \"static/media/arena-logo.03f46566.png\";","import { AnyAction } from 'redux';\n\nexport type InstanceName = string;\nexport type ProcessImplName = string;\nexport type ViewName = string;\n\n// state\n\nexport interface ProcessState<S> {\n  name: string; // instantsi nimi\n  title: string;\n  type: ProcessImplName; // implementatsiooni nimi?\n  view: ViewName; // \"olek\", tegelikult defineerib vaate\n  mem: S; // sisuline olek\n  queue: Message<any>[]; // outbound queue, reduceritest kasutamiseks?\n}\n\n// sõnumi-action\n\nexport const MESSAGE = \"Process/SEND_MESSAGE\";\n\nexport interface Message<PL extends Payload> extends AnyAction {\n  type: typeof MESSAGE;\n  arena: string;\n  sender: string;\n  receivers: string[];\n  message: PL;\n  now?: number;\n  random?: string;\n}\n\nexport interface Payload {\n  type: string;\n}\n\nexport interface ErrorPayload extends Payload {\n  type: \"error\";\n  error: string;\n}\n\nexport interface OKPayload extends Payload {\n  type: \"ack\"\n  response: \"OK\";\n}\n\nexport type MessageHandler<S, M extends Payload> = (process: ProcessState<S>, action: Message<M>) => ProcessState<S>;\n\nconst handlers: { [impl: string]: { [type: string]: MessageHandler<any, any> } } = {};\n\nexport function addHandler<P extends Payload>(impl: ProcessImplName, type: string, handler: MessageHandler<any, P>) {\n  if (handlers[impl] === undefined) {\n    handlers[impl] = {};\n  }\n\n  handlers[impl][type] = handler;\n}\n\nexport function addHandlerClass<P extends Payload, T extends GenericMessageHandler<any, ProcessState<any>, P, T>>(impl: ProcessImplName, c: { new(): T }) {\n  let handler = new c();\n  addHandler<P>(impl, handler.name, (p, a) => handler.handle(p, a));\n  return (obj?: Partial<P>) => ((values?: Partial<P>) => handler.createMessage({ ...(values === undefined ? {} : values), ...(obj === undefined ? {} : obj) }));\n}\n\nexport function reduceMessage<T>(process: ProcessState<T>, action: Message<Payload>): ProcessState<T> {\n  //\tconsole.log(`reduceMessage ${JSON.stringify(process)}, ${JSON.stringify(action)}`);\n  if (action.type !== MESSAGE || !action.receivers.includes(process.name)) {\n    return process;\n  }\n\n  if (handlers[process.type] === undefined) {\n    console.error(`No handler for ${process.name} (${process.type})`);\n    return process;\n  }\n\n  if (handlers[process.type][action.message.type] === undefined) {\n    console.error(`No handler for ${process.name} (${process.type}) for message ${action.message.type} (${JSON.stringify(action.message)})`);\n    return process;\n  }\n\n  return handlers[process.type][action.message.type](process, action);\n}\n\nexport function message<M extends Payload>(arena: string, sender: ProcessState<any>, receivers: string[], message: M): Message<M> {\n  return {\n    type: MESSAGE,\n    arena: arena,\n    sender: sender.name,\n    receivers: receivers.length === 0 ? [sender.name] : receivers,\n    message: message\n  };\n}\n\nexport abstract class GenericMessageHandler<S, PS extends ProcessState<S>, M extends Payload, GMH extends GenericMessageHandler<S, PS, M, GMH>> {\n  abstract name: string;\n\n  createMessage(obj: any): (M & { type: GMH[\"name\"] }) { return { ...obj, type: this.name }; };\n  handle(process: PS, action: Message<M>): PS { return { ...process, mem: this.updateMem(process.mem, action) }; };\n  updateMem(mem: S, action: Message<M>): S { return mem; };\n\n  send<NM extends Payload>(process: PS, message: Message<NM>): PS {\n    return { ...process, queue: process.queue.concat(message) };\n  }\n\n  withResponse<NM extends Payload>(process: PS, action: Message<M>, payload: NM): PS {\n    return this.send(process, message<NM>(action.arena, process, [action.sender], payload));\n  }\n\n  withErrorResponse(process: PS, action: Message<M>, error: string, extra?: any) {\n    return this.withResponse<ErrorPayload>(process, action, { type: \"error\", error: error, ...extra });\n  }\n\n  withOkResponse(process: PS, action: Message<M>) {\n    return this.withResponse<OKPayload>(process, action, { type: \"ack\", response: \"OK\" });\n  }\n\n}\n\n\n// UId\nexport const uiMap: { [type: string /* ProcessImplName */]: string /* URL */ } = {};\n\nexport function addUi(impl: ProcessImplName, url: string) {\n  uiMap[impl] = url;\n}\n\n// renderdus\n\nexport interface ProcessAndArena<S> {\n  process: ProcessState<S>;\n  arena: string;\n}\n\nexport type ProcessRenderer<S> = React.FC<ProcessAndArena<S>> | ((props: ProcessAndArena<S>) => string);\n\nconst defaultRender: ProcessRenderer<any> = ({ process }: ProcessAndArena<any>) => JSON.stringify(process.mem);\n\nconst renderers: { [impl: string /* ProcessImplName */]: { [view: string /* ViewName */]: ProcessRenderer<any> } } = {};\n\nexport function addRenderer(impl: ProcessImplName, view: ViewName, renderer: ProcessRenderer<any>) {\n  if (renderers[impl] === undefined) {\n    renderers[impl] = {};\n  }\n\n  renderers[impl][view] = renderer;\n}\n\nexport function findRenderer<S>(process: ProcessState<S>): ProcessRenderer<S> {\n  if (renderers[process.type] === undefined) {\n    console.error(`No renderer for ${process.type}`);\n    return defaultRender;\n  }\n\n  if (renderers[process.type][process.view] === undefined) {\n    console.error(`No renderer for ${process.type} and view ${process.view}`);\n    return defaultRender;\n  }\n\n  return renderers[process.type][process.view];\n}\n\nexport function updateMem<S>(process: ProcessState<S>, mem: Partial<S>): ProcessState<S> {\n  return { ...process, mem: { ...process.mem, ...mem } };\n}\n\nexport function updateDb<T, S extends ({ db: T; })>(process: ProcessState<S>, newdb: Partial<T>): ProcessState<S> {\n  return updateMem<S>(process, { db: { ...process.mem.db, ...newdb } } as Partial<S>);\n}","\ntype NamedObject = { name: string };\n\nexport interface ByNameStore<T extends NamedObject> {\n  byName: { [k: string]: T },\n  allNames: string[];\n}\n\nexport function addByName<T extends NamedObject>(old: ByNameStore<T> = emptyStore(), init: T): ByNameStore<T> {\n  return {\n    byName: { ...old.byName, [init.name]: init },\n    allNames: old.allNames.filter(n => n !== init.name).concat(init.name),\n  }\n}\n\nexport function reduceByName<T extends NamedObject>(old: ByNameStore<T> = emptyStore(), reducer: (i: T) => T): ByNameStore<T> {\n  return {\n    ...old,\n    byName: Object.assign({}, ...old.allNames.map((k) => ({ [k]: reducer(old.byName[k]) })))\n  }\n}\n\nexport function emptyStore<T extends NamedObject>(): ByNameStore<T> {\n  return { byName: {}, allNames: [] };\n}\n\nexport function fromArray<T extends NamedObject>(a: T[]): ByNameStore<T> {\n  return a.reduce(addByName, emptyStore());\n}","import { Store } from 'redux';\nimport { ProcessState, MESSAGE, Message, reduceMessage, Payload } from './Base';\nimport { ByNameStore, addByName, reduceByName, fromArray } from '../byNameStore';\n\n\n// Arena -- ports protsesse, mis omavahel sõnumeid vahetavad. \n// arenal on nimi?\n\nconst MESSAGE_DELAY = 300; // ms\n\n\ntype ProcessStore = ByNameStore<ProcessState<any>>;\nconst createProcess: (old: ProcessStore, init: ProcessState<any>) => ProcessStore = addByName;\nconst reduceProcesses: (old: ProcessStore, reducer: (p: ProcessState<any>) => ProcessState<any>) => ProcessStore = reduceByName;\n\nexport interface ArenaState {\n  name: string;\n  process: ProcessStore;\n  log: Message<any>[];\n}\n\nexport function createArena(name: string, ps: ProcessState<any>[]): ArenaState {\n  return { name: name, process: fromArray(ps), log: [] };\n}\n\nexport const CREATE_PROCESS = \"Arena/CREATE_PROCESS\";\n\nexport interface CreateProcess {\n  type: typeof CREATE_PROCESS;\n  arena: string;\n  process: ProcessState<any>;\n}\n\nexport const FLUSH_QUEUE = \"Arena/FLUSH_QUEUE\";\nexport interface FlushQueue {\n  type: typeof FLUSH_QUEUE;\n  arena: string;\n}\n\nexport type ArenaActionType = CreateProcess | FlushQueue | Message<any>;\n\n\nexport function reduceArena(state: ArenaState, action: ArenaActionType): ArenaState {\n  if (action.arena !== state.name) {\n    return state;\n  }\n\n  switch (action.type) {\n    case CREATE_PROCESS:\n      return { ...state, process: createProcess(state.process, action.process) };\n    case FLUSH_QUEUE:\n      return { ...state, process: reduceProcesses(state.process, (p) => ({ ...p, queue: [] })) };\n    case MESSAGE:\n      return { ...state, process: reduceProcesses(state.process, (p) => reduceMessage(p, action)), log: state.log.concat([action]) };\n    default:\n      return state;\n  }\n}\n\nfunction getQueuedForArena(p: ProcessStore): Message<any>[] {\n  return p.allNames.map((n) => p.byName[n].queue).flat(1).filter((d) => d !== undefined);\n}\n\nfunction getQueued(arenas: ByNameStore<ArenaState>): Message<any>[] {\n  return arenas.allNames.map(n => getQueuedForArena(arenas.byName[n].process)).flat(1);\n}\n\nexport function fixNowAndRandom<P extends Payload>(m: Message<P>): Message<P> {\n  return { ...m, now: (Date.now() / 1000) | 0, random: \"\" + Math.random() };\n}\n\nexport function queueListener(store: Store) {\n  let queued = getQueued(store.getState().theatre.arenas);\n\n  if (queued.length === 0) {\n    return;\n  }\n\n  let arenas = Object.keys(Object.assign({}, ...queued.map((m) => ({ [m.arena]: 1 }))))\n\n  arenas.forEach((a) => store.dispatch({ type: FLUSH_QUEUE, arena: a } as FlushQueue));\n\n  // queued.forEach((m) => store.dispatch(m));\n\n  const delayedSender = (store: Store, queue: Message<any>[]) => {\n    if (queue.length > 0) {\n      store.dispatch(fixNowAndRandom(queue.shift()!))\n      window.setTimeout(() => { delayedSender(store, queue); }, MESSAGE_DELAY);\n    }\n  };\n\n  window.setTimeout(() => { delayedSender(store, queued); }, MESSAGE_DELAY);\n}\n","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport { ProcessAndArena, ProcessState } from './process/Base';\n\nconsole.log(\"i18n init\");\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'et',\n    debug: process.env.NODE_ENV !== \"production\",\n    backend: {\n      loadPath: (window.location.pathname.includes(\"/ui/\") ? \"../../\" : \"\") + 'locales/{{lng}}/{{ns}}.json'\n    },\n    // MUST be nonempty?\n    whitelist: [ \"et\", \"en\"],\n    nonExplicitWhitelist: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n\nexport function languages() {\n  return i18n.options.whitelist;\n}\n\nexport function _(...labels: string[]): string {\n  return i18n.t(labels.join(\".\"));\n}\n\nexport type Translator = (...k: string[]) => string;\nexport type TranslatorWithParams = (k: string[], opts: any) => string;\n\nexport function __(props: ProcessAndArena<any>, labels: string[], options?: any): string {\n  const suffix = labels.join(\".\");\n  const arena = props.arena;\n  const proc = props.process.name;\n  const impl = props.process.type;\n  return i18n.t([\n    [arena, proc],\n    [arena, impl],\n    [impl],\n    []\n  ].map(pref => pref.concat(suffix).join(\".\")), options);\n}\n\nexport function styleNameFor(arena: string, name: string, type?: string): string {\n  return __({ arena: arena, process: { name: name, type: type! } as ProcessState<any> }, [\"stylename\"]);\n}\n\nexport function person(id: string, prop: string): string {\n  return i18n.t([`person.${id}.${prop}`, `person.default.${prop}`]).replace(\"ISIKUKOOD\", id);\n}\n\nexport function fullname(id: string): string {\n  return person(id, \"name\");\n}\n\nexport function business(id: string, prop: string): string {\n  return i18n.t(`business.${id}.${prop}`);\n}\n","import { Message, ProcessState, Payload } from \"../process/Base\";\nimport React from \"react\";\nimport { styleNameFor } from \"../i18n\";\n\n\nexport function receivers(receivers: string[]) {\n  return receivers.length === 1 ? receivers[0] : `(${receivers.join(\", \")})`;\n}\n\nfunction formatProcess(arena: string, name: string) {\n  return (<span className={`msg-${styleNameFor(arena, name)}`}>\n    {name}\n  </span>)\n}\n\nfunction formatProcessList(arena: string, names: string[]) {\n  if (names.length === 1) {\n    return formatProcess(arena, names[0]);\n  } else {\n    return (<>({names.map(\n      (r, i) => (\n        <>{i === 0 ? \", \" : undefined}{formatProcess(arena, r)}</>\n      )\n    )})</>)\n  }\n}\n\nexport function formatLogtime(epochSeconds: number): string {\n  // locale. Swedes got it right. As did Lithuanians and few other countries. YYYY-MM-DD dates.\n  return new Date(epochSeconds * 1000).toLocaleString(\"se\");\n}\n\nfunction formatHeader(msg: Message<Payload>, owner: ProcessState<any> | undefined, showPopup: ShowPopup) {\n  return (<>\n    <span onClick={ev => showPopup(msg)}>\n      <span className=\"link-underline\">{formatLogtime(msg.now!)}</span>\n      &nbsp;\n            </span>\n    {formatProcess(msg.arena, msg.sender)}\n    <span> » </span>\n    {formatProcessList(msg.arena, msg.receivers)}\n  </>\n  );\n}\n\nfunction cutJson(max: number) {\n  return (key: string, value: any) => (\n    typeof value !== \"string\"\n      ? value\n      : (value.length > max ? value.substring(0, max) + \"...\" : value)\n  );\n}\n\nfunction formatBody<M extends Payload>(msg: M) {\n  return `${msg.type}: ${JSON.stringify({ ...msg, type: undefined, statusUpdateChannel: undefined }, cutJson(40), \"  \")}`;\n}\n\nfunction defaultRenderer(msg: Message<any>, owner: ProcessState<any> | undefined, showPopup: ShowPopup) {\n  return (<>{formatHeader(msg, owner, showPopup)}:<br />{formatBody(msg.message)}</>);\n}\n\ntype ShowPopup = (m: Message<any>) => void;\n\nexport function LogRow(arena: string, i: number, msg: Message<any>, owner: (ProcessState<any> | undefined), showPopup: ShowPopup) {\n  return (<span>{findLogRenderer(msg)(msg, owner, showPopup)}</span>);\n}\n\nexport type LogRenderer = (msg: Message<any>, owner: ProcessState<any> | undefined, showPopup: ShowPopup) => any;\nconst renderers: { [arena: string]: { [type: string]: LogRenderer } } = {};\n\nfunction findLogRenderer(msg: Message<any>): LogRenderer {\n  if (renderers[msg.arena] === undefined) {\n    return defaultRenderer;\n  }\n\n  if (renderers[msg.arena][msg.message.type] === undefined) {\n    return defaultRenderer;\n  }\n\n  return renderers[msg.arena][msg.message.type];\n}\n\nexport function addLogRenderer(arena: string, type: string, renderer: LogRenderer) {\n  if (renderers[arena] === undefined) {\n    renderers[arena] = {};\n  }\n\n  renderers[arena][type] = renderer;\n}\n\nexport type LogRendererMap = { [type: string]: LogRenderer };\n\nexport function addLogRenderers(arena: string, r: LogRendererMap) {\n  Object.keys(r).forEach(type => addLogRenderer(arena, type, r[type]))\n}\n\n////////////////////////\n\nexport const consentRefApiLogRenderers: LogRendererMap = {\n  // \"CS/getConsentReference\": (a, m) => `Rakendus ${m.sender} kysib nousolekuteenuselt ${receivers(m.receivers)} nqusolekuviidet isiku ${m.message.subjectId} ja eesmargideklaratsiooni ${m.message.purposeDeclarationId} kohta.`\n}\n","import { ProcessImplName, ViewName, ProcessState } from \"../Base\";\nimport { PurposeDeclaration } from \"../consentService/types\";\n\n\nexport const ClientIS: ProcessImplName = \"ClientIS\";\nexport const ClientDefaultView: ViewName = \"loginView\";\n\nexport type PurposeDeclarationTemplate = Partial<PurposeDeclaration> & { purposeDeclarationId: string; }\n\n// the Client \"implements\" requests as defined in config\nexport interface ClientConfig {\n  // purpose declaration\n  purposeDeclarationId: string;\n  services: { // services it needs\n    serviceAddress: string;\n    serviceName: string;\n  }[];\n}\nexport interface ClientState {\n  ui: {\n    user?: string; // authenticated data subject id or null\n    service?: string;\n    response?: {\n      // used to match async messag\n      requestReferenceId: string;\n      purposeDeclarationId: string;\n      serviceAddress: string;\n      serviceName: string;\n      data: any;\n    }[];\n  };\n\n  db: {\n    consentServiceId: string; // should be per purpose\n    consentRefByUser: { [key: string]: { [key: string]: string | null; } }; // userid -> purposedeclarationid -> consentref\n    purpose: { // purposedeclarationid -> servicedesc[]\n      [key: string]: {\n        serviceAddress: string; // the actual communication address\n        serviceId: string;      // actual \"service\"\n      }[];\n    }\n  };\n\n  declTemplate?: PurposeDeclarationTemplate[];\n\n  config: ClientConfig[];\n}\n\nexport interface ClientPS extends ProcessState<ClientState> {\n  type: typeof ClientIS;\n  view: typeof ClientDefaultView;\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ProcessState, Payload, message, Message } from '../process/Base';\nimport { fixNowAndRandom } from './../process/Arena';\n\n// a button that sends a process-to-process(es) message. \n// if in a form, then values from most of the form elements \n// will be converted to message parameters with names of the \n// elements as keys (input with name zzz will be converted\n// to { \"zzz\": \"\" }).\n// if value starts with {, it will be parsed as JSON\n// for select-multiple the value is a list of values of all\n// selected options.\n// for checkbox the value is split on the first | and first half \n// will be used if box is checked and the other half (if present) \n// if not.\n\ninterface SendProps<S, M extends Payload> {\n  arena: string;\n  owner: ProcessState<S>;\n  target?: string | string[];\n  className?: string;\n  message: (values?: any) => M;\n  text: string;\n  messageToAction: (props: SendProps<S, M>, values?: any) => Message<M>;\n  onClick?: (ev?: any) => void;\n  title?: string;\n}\n\nfunction fixTarget(owner: ProcessState<any>, target?: string | string[]): string[] {\n  if (target !== undefined && typeof target === 'string') {\n    return [target];\n  }\n\n  if (target === undefined || target.length === 0) {\n    return [owner.name];\n  }\n\n  return target;\n}\n\nfunction messageToAction<S, M extends Payload>(props: SendProps<S, M>, values: Partial<M>): Message<M> {\n  return fixNowAndRandom<M>(message(\n    props.arena,\n    props.owner,\n    fixTarget(props.owner, props.target),\n    props.message(values)\n  ));\n}\n\nfunction parseOrRaw(s: any): any {\n  if (typeof s === \"string\" && s.startsWith(\"{\")) {\n    return JSON.parse(s);\n  }\n\n  return s;\n}\n\nfunction values(f: HTMLFormElement): any {\n  if (f === undefined || f === null) {\n    return {};\n  }\n\n  return Array.from(f.elements)\n    .map((u, i) => f.elements[i] as any as {\n      name: string;\n      value: any;\n      type: string;\n      options?: HTMLOptionsCollection;\n      checked?: boolean;\n    })\n    .filter(e => (e.name !== undefined && e.name !== null && e.name !== \"\" && !e.name.startsWith(\"_\")))\n    .map(e => {\n      if (e.type === \"select-multiple\") {\n        let out: any[] = [];\n        let i: number;\n        for (i = 0; i < e.options!.length; i++) {\n          if (e.options![i].selected) {\n            out.push(parseOrRaw(e.options![i].value));\n          }\n        }\n        return { [e.name]: out };\n      }\n\n      if (e.type === \"checkbox\") {\n        let values: (string | undefined)[] = e.value.split(\"|\", 2);\n        if (values.length === 1) {\n          values.push(undefined);\n        }\n        return { [e.name]: parseOrRaw(values[e.checked ? 0 : 1]) }\n      }\n      return { [e.name]: parseOrRaw(e.value) }\n    })\n    .reduce((o, c) => ({ ...o, ...c }), {});\n}\n\nclass Send<S, M extends Payload> extends React.Component<SendProps<S, M>> {\n\n  handleClick(ev: any) {\n    ev.preventDefault();\n    this.props.messageToAction(this.props, values(ev.currentTarget.form));\n    if (this.props.onClick) this.props.onClick(ev);\n  };\n\n  render() {\n    return <button\n      className={this.props.className === undefined ? \"btn btn-primary\" : this.props.className}\n      onClick={(ev) => this.handleClick(ev)}\n      title={this.props.title}\n    >{this.props.text}</button>\n  }\n}\n\nexport const SimpleSend = connect(null, { messageToAction })(Send);\n\n","import { ViewName, ProcessImplName, ProcessState } from '../Base';\n\nexport const ConsentService: ProcessImplName = \"ConsentService\";\nexport const ConsentServiceDefaultView: ViewName = \"loginView\";\n\n\nexport interface ConsentServicePS extends ProcessState<ConsentServiceState> {\n  type: typeof ConsentService;\n  view: typeof ConsentServiceDefaultView;\n}\n\nexport interface ServiceDeclaration {\n  serviceProviderId: string;\n  serviceDeclarationId: string;\n  name: string;\n  description: string;\n  technicalDescription: string;\n  consentMaxDurationSeconds: number; // integer\n  needSignature: boolean;\n  validUntil?: number; // timestamp as seconds from unix epoch?\n  maxCacheSeconds?: number;\n}\n\nexport interface ServiceDeclarationRef {\n  serviceProviderId: string;\n  serviceDeclarationId: string;\n}\n\nexport interface PurposeDeclaration {\n  clientId: string;\n  purposeDeclarationId: string;\n  name: string;\n  description: string;\n  services: ServiceDeclarationRef[];\n  validUntil?: number; // seconds from unix epoch\n  options: any;\n}\n\nexport interface Consent {\n  dataSubject: string;\n  clientId: string;\n  purposeDeclarationId: string;\n  validFrom: number;\n  validUntil: number;\n  revoked: boolean;\n  consentReference: string; // used only in protocol\n}\n\nexport interface UsageRecord {\n  usageTime: number; // seconds from unix epoch\n  serviceProviderId: string;\n  requestReference: string;\n  consentReference?: string;\n  subjectId: string;\n  clientId: string;\n  serviceDeclarationIds: string[];\n  result: \"OK\" | \"ACCESS_DENIED\" | \"OTHER_FAIL\";\n}\n\nexport interface PurposeDeclarationRef {\n  clientId: string;\n  purposeDeclarationId: string;\n}\n\nexport interface ActivePurposeDeclarationRef extends PurposeDeclarationRef {\n  callbackURL?: string;\n}\n\nexport interface ConsentServiceState {\n  ui: {\n    user?: string;\n    activePurposeDeclaration: {\n      [userid: string]: ActivePurposeDeclarationRef;\n    };\n  }\n\n  db: {\n    serviceDeclarations: ServiceDeclaration[];\n    purposeDeclarations: PurposeDeclaration[];\n    consents: Consent[];\n    usageLog: UsageRecord[];\n  }\n}\n\nexport function findFrom<T extends U, U extends any>(items: T[], example: U): T | undefined {\n  return items.find(\n    i => {\n      return Object.keys(example).filter(\n        k => (i as T)[k] !== (example as U)[k]\n      ).length === 0\n    }\n  );\n}\n\n\n","import { createHash } from \"crypto\";\nimport React from \"react\";\n\n\nexport function hash(input: string): string {\n  return createHash(\"sha256\").update(input).digest(\"hex\").substring(0, 6);\n}\n\n// converts transport address to organization id\nexport function address2org(address: string): string {\n  let m = address.match(\"^([^/]+/[^/]+/[^/]+)(/.*)?$\");\n  if (m === null) {\n    // not an X-Road member id or more specific address?\n    return address;\n  }\n\n  return m[1];\n}\n\n// simple renderer that converts even number of spaces followed by an asterisk and a\n// single space to a bullet of the bullet list. \n// for rendering declaration texts.\nexport function renderText(t: string) {\n  type OutElement = { text: string; indent: number; children: OutElement[] };\n  let stack: OutElement[] = [];\n\n  function last(a: OutElement[]): OutElement {\n    return a[a.length - 1];\n  }\n\n  stack.push({ text: \"\", indent: -1, children: [] });\n\n  t.split(\"\\n\").forEach(l => {\n    let pref = l.match(\"^((  )+\\\\* )(.*)$\");\n    if (pref === null) {\n      pref = [\"\", \"\", \"\", l];\n    }\n\n    let prefix = pref[1];\n    let text = pref[3];\n\n    while (prefix.length <= last(stack).indent) {\n      // the same level -> back up, so it will be actually a new level?\n      stack.pop();\n    }\n\n    if (prefix.length > last(stack).indent) {\n      // new level\n      last(stack).children.push({ text: text, indent: prefix.length, children: [] })\n      stack.push(last(last(stack).children));\n    }\n  });\n\n  function ul(children: OutElement[]) {\n    if (children.length === 0) {\n      return <></>;\n    }\n\n    return (\n      <ul className=\"desc-markup\">\n        {children.map(\n          c => <li className=\"desc-markup\">{c.text}{ul(c.children)}</li>\n        )}\n      </ul>\n    );\n  }\n\n  return stack[0].children.map(\n    c => <><p className=\"desc-markup\">{c.text}</p>{ul(c.children)}</>\n  );\n}","import { ServiceDeclaration, ConsentServiceState, findFrom, PurposeDeclaration, ConsentService, ConsentServicePS } from './types'\nimport { GenericMessageHandler, Message, addHandlerClass, updateDb } from '../Base';\nimport { address2org } from '../../util';\n\n// {Service,Purpose}Declaration API messages and their processing\n\ninterface ServiceDeclarationMessage extends ServiceDeclaration {\n  type: typeof AddServiceDeclarationMessage.name;\n}\n\nclass AddServiceDeclarationMessage extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, ServiceDeclarationMessage, AddServiceDeclarationMessage> {\n  name = \"CS/addServiceDeclaration\";\n\n  addServiceDeclaration(cs: ConsentServicePS, sd: ServiceDeclaration): ConsentServicePS {\n    return updateDb(cs, { serviceDeclarations: cs.mem.db.serviceDeclarations.concat(sd) });\n  }\n\n  handle(cs: ConsentServicePS, msg: Message<ServiceDeclarationMessage>) {\n    console.log(`addServiceDeclaration: ${JSON.stringify(msg)}`);\n\n    let decl = msg.message;\n\n    if (findFrom(\n      cs.mem.db.serviceDeclarations,\n      { serviceProviderId: decl.serviceProviderId, serviceDeclarationId: decl.serviceDeclarationId }) !== undefined) {\n\n      return this.withErrorResponse(cs, msg, \"duplicate_declaration\");\n    }\n\n    if (decl.serviceProviderId !== address2org(msg.sender)) {\n      return this.withErrorResponse(cs, msg, \"invalid_request\", {\n        msg: \"serviceProvcderId in declaration and message do not match\"\n      });\n    }\n\n    if (decl.serviceDeclarationId === undefined || !decl.serviceDeclarationId.match(\"^[!-~]+$\")) {\n      return this.withErrorResponse(cs, msg, \"invalid_request\", { msg: \"Invalid service declaration id\" });\n    }\n\n    return this.withOkResponse(this.addServiceDeclaration(cs, { ...msg.message, type: undefined } as ServiceDeclaration), msg);\n  }\n}\n\nexport const addServiceDeclaration = addHandlerClass(ConsentService, AddServiceDeclarationMessage);\n\ninterface PurposeDeclarationMessage extends PurposeDeclaration {\n  type: typeof AddPurposeDeclarationMessage.name;\n}\n\nclass AddPurposeDeclarationMessage extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, PurposeDeclarationMessage, AddPurposeDeclarationMessage> {\n  name = \"CS/addPurposeDeclaration\";\n\n  addPurposeDeclaration(cs: ConsentServicePS, pd: PurposeDeclaration): ConsentServicePS {\n    return updateDb(cs, { purposeDeclarations: cs.mem.db.purposeDeclarations.concat(pd) });\n  }\n\n  handle(cs: ConsentServicePS, msg: Message<PurposeDeclarationMessage>) {\n    console.log(`addPurposeDeclaration: ${JSON.stringify(msg)}`);\n\n    let decl = msg.message;\n\n    if (findFrom(\n      cs.mem.db.purposeDeclarations,\n      { clientId: decl.clientId, purposeDeclarationId: decl.purposeDeclarationId }) !== undefined) {\n\n      return this.withErrorResponse(cs, msg, \"duplicate_declaration\");\n    }\n\n    if (decl.clientId !== address2org(msg.sender)) {\n      return this.withErrorResponse(cs, msg, \"invalid_request\", { msg: \"clientId in declaration and message do not match\" });\n    }\n\n    if (decl.purposeDeclarationId === undefined || !decl.purposeDeclarationId.match(\"^[!-~]+$\")) {\n      return this.withErrorResponse(cs, msg, \"invalid_request\", { msg: \"Invalid purpose declaration id\" });\n    }\n\n    if (decl.services.length === 0 || decl.services.find(sdRef => {\n      // true if sdRerf does not match with any of existing servicedeclarations\n      return findFrom(cs.mem.db.serviceDeclarations, sdRef) === undefined;\n    }) !== undefined) {\n\n      return this.withErrorResponse(cs, msg, \"invalid_request\", { msg: \"Invalid or missing SD reference(s)\" });\n    }\n\n    return this.withOkResponse(this.addPurposeDeclaration(cs, { ...msg.message, type: undefined } as PurposeDeclaration), msg);\n  }\n}\n\nexport const addPurposeDeclaration = addHandlerClass(ConsentService, AddPurposeDeclarationMessage);\n","import { Payload, GenericMessageHandler, Message, addHandlerClass, message, updateDb } from '../Base';\nimport { ConsentServiceState, ConsentServicePS, ConsentService, findFrom, Consent, PurposeDeclarationRef, ActivePurposeDeclarationRef } from './types';\nimport { fetchConsentReference } from '../client/messages';\n\n// messages that the ConsentService UI can send \n\nexport interface LoginMessage extends Payload {\n  type: typeof LoginMessageHandler.name;\n  user?: string;\n}\n\nclass LoginMessageHandler extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, LoginMessage, LoginMessageHandler> {\n  name = \"CS/UI/login\";\n\n  handle(cs: ConsentServicePS, action: Message<LoginMessage>): ConsentServicePS {\n    console.log(\"login message: \", action);\n    return { ...cs, mem: { ...cs.mem, ui: { ...cs.mem.ui, user: action.message.user } } };\n  }\n}\n\nexport const loginMessage = addHandlerClass<LoginMessage, LoginMessageHandler>(ConsentService, LoginMessageHandler);\n\ninterface ConsentMessage extends Consent, Payload {\n  type: typeof GiveConsentMessageHandler.name;\n}\n\nclass GiveConsentMessageHandler extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, ConsentMessage, GiveConsentMessageHandler> {\n  name: string = \"CS/UI/giveConsent\";\n\n  addConsent(cs: ConsentServicePS, con: Consent): ConsentServicePS {\n    return updateDb<typeof cs.mem.db, ConsentServiceState>(cs, { consents: cs.mem.db.consents.concat(con) });\n  }\n\n  handle(cs: ConsentServicePS, msg: Message<ConsentMessage>): ConsentServicePS {\n    let newConsent = msg.message;\n    if (findFrom(cs.mem.db.purposeDeclarations, {\n      clientId: newConsent.clientId,\n      purposeDeclarationId: newConsent.purposeDeclarationId\n    }) === undefined) {\n      console.error(\"Attempt to add consent for unknown purpose declaration: \", newConsent);\n      return cs;\n    }\n\n    if (findFrom(cs.mem.db.consents, {\n      clientId: msg.message.clientId,\n      purposeDeclarationId: msg.message.purposeDeclarationId,\n      dataSubject: msg.message.dataSubject,\n      revoked: false\n    }) !== undefined) {\n      console.error(\"Attempt to add duplicate consent?\");\n      return cs;\n    }\n\n    console.log(\"Adding consent: \", msg.message);\n\n    let updatedCS = this.addConsent(cs, { ...msg.message, type: undefined } as Consent);\n\n    let activeUser = cs.mem.ui.user;\n    if (activeUser === undefined || cs.mem.ui.activePurposeDeclaration[activeUser] === undefined) {\n      // no user, no active pd --> no callback\n      return updatedCS;\n    }\n\n    let decl = cs.mem.ui.activePurposeDeclaration[activeUser];\n\n    // forget that we had pd selected.\n    let updatedCS2 = setActivePD(updatedCS, activeUser, undefined);\n\n    if (decl.clientId !== msg.message.clientId || decl.purposeDeclarationId !== msg.message.purposeDeclarationId\n      || decl.callbackURL === undefined) {\n      return updatedCS2;\n    }\n\n    // if the client application asked for callback, we send it a message about the \n    // consent being signed. reusing UI message from client implementation.\n    return this.send(updatedCS2, message(msg.arena, updatedCS, [decl.callbackURL],\n      fetchConsentReference({ purposeDeclarationId: decl.purposeDeclarationId })()\n    ));\n\n  }\n}\n\nexport const giveConsentMessage = addHandlerClass<ConsentMessage, GiveConsentMessageHandler>(ConsentService, GiveConsentMessageHandler);\n\n\ninterface RevokeConsentMessage extends Payload {\n  type: typeof RevokeConsentMessageHandler.name;\n  consentReference: string;\n  revokeAt: number;\n}\n\nclass RevokeConsentMessageHandler extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, RevokeConsentMessage, RevokeConsentMessageHandler> {\n  name: string = \"CS/UI/revokeConsent\";\n\n  revokeIfReferenceEquals(con: Consent, ref: RevokeConsentMessage): Consent {\n    if (con.consentReference === ref.consentReference) {\n      return { ...con, revoked: true, validUntil: ref.revokeAt };\n    }\n\n    return con;\n  }\n\n  revokeConsent(cs: ConsentServicePS, ref: RevokeConsentMessage): ConsentServicePS {\n    return updateDb(cs, { consents: cs.mem.db.consents.map(a => this.revokeIfReferenceEquals(a, ref)) });\n  }\n\n  handle(cs: ConsentServicePS, msg: Message<RevokeConsentMessage>): ConsentServicePS {\n    return this.revokeConsent(cs, msg.message);\n  }\n}\n\nexport const revokeConsentMessage = addHandlerClass<RevokeConsentMessage, RevokeConsentMessageHandler>(ConsentService, RevokeConsentMessageHandler);\n\nfunction updateAPDforUser<R extends { [user: string]: ActivePurposeDeclarationRef }>(refs: R, user: string, ref?: ActivePurposeDeclarationRef): R {\n  return { ...refs, [user]: ref };\n}\n\nexport function setActivePD(cs: ConsentServicePS, user: string, ref?: ActivePurposeDeclarationRef): ConsentServicePS {\n  return {\n    ...cs, mem: {\n      ...cs.mem, ui: {\n        ...cs.mem.ui,\n        activePurposeDeclaration: updateAPDforUser(cs.mem.ui.activePurposeDeclaration, user, ref)\n      }\n    }\n  }\n}\n\ninterface ActivatePurposeDeclaration extends Payload, PurposeDeclarationRef {\n  type: typeof ActivatePurposeDeclarationHandler.name;\n  user?: string;\n}\n\nclass ActivatePurposeDeclarationHandler extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, ActivatePurposeDeclaration, ActivatePurposeDeclarationHandler> {\n  name = \"CS/UI/activatePurposeDeclaration\";\n\n  handle(cs: ConsentServicePS, action: Message<ActivatePurposeDeclaration>): ConsentServicePS {\n    return setActivePD(\n      cs,\n      action.message.user === undefined ? cs.mem.ui.user! : action.message.user,\n      {\n        clientId: action.message.clientId,\n        purposeDeclarationId: action.message.purposeDeclarationId,\n      }\n    );\n  }\n}\n\nexport const activatePurposeDeclarationMessage = addHandlerClass<ActivatePurposeDeclaration, ActivatePurposeDeclarationHandler>(ConsentService, ActivatePurposeDeclarationHandler);\n","import { GenericMessageHandler, Message, Payload, addHandlerClass, updateDb } from \"../Base\";\nimport { ConsentServiceState, ConsentServicePS, findFrom, ConsentService, Consent } from \"./types\";\nimport { setActivePD } from \"./ui\";\n\ninterface ConsentReferenceRequest extends Payload {\n  type: typeof GetConsentReferenceMessage.name;\n  clientId: string;\n  purposeDeclarationId: string;\n  subjectId: string;\n  callbackURL?: string;\n  code?: string;\n}\n\nexport const ConsentReferenceResponseTypeName = \"CS/getConsentReference/response\";\nexport interface ConsentReferenceResponse extends Payload {\n  type: typeof ConsentReferenceResponseTypeName;\n  clientId: string;\n  purposeDeclarationId: string;\n  consentReference: string;\n}\n\nexport function fixRevoked(now: number): ((c: Consent) => Consent) {\n  return (c => ((!c.revoked && c.validUntil < now) ? { ...c, revoked: true } : c));\n}\n\nclass GetConsentReferenceMessage extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, ConsentReferenceRequest, GetConsentReferenceMessage> {\n  name: string = \"CS/getConsentReference\";\n\n  handle(cs: ConsentServicePS, msg: Message<ConsentReferenceRequest>): ConsentServicePS {\n\n    let req = msg.message;\n\n    // mark expired consents as revoked, as optimization\n    let _cs: ConsentServicePS = updateDb<typeof cs.mem.db, ConsentServiceState>(\n      cs, { consents: cs.mem.db.consents.map(fixRevoked(msg.now!)) }\n    );\n\n    const consent = findFrom(\n      _cs.mem.db.consents,\n      {\n        purposeDeclarationId: req.purposeDeclarationId,\n        dataSubject: req.subjectId,\n        revoked: false,\n      }\n    );\n\n    if (consent === undefined) {\n      return this.withErrorResponse(\n        setActivePD(_cs, req.subjectId, {\n          clientId: req.clientId,\n          purposeDeclarationId: req.purposeDeclarationId,\n          callbackURL: req.callbackURL\n        }),\n        msg,\n        \"consent_not_found\"\n      );\n    }\n\n    return this.withResponse<ConsentReferenceResponse>(\n      _cs,\n      msg,\n      {\n        type: ConsentReferenceResponseTypeName,\n        clientId: msg.message.clientId,\n        purposeDeclarationId: msg.message.purposeDeclarationId,\n        consentReference: consent.consentReference\n      })\n  }\n}\n\nexport const getConsentReference = addHandlerClass<ConsentReferenceRequest, GetConsentReferenceMessage>(ConsentService, GetConsentReferenceMessage);\n\n","import { ProcessImplName, ViewName, ProcessState, Payload } from \"../Base\";\nimport { ServiceDeclaration } from \"../consentService/types\";\n\n\nexport const ServiceProviderIS: ProcessImplName = \"ServiceProviderIS\";\nexport const ServiceProviderDefaultView: ViewName = \"defaultView\";\n\nexport interface ServiceProviderPS extends ProcessState<ServiceProviderState> {\n  type: typeof ServiceProviderIS;\n  view: typeof ServiceProviderDefaultView;\n}\n\n\nexport interface SecretRecord {\n  key: string;\n  type: string;\n  subject: string;\n  data: any;\n}\n\nexport interface ServiceConfig {\n  consentService: string;\n  serviceName: string;\n  requiredServiceDeclarationIds: string[];\n  returnedDatatypes: string[];\n}\n\nexport const requestTypeName = \"SP/request\";\n\nexport interface ServiceRequest extends Payload {\n  type: typeof requestTypeName;\n  clientId: string;\n  serviceName: string;\n  subjectId: string;\n  consentReference?: string;\n  requestReference: string;\n}\n\nexport const responseTypeName = \"SP/request/response\";\n\nexport interface ServiceResponse extends Payload {\n  asyncId: string; // response correlation id\n  records: SecretRecord[];\n}\n\nexport interface RequestState extends ServiceRequest {\n  validationRequestId: string; // internal, to match response\n  validationResponse?: any;\n  clientAddress: string;\n}\n\nexport type ServiceDeclarationTemplate = Partial<ServiceDeclaration> & { serviceDeclarationId: string };\n\nexport interface ServiceProviderState {\n  db: SecretRecord[];\n  services: ServiceConfig[];\n  inflight: RequestState[]; // requests received but not properly responded\n  declTemplate?: ServiceDeclarationTemplate[];\n}\n","import { GenericMessageHandler, Payload, Message, addHandlerClass } from \"../Base\";\nimport { ConsentServicePS, ConsentServiceState, ConsentService } from \"./types\";\nimport { address2org } from \"../../util\";\n\n\nexport interface ValidationRequest extends Payload {\n  type: typeof ValidationRequestHandler.name;\n  asyncId: string; // internal identifier to help SP to match answer to a request\n  partyId: string;\n  consentReference: string;\n  requestReference: string;\n}\n\nexport const ValidationResponseTypeName = \"CS/validateConsentReference/response\";\nexport interface ValidationResponse extends Payload {\n  type: typeof ValidationResponseTypeName;\n  asyncId: string; // internal identifier. same as in the request\n  valid: boolean;\n  consentReference?: string;\n  consentExpiration?: string; // timestamp\n  validationExpiration?: string;\n  dataSubjectId?: string;\n  clientId?: string;\n  purposeDeclarationId?: string;\n  serviceDeclarationId?: string[];\n}\n\nconst NotValidResponse: ValidationResponse = {\n  type: ValidationResponseTypeName,\n  asyncId: \"\",\n  valid: false,\n}\n\nclass ValidationRequestHandler extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, ValidationRequest, ValidationRequestHandler> {\n  name = \"CS/validateConsentReference\";\n\n  notValid(cs: ConsentServicePS, action: Message<ValidationRequest>): ConsentServicePS {\n    return this.withResponse<ValidationResponse>(cs, action, { ...NotValidResponse, asyncId: action.message.asyncId });\n  }\n\n  handle(cs: ConsentServicePS, action: Message<ValidationRequest>): ConsentServicePS {\n    let consent = cs.mem.db.consents.find(c => c.consentReference === action.message.consentReference);\n\n    if (consent === undefined) {\n      console.log(\"No such consent found: \", action.message.consentReference);\n      return this.notValid(cs, action);\n    }\n\n    let now = action.now!;\n\n    if (consent.revoked || now < consent.validFrom || now > consent.validUntil) {\n      console.log(`Consent ${consent} is not valid`);\n      return this.notValid(cs, action);\n    }\n\n    let sender = address2org(action.sender);\n\n    // find services that the sender of the request is allowed to provide under the consent in question\n    let purposeDeclaration = cs.mem.db.purposeDeclarations.find(\n      pd => (pd.clientId === consent!.clientId && pd.purposeDeclarationId === consent!.purposeDeclarationId)\n    );\n\n    if (purposeDeclaration === undefined) {\n      console.error(\"Cannot find purposeDeclaration that matches to an existing consent?\");\n      return this.notValid(cs, action);\n    }\n\n    // services that the asking party is allowed to provide with this consent\n    let services = (purposeDeclaration.services\n      .filter(s => s.serviceProviderId === sender)\n      .map(s => s.serviceDeclarationId)\n    );\n\n    if (sender === consent.clientId) {\n      let response: ValidationResponse = {\n        type: ValidationResponseTypeName,\n        asyncId: action.message.asyncId,\n        valid: true,\n        consentReference: action.message.consentReference,\n        consentExpiration: new Date(consent.validUntil * 1000).toISOString(),\n        dataSubjectId: consent.dataSubject,\n        clientId: consent.clientId,\n        purposeDeclarationId: consent.purposeDeclarationId,\n        // this is not empty if the client and service provider are the same\n        // (data repurposing using the consent)\n        serviceDeclarationId: services,\n      }\n      return this.withResponse(cs, action, response);\n    }\n\n    // it was not the party that declared the purpose. if it is party whose service declaration was\n    // referenced from the purpose declaration, then it still might get the answer\n    if (services.length > 0) {\n      let response: ValidationResponse = {\n        type: ValidationResponseTypeName,\n        asyncId: action.message.asyncId,\n        valid: true,\n        consentReference: action.message.consentReference,\n        consentExpiration: new Date(consent.validUntil * 1000).toISOString(),\n        dataSubjectId: consent.dataSubject,\n        clientId: consent.clientId,\n        serviceDeclarationId: services,\n      }\n      return this.withResponse(cs, action, response);\n    }\n\n    // not the client, not the service provider => not authorized to get anything.\n    return this.notValid(cs, action);\n  }\n}\n\nexport const validateConsentReference = addHandlerClass<ValidationRequest, ValidationRequestHandler>(ConsentService, ValidationRequestHandler);\n\n","import { UsageRecord, ConsentServiceState, ConsentServicePS, ConsentService } from \"./types\";\nimport { GenericMessageHandler, Message, addHandlerClass, Payload, updateDb } from \"../Base\";\n\ninterface ServiceUseMessage extends UsageRecord, Payload {\n  type: typeof ReportServiceUseMessage.name;\n}\n\nclass ReportServiceUseMessage extends GenericMessageHandler<ConsentServiceState, ConsentServicePS, ServiceUseMessage, ReportServiceUseMessage> {\n  name: string = \"CS/reportServiceUsage\";\n\n  addUsageRecord(cs: ConsentServicePS, sd: UsageRecord) {\n    return updateDb(cs, { usageLog: cs.mem.db.usageLog.concat(sd) });\n  }\n\n  handle(cs: ConsentServicePS, msg: Message<ServiceUseMessage>) {\n    return this.withOkResponse(this.addUsageRecord(cs, { ...msg.message, type: undefined } as UsageRecord), msg);\n  }\n}\n\nexport const reportServiceUse = addHandlerClass<ServiceUseMessage, ReportServiceUseMessage>(ConsentService, ReportServiceUseMessage);\n\n","import { GenericMessageHandler, Payload, Message, message, addHandlerClass, ErrorPayload } from \"../Base\";\nimport { ServiceProviderState, ServiceProviderPS, ServiceProviderIS, SecretRecord, ServiceRequest, requestTypeName, RequestState, ServiceConfig } from \"./types\";\nimport { addServiceDeclaration } from \"../consentService/declarationAPI\";\nimport { validateConsentReference, ValidationResponse, ValidationResponseTypeName } from \"../consentService/validationAPI\";\nimport { reportServiceUse } from \"../consentService/reportingAPI\";\nimport { submitResponse } from \"../client/messages\";\nimport { hash, address2org } from \"../../util\";\nimport { UsageRecord } from \"../consentService/types\";\n\ninterface DataPayload extends Payload {\n  type: typeof DataEntryHandler.name;\n  key: string;\n  datatype?: string;\n  subject?: string;\n  data?: any;\n}\n\nclass DataEntryHandler extends GenericMessageHandler<ServiceProviderState, ServiceProviderPS, DataPayload, DataEntryHandler> {\n  name = \"ServiceProvider/UI/addData\";\n\n  handle(spis: ServiceProviderPS, action: Message<DataPayload>): ServiceProviderPS {\n    if (action.message.datatype === undefined || action.message.datatype === \"\") {\n      return { ...spis, mem: { ...spis.mem, db: spis.mem.db.filter(r => (r.key !== action.message.key)) } };\n    }\n\n    let rec = action.message;\n    let dbrec: SecretRecord = { key: rec.key, type: rec.datatype!, subject: rec.subject!, data: rec.data! };\n\n    return { ...spis, mem: { ...spis.mem, db: spis.mem.db.concat(dbrec) } }\n  }\n}\n\nexport const addData = addHandlerClass<DataPayload, DataEntryHandler>(ServiceProviderIS, DataEntryHandler);\n\nclass SendDeclarationHandler extends GenericMessageHandler<ServiceProviderState, ServiceProviderPS, Payload, SendDeclarationHandler> {\n  name = \"ServiceProvider/UI/declareService\";\n\n  handle(spis: ServiceProviderPS, action: Message<Payload>): ServiceProviderPS {\n    // FIXME: korrektne CS väärtus\n    return this.send(spis, message(action.arena, spis, [spis.mem.services[0].consentService], addServiceDeclaration()(action.message)))\n  }\n}\n\nexport const declareService = addHandlerClass(ServiceProviderIS, SendDeclarationHandler);\n\nfunction requestId(req: ServiceRequest, service: ServiceConfig): string {\n  let input = req.clientId + req.consentReference + req.requestReference +\n    req.serviceName + req.subjectId + service.consentService;\n\n  return hash(input);\n}\n\nclass ProtectedRequestHandler extends GenericMessageHandler<ServiceProviderState, ServiceProviderPS, ServiceRequest, ProtectedRequestHandler> {\n  name = requestTypeName;\n  handle(spis: ServiceProviderPS, action: Message<ServiceRequest>): ServiceProviderPS {\n\n    function _send<P extends Payload>(receivers: string[], m: P): Message<P> {\n      return message(action.arena, spis, receivers, m);\n    }\n\n    let req: ServiceRequest = action.message;\n    // validate request (find service record from config)\n    let service = spis.mem.services.find(s => s.serviceName === req.serviceName);\n    if (service === undefined) {\n      // no reporting -- \"the request did not reach the relevant endpoint\"\n      return this.withErrorResponse(spis, action, \"invalid_request\");\n    }\n\n    if (req.clientId !== address2org(action.sender)) {\n      // FIXME: here we COULD report something?\n      return this.withErrorResponse(spis, action, \"invalid_request\");\n    }\n\n    if (!req.consentReference) {\n      const report: UsageRecord = {\n        result: \"ACCESS_DENIED\",\n        clientId: req.clientId,\n        subjectId: req.subjectId,\n        serviceDeclarationIds: service.requiredServiceDeclarationIds,\n        requestReference: req.requestReference,\n        serviceProviderId: address2org(spis.name),\n        usageTime: action.now!,\n      }\n      return this.send(\n        this.send(\n          spis,\n          _send([service.consentService], reportServiceUse()(report))\n        ),\n        _send<ErrorPayload>([action.sender], { type: \"error\", error: \"ACCESS_DENIED\" })\n      )\n    }\n\n    // store inflight query\n    // spis.mem.inflight += [inflight]\n    let reqState: RequestState = {\n      ...req,\n      validationRequestId: requestId(req, service),\n      clientAddress: action.sender,\n    }\n    let withInfligh: ServiceProviderPS = {\n      ...spis, mem: { ...spis.mem, inflight: spis.mem.inflight.concat(reqState) }\n    };\n\n    // send consent reference validation request\n    return this.send(\n      withInfligh,\n      message(\n        action.arena,\n        withInfligh,\n        [service.consentService],\n        validateConsentReference()({\n          asyncId: reqState.validationRequestId,\n          partyId: spis.name,\n          consentReference: req.consentReference,\n          requestReference: req.requestReference,\n        })\n      )\n    );\n  }\n}\n\nexport const submitRequest = addHandlerClass<ServiceRequest, ProtectedRequestHandler>(ServiceProviderIS, ProtectedRequestHandler);\n\n\nclass ValidationResponseHandler extends GenericMessageHandler<ServiceProviderState, ServiceProviderPS, ValidationResponse, ValidationResponseHandler> {\n  name = ValidationResponseTypeName;\n\n  handle(spis: ServiceProviderPS, action: Message<ValidationResponse>): ServiceProviderPS {\n\n    function _send<P extends Payload>(receivers: string[], m: P): Message<P> {\n      return message(action.arena, spis, receivers, m);\n    }\n\n    const reqState = spis.mem.inflight.find(ifr => ifr.validationRequestId === action.message.asyncId);\n    const resp = action.message;\n\n    function removeInflight(spis: ServiceProviderPS): ServiceProviderPS {\n      return {\n        ...spis, mem: {\n          ...spis.mem, inflight: spis.mem.inflight.filter(\n            ifr => (reqState === undefined || ifr.requestReference !== reqState.requestReference)\n          )\n        }\n      };\n    }\n\n\n    if (reqState === undefined) {\n      console.error(\"Failed to find original inflight request, ignoring the response.\");\n      return spis;\n    }\n\n    const service = spis.mem.services.find(s => s.serviceName === reqState.serviceName);\n    if (service === undefined) {\n      console.error(\"Failed to find the service specified in the original inflight request, ignoring the response.\");\n      return removeInflight(spis);\n    }\n\n    const usageReport: UsageRecord = {\n      result: \"OK\", // will be overwritten\n      clientId: reqState.clientId,\n      subjectId: reqState.subjectId,\n      serviceDeclarationIds: service.requiredServiceDeclarationIds,\n      consentReference: reqState.consentReference,\n      requestReference: reqState.requestReference,\n      serviceProviderId: address2org(spis.name),\n      usageTime: action.now!,\n    }\n\n    if (!resp.valid\n      || resp.clientId !== reqState.clientId\n      || resp.consentReference !== reqState.consentReference\n      || resp.dataSubjectId !== reqState.subjectId\n      || resp.serviceDeclarationId === undefined\n      // (there is a required serviceDeclarationId that is not on the consent)\n      || service.requiredServiceDeclarationIds\n        .find(sd => !resp.serviceDeclarationId!.includes(sd))\n    ) {\n      return this.send(\n        this.send(\n          removeInflight(spis),\n          _send([service.consentService], reportServiceUse()({ ...usageReport, result: \"ACCESS_DENIED\" }))\n        ),\n        _send<ErrorPayload>([reqState.clientAddress], { type: \"error\", error: \"ACCESS_DENIED\" })\n      )\n    };\n\n    return this.send(\n      this.send(\n        removeInflight(spis),\n        _send([service.consentService], reportServiceUse()({ ...usageReport, result: \"OK\" }))\n      ),\n      _send(\n        [reqState.clientAddress],\n        submitResponse()({\n          records: spis.mem.db\n            .filter(x => x.subject === reqState.subjectId)\n            .filter(x => service.returnedDatatypes.includes(x.type)),\n          asyncId: reqState.requestReference\n        })\n      )\n    );\n  }\n}\n\nexport const validationResponse = addHandlerClass<ValidationResponse, ValidationResponseHandler>(ServiceProviderIS, ValidationResponseHandler);\n","import { addHandlerClass, Payload, GenericMessageHandler, Message, message, ErrorPayload, updateDb } from \"../Base\";\nimport { ClientIS, ClientState, ClientPS } from \"./types\";\n\nimport { addPurposeDeclaration } from \"../consentService/declarationAPI\";\nimport { getConsentReference, ConsentReferenceResponse, ConsentReferenceResponseTypeName } from \"../consentService/referenceAPI\";\n\nimport { submitRequest } from \"../serviceProvider/messages\";\nimport { ServiceResponse, responseTypeName } from \"../serviceProvider/types\";\n\nimport { hash, address2org } from \"../../util\";\nimport { validateConsentReference } from \"../consentService/validationAPI\";\n\n\ninterface LoginMessage extends Payload {\n  type: typeof LoginMessageHandler.name;\n  user?: string;\n}\n\nclass LoginMessageHandler extends GenericMessageHandler<ClientState, ClientPS, LoginMessage, LoginMessageHandler> {\n  name = \"Client/UI/login\";\n\n  handle(cs: ClientPS, action: Message<LoginMessage>): ClientPS {\n    // reset cached responses when logging in.\n    return { ...cs, mem: { ...cs.mem, ui: { ...cs.mem.ui, user: action.message.user, service: undefined, response: [] } } };\n  }\n}\n\nexport const loginMessage = addHandlerClass<LoginMessage, LoginMessageHandler>(ClientIS, LoginMessageHandler);\n\ninterface SelectServiceMessage extends Payload {\n  type: typeof SelectServiceMessageHandler.name;\n  service?: string;\n}\n\nclass SelectServiceMessageHandler extends GenericMessageHandler<ClientState, ClientPS, SelectServiceMessage, SelectServiceMessageHandler> {\n  name = \"Client/UI/selectService\";\n\n  handle(cs: ClientPS, action: Message<SelectServiceMessage>): ClientPS {\n    let _cs = { ...cs, mem: { ...cs.mem, ui: { ...cs.mem.ui, service: action.message.service, response: [] } } };\n\n    if (_cs.mem.ui.service !== undefined) {\n      // if cached consentref is missing (not asked or known to not exist), ask automatically for new\n      let cachedConsentRefs = _cs.mem.db.consentRefByUser[_cs.mem.ui.user!];\n      let cachedConsentRef = cachedConsentRefs === undefined ? undefined : cachedConsentRefs[_cs.mem.ui.service!];\n      if (cachedConsentRef === undefined || cachedConsentRef === null) {\n        return this.send(_cs, message(action.arena, cs, [cs.mem.db.consentServiceId],\n          getConsentReference({\n            clientId: address2org(cs.name),\n            subjectId: cs.mem.ui.user,\n            purposeDeclarationId: action.message.service,\n            callbackURL: cs.name, // actual address for callback message\n          })()\n        ));\n      }\n    }\n\n    return _cs;\n  }\n}\n\nexport const selectServiceMessage = addHandlerClass<SelectServiceMessage, SelectServiceMessageHandler>(ClientIS, SelectServiceMessageHandler);\n\n\n\nclass SendDeclarationHandler extends GenericMessageHandler<ClientState, ClientPS, Payload, SendDeclarationHandler> {\n  name = \"Client/UI/declarePurpose\";\n\n  handle(cis: ClientPS, action: Message<Payload>): ClientPS {\n    return this.send(cis, message(action.arena, cis, [cis.mem.db.consentServiceId], addPurposeDeclaration()(action.message)))\n  }\n}\n\nexport const declarePurpose = addHandlerClass(ClientIS, SendDeclarationHandler);\n\ninterface FetchConsentReferencePayload extends Payload {\n  type: typeof FetchConsentReferenceHandler.name;\n  purposeDeclarationId: string;\n}\n\nclass FetchConsentReferenceHandler extends GenericMessageHandler<ClientState, ClientPS, FetchConsentReferencePayload, FetchConsentReferenceHandler> {\n  name = \"Client/UI/fetchConsentReference\";\n\n  handle(cis: ClientPS, action: Message<FetchConsentReferencePayload>): ClientPS {\n    return this.send(\n      updateDb<typeof cis.mem.db, ClientState>({\n        ...cis,\n        mem: {\n          ...cis.mem,\n          ui: {\n            ...cis.mem.ui,\n            service: action.message.purposeDeclarationId\n          }\n        }\n      }, {\n        consentRefByUser: updateCSRef(\n          cis.mem.db.consentRefByUser,\n          cis.mem.ui.user!,\n          action.message.purposeDeclarationId,\n          undefined\n        )\n      }),\n      message(action.arena, cis, [cis.mem.db.consentServiceId], getConsentReference({\n        clientId: address2org(cis.name),\n        purposeDeclarationId: action.message.purposeDeclarationId,\n        subjectId: cis.mem.ui.user,\n        callbackURL: cis.name, // actual address for callback message\n      })()\n      ))\n  }\n}\n\nexport const fetchConsentReference = addHandlerClass<FetchConsentReferencePayload, FetchConsentReferenceHandler>(ClientIS, FetchConsentReferenceHandler);\n\nfunction updateCSRef<T extends { [k: string]: any }>(csByUser: T, user: string, purposeDeclarationId: string, consentReference?: string | null): T {\n  return {\n    ...csByUser,\n    [user]: { ...csByUser[user], [purposeDeclarationId]: consentReference }\n  };\n}\n\nclass ConsentReferenceResponseHandler extends GenericMessageHandler<ClientState, ClientPS, ConsentReferenceResponse, ConsentReferenceResponseHandler> {\n  name = ConsentReferenceResponseTypeName;\n\n  handle(cis: ClientPS, action: Message<ConsentReferenceResponse>): ClientPS {\n    return {\n      ...cis, mem: {\n        ...cis.mem, db: {\n          ...cis.mem.db,\n          consentRefByUser: updateCSRef(\n            cis.mem.db.consentRefByUser,\n            cis.mem.ui.user!,\n            action.message.purposeDeclarationId,\n            action.message.consentReference\n          )\n        }\n      }\n    };\n  }\n}\n\nexport const handleConsentRefernceResponse = addHandlerClass<ConsentReferenceResponse, ConsentReferenceResponseHandler>(ClientIS, ConsentReferenceResponseHandler);\n\ninterface ExecuteMessage extends Payload {\n  type: typeof ExecuteRequestHandler.name;\n  requestReference: string; // generated in UI because it should not be done here.\n  purposeId: string;\n  serviceAddress?: string; // only execute one request.\n  serviceName?: string;\n}\n\nclass ExecuteRequestHandler extends GenericMessageHandler<ClientState, ClientPS, ExecuteMessage, ExecuteRequestHandler> {\n  name = \"Client/UI/executeRequest\";\n\n  handle(cis: ClientPS, action: Message<ExecuteMessage>): ClientPS {\n    let req = action.message;\n\n    let userConsentRefs = cis.mem.db.consentRefByUser[cis.mem.ui.user!];\n    let consentReference = userConsentRefs === undefined ? undefined : userConsentRefs[req.purposeId];\n\n    let conf = cis.mem.config.find(c => c.purposeDeclarationId === req.purposeId);\n    if (conf === undefined) {\n      console.error(\"Unknown purpose? \", req);\n      return cis;\n    }\n\n    // send request for all services defined in configuration, or to those that match.\n    return (conf.services\n      .filter(service => ((req.serviceAddress === undefined || req.serviceAddress === service.serviceAddress)\n        && (req.serviceName === undefined || req.serviceName === service.serviceName)))\n      .reduce((_cis, service) => {\n        let requestReference = hash(req.requestReference + service.serviceName + service.serviceAddress);\n        // eslint-disable-next-line\n        let cis = undefined;\n\n        // replace or add response record for this particular purpose/serviceprovider/service\n        let newResponses = (_cis.mem.ui.response || []).filter(\n          r => !(r.purposeDeclarationId === req.purposeId\n            && r.serviceAddress === service.serviceAddress\n            && r.serviceName === service.serviceName)\n        ).concat({\n          requestReferenceId: requestReference,\n          purposeDeclarationId: req.purposeId,\n          serviceAddress: service.serviceAddress,\n          serviceName: service.serviceName,\n          data: null,\n        })\n\n        let __cis = {\n          ..._cis, mem: {\n            ..._cis.mem, ui: {\n              ..._cis.mem.ui,\n              response: newResponses,\n            }\n          }\n        };\n\n        return this.send(__cis, message(action.arena, __cis, [service.serviceAddress], submitRequest({\n          clientId: address2org(__cis.name),\n          serviceName: service.serviceName,\n          subjectId: __cis.mem.ui.user,\n          consentReference: consentReference!,\n          requestReference: requestReference,\n        })()))\n      }, cis));\n  }\n}\n\nexport const executeRequest = addHandlerClass<ExecuteMessage, ExecuteRequestHandler>(ClientIS, ExecuteRequestHandler);\nexport function generateRequestReference(): string {\n  return hash(\"\" + ((Math.random() * 1000000) | 0));\n}\n\n\nclass ServiceResponseHandler extends GenericMessageHandler<ClientState, ClientPS, ServiceResponse, ServiceResponseHandler> {\n  name = responseTypeName;\n\n  handle(cis: ClientPS, action: Message<ServiceResponse>): ClientPS {\n    return {\n      ...cis, mem: {\n        ...cis.mem, ui: {\n          ...cis.mem.ui,\n          response: (cis.mem.ui.response || []).map(\n            r => {\n              if (r.requestReferenceId === action.message.asyncId) {\n                return { ...r, data: action.message.records }\n              } else {\n                return r;\n              }\n            }\n          )\n        }\n      }\n    }\n  }\n\n}\n\nexport const submitResponse = addHandlerClass<ServiceResponse, ServiceResponseHandler>(ClientIS, ServiceResponseHandler);\n\nclass ErrorResponseHandler extends GenericMessageHandler<ClientState, ClientPS, ErrorPayload, ErrorResponseHandler> {\n  name = \"error\";\n\n  handle(cis: ClientPS, action: Message<ErrorPayload>): ClientPS {\n    switch (action.message.error) {\n      // assume the respone came for logged in user and for selected service\n      case \"consent_not_found\":\n        return updateDb<typeof cis.mem.db, ClientState>(cis, {\n          consentRefByUser: updateCSRef(\n            cis.mem.db.consentRefByUser,\n            cis.mem.ui.user!,\n            cis.mem.ui.service!,\n            null\n          )\n        });\n    }\n\n    console.log(\"Unknown error, ignoring: \", action);\n    return cis;\n  }\n}\n\naddHandlerClass<ErrorPayload, ErrorResponseHandler>(ClientIS, ErrorResponseHandler);\n\ninterface UpdateConsentReferencePayload extends Payload {\n  type: typeof UpdateConsentReferenceHandler.name;\n  purposeDeclarationId?: string;\n  consentReference?: string;\n}\n\nclass UpdateConsentReferenceHandler extends GenericMessageHandler<ClientState, ClientPS, UpdateConsentReferencePayload, UpdateConsentReferenceHandler> {\n  name = \"CS/UI/dumpConsentRefCache\";\n\n  handle(cis: ClientPS, action: Message<UpdateConsentReferencePayload>): ClientPS {\n    if (action.message.purposeDeclarationId !== undefined) {\n      return updateDb<typeof cis.mem.db, ClientState>(cis, {\n        consentRefByUser: updateCSRef(\n          cis.mem.db.consentRefByUser,\n          cis.mem.ui.user!,\n          action.message.purposeDeclarationId,\n          action.message.consentReference\n        )\n      });\n    }\n    return updateDb<typeof cis.mem.db, ClientState>(cis, { consentRefByUser: {} });\n  }\n}\n\nexport const updateConsentRefInCache = addHandlerClass<UpdateConsentReferencePayload, UpdateConsentReferenceHandler>(ClientIS, UpdateConsentReferenceHandler);\n\ninterface ValidateConsentRefMessage extends Payload {\n  consentServiceId: string;\n  consentReference: string;\n}\n\nclass ValidateConsentRefMessageHandler extends GenericMessageHandler<ClientState, ClientPS, ValidateConsentRefMessage, ValidateConsentRefMessageHandler> {\n  name = \"Client/UI/validateConsentRef\";\n\n  handle(cis: ClientPS, action: Message<ValidateConsentRefMessage>): ClientPS {\n    return this.send(\n      cis,\n      message(action.arena, cis, [action.message.consentServiceId || cis.mem.db.consentServiceId],\n        validateConsentReference({\n          partyId: cis.name,\n          consentReference: action.message.consentReference\n        })()\n      )\n    );\n  }\n}\n\nexport const validateConsentRef = addHandlerClass<ValidateConsentRefMessage, ValidateConsentRefMessageHandler>(ClientIS, ValidateConsentRefMessageHandler);\n","import * as React from \"react\";\nimport { ProcessAndArena, Message, message } from \"../Base\";\nimport { ClientState } from \"./types\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { SimpleSend } from \"../../components/SendButton\";\nimport { loginMessage, selectServiceMessage, fetchConsentReference, executeRequest, generateRequestReference } from \"./messages\";\nimport { connect } from \"react-redux\";\nimport { __, fullname } from \"../../i18n\";\n\ninterface ClientViewProps extends ProcessAndArena<ClientState> {\n  t: any;\n  send: (props: ClientViewProps, values?: any) => Message<any>;\n}\n\n\nconst LOGIN: ClientViewState = \"login\";  // no authenticated user\nconst SELECT_SERVICE: ClientViewState = \"selectService\"; // user authenticated, service not selected\nconst WAIT_FOR_CONSENT_REF: ClientViewState = \"waitForConsent\"; //  no idea if user has consent\nconst CONSENT_NOT_FOUND: ClientViewState = \"consentNotFound\"; // prompt for consent\nconst SERVICE_V1: ClientViewState = \"serviceV1\";\n\ntype ClientViewState = \"login\" | \"selectService\" | \"waitForConsent\" | \"consentNotFound\" | \"serviceV1\";\n\ninterface State {\n  view: ClientViewState;\n  loading: boolean;\n}\n\nconst Header = ({ t, props }: { t: any; props: ClientViewProps }) => (\n  <div className=\"app-header\">\n    <SimpleSend\n      arena={props.arena}\n      owner={props.process}\n      className=\"btn btn-success btn-health\"\n      text={t('logout')}\n      message={loginMessage()} />\n    <div className=\"app-user-icon\">\n      <img alt=\"user icon\" src={require('./../../static/assets/images/user-icon.svg')} />\n    </div>\n    <p className=\"app-user\">{t('hello').replace(\"USERNAME\", fullname(props.process.mem.ui.user!))}</p>\n  </div>\n);\n\nfunction send(props: ClientViewProps, values?: any): Message<any> {\n  return message(props.arena, props.process, [props.process.name], values());\n}\n\nfunction currentView(m: ClientState): ClientViewState {\n  if (m.ui.user === undefined) {\n    return LOGIN;\n  } else if (m.ui.service === undefined) {\n    return SELECT_SERVICE;\n  } else if (m.db.consentRefByUser[m.ui.user] === undefined ||\n    m.db.consentRefByUser[m.ui.user][m.ui.service] === undefined) {\n    return WAIT_FOR_CONSENT_REF;\n  } else if (m.db.consentRefByUser[m.ui.user][m.ui.service] === null) {\n    return CONSENT_NOT_FOUND;\n  } else {\n    return SERVICE_V1;\n  }\n}\n\nclass ClientView_ extends React.PureComponent<ClientViewProps, State> {\n\n  constructor(props: ClientViewProps) {\n    super(props);\n    this.state = { loading: false, view: currentView(props.process.mem) };\n    switch (this.state.view) {\n      case WAIT_FOR_CONSENT_REF:\n        this.sendMessagesFor(this.state.view);\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    let actualView = currentView(this.props.process.mem);\n    if (actualView !== this.state.view) {\n      this.setState({ view: actualView });\n    }\n  }\n\n  sendMessagesFor = (view: ClientViewState) => {\n    const mem = this.props.process.mem;\n    switch (view) {\n      case WAIT_FOR_CONSENT_REF:\n        if (mem.ui.user !== undefined && mem.ui.service !== undefined && (\n          mem.db.consentRefByUser[mem.ui.user] === undefined ||\n          mem.db.consentRefByUser[mem.ui.user][mem.ui.service] === undefined ||\n          mem.db.consentRefByUser[mem.ui.user][mem.ui.service] === null)\n        ) {\n          this.props.send(this.props, fetchConsentReference({ purposeDeclarationId: mem.ui.service }));\n        }\n        return;\n\n      case SERVICE_V1:\n        this.props.send(this.props, executeRequest({\n          requestReference: generateRequestReference(),\n          purposeId: mem.ui.service\n        }));\n        return;\n    }\n  }\n\n  state = {\n    view: LOGIN,\n    loading: false\n  };\n\n  changeView = (view: ClientViewState, withMessages = true) => {\n    this.setState({ loading: true });\n    if (withMessages) {\n      this.sendMessagesFor(view);\n    }\n    setTimeout(() => {\n      this.setState({ loading: false, view: view });\n    }, 600);\n  };\n\n  render() {\n    const cis = this.props.process;\n    const m = cis.mem;\n    const t = this.props.t;\n\n    const returnButton = (\n      <SimpleSend\n        arena={this.props.arena}\n        owner={this.props.process}\n        className=\"btn btn-light border\"\n        onClick={() => this.changeView(SELECT_SERVICE)}\n        message={selectServiceMessage()}\n        text={t(\"return\")}\n      />\n    );\n\n    switch (this.state.loading) {\n      case true:\n        return (\n          <div className=\"d-flex align-items-center\">\n            <strong>Loading...</strong>\n            <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n          </div>\n        );\n      default:\n        switch (this.state.view) {\n          case LOGIN:\n            return (\n              <div><form>\n                <h4>{t(\"please_login\")}</h4>\n                <div>\n                  <div className=\"input-group\">\n                    <input className=\"form-control\" size={10} name=\"user\" defaultValue=\"47302200234\" />\n                    <div className=\"input-group-append\">\n                      <SimpleSend\n                        arena={this.props.arena}\n                        owner={this.props.process}\n                        className=\"btn btn-light border\"\n                        onClick={() => this.changeView(SELECT_SERVICE)}\n                        message={loginMessage()}\n                        text={t(\"login\")}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <p className=\"mt-4 mb-0\">\n                  <img alt=\"illustration\" src={require('./../../static/assets/images/login.svg')} width=\"280\" />\n                </p>\n              </form></div>\n            );\n          case SELECT_SERVICE:\n            return (\n              <div>\n                <Header t={t} props={this.props} />\n                <h4>{t(\"choose_service\")}</h4>\n                {\n                  this.props.process.mem.config.map(\n                    service => {\n                      return (\n                        <SimpleSend\n                          key={service.purposeDeclarationId}\n                          className=\"btn btn-dark mt-2 mr-2\"\n                          arena={this.props.arena}\n                          owner={this.props.process}\n                          onClick={() => this.changeView(WAIT_FOR_CONSENT_REF)}\n                          message={selectServiceMessage({ service: service.purposeDeclarationId })}\n                          text={t(\"service\", service.purposeDeclarationId, \"name\")}\n                        />\n                      )\n                    }\n                  )\n                }\n              </div>\n            );\n          case WAIT_FOR_CONSENT_REF:\n            return (\n              <div>\n                <Header t={t} props={this.props} />\n                <h4>{t(\"checking_consent\")}</h4>\n                <p className=\"text-left\">{t(\"retry_if_timed_out\")}</p>\n                <SimpleSend\n                  className=\"btn btn-dark\"\n                  arena={this.props.arena}\n                  owner={this.props.process}\n                  message={fetchConsentReference({ purposeDeclarationId: m.ui.service })}\n                  text={t('retry-fetch')}\n                />\n              </div>\n            );\n          case CONSENT_NOT_FOUND:\n            return (\n              <div>\n                <Header t={t} props={this.props} />\n                <h4>{t(\"service\", m.ui.service!, \"consent-header\")}</h4>\n                <p className=\"text-left\">\n                  <small dangerouslySetInnerHTML={{ __html: t(\"service\", m.ui.service!, \"consent-intro\") }} />\n                </p>\n                <p>\n                  <button className=\"btn btn-lg btn-success btn-health\" onClick={ev => window.open(\"ui/csui/\", this.props.arena + \" - \" + m.db.consentServiceId)}>Annan nõusoleku</button>\n                </p>\n                <p>{returnButton}</p>\n              </div>\n            );\n          case SERVICE_V1:\n            return (\n              <div>\n                <Header t={t} props={this.props} />\n                <h4>{t(\"consented_data\")}</h4>\n                {\n                  (m.ui.response || []).filter(\n                    r => r.purposeDeclarationId === m.ui.service\n                  ).map(\n                    r => (\n                      <span className=\"card mb-2\" key={r.serviceAddress + \" \" + r.serviceName}>\n                        <pre className=\"text-left scroll-pre\">\n                          {r.serviceAddress}/{r.serviceName}: {JSON.stringify(r.data, undefined, \" \")}\n                        </pre>\n                      </span>\n                    )\n                  )\n                }\n                <p>\n                  <SimpleSend\n                    owner={this.props.process}\n                    arena={this.props.arena}\n                    className=\"btn btn-success btn-health\"\n                    message={executeRequest({\n                      requestReference: generateRequestReference(),\n                      purposeId: m.ui.service\n                    })} text={t('load-consented-data')} />\n                </p>\n                <p>{returnButton}</p>\n              </div>\n            )\n          default:\n            return <div>Unimplemented view: {this.state.view}</div>\n        }\n    }\n  }\n}\n\nconst ClientView = connect(null, { send })(ClientView_);\n\nconst EnduserUI: React.FC<ProcessAndArena<ClientState>> = ({ process, arena }) => {\n\n  const t = (...k: string[]) => __({ arena, process }, k);\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} size=\"lg\" bsPrefix=\"client-app modal\">\n        <Modal.Header>\n          <Modal.Title>{t('title')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ClientView arena={arena} process={process} t={t} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-dark\" onClick={handleClose}>{t('close')}</Button>\n        </Modal.Footer>\n      </Modal>\n      <Button variant=\"success\" className=\"mr-2 btn-health\" onClick={handleShow}>{t('open-end-user-view')}</Button>\n    </>\n  )\n}\n\n\nexport default EnduserUI;","import { ProcessAndArena } from \"../Base\";\nimport { ClientState, ClientPS, PurposeDeclarationTemplate, ClientConfig } from \"./types\";\nimport React from \"react\";\nimport { Modal, Button, Dropdown, ButtonProps } from \"react-bootstrap\";\nimport { SimpleSend } from \"../../components/SendButton\";\nimport { declarePurpose, executeRequest, fetchConsentReference, generateRequestReference, updateConsentRefInCache, validateConsentRef } from \"./messages\";\nimport EnduserUI from \"./EnduserUI\";\nimport { __, business, Translator } from \"../../i18n\";\nimport { address2org } from \"../../util\";\n\n\ninterface ClientViewProps extends ProcessAndArena<ClientState> {\n  process: ClientPS;\n}\n\ntype SDRef = {\n  serviceProviderId: string;\n  serviceDeclarationId: string;\n}\n\nfunction addSDRef(ev: any, opts: SDRef[], setOpts: React.Dispatch<React.SetStateAction<SDRef[]>>) {\n  ev.preventDefault();\n  let f = ev.currentTarget.form;\n\n  let spId = f._spId.value;\n  let sdId = f._sdId.value;\n\n  if (!spId.match(\"^[!-~]+$\") || !sdId.match(\"^[!-~]+$\")) {\n    return;\n  }\n\n  setOpts(old => old.concat({ serviceProviderId: spId, serviceDeclarationId: sdId }));\n  f._spId.value = f._sdId.value = \"\";\n}\n\nfunction prefillPurposeDeclaration(ev: any, decls: PurposeDeclarationTemplate[] | undefined, setOpts: React.Dispatch<React.SetStateAction<SDRef[]>>) {\n  ev.preventDefault();\n\n  let declId = ev.currentTarget.value;\n\n  let form = ev.currentTarget.form;\n  let decl = decls!.find(d => d.purposeDeclarationId! === declId);\n  if (decl === undefined) {\n    return;\n  }\n\n  form[\"name\"].value = decl.name;\n  form[\"purposeDeclarationId\"].value = decl.purposeDeclarationId;\n  form[\"description\"].value = decl.description;\n  if (decl.services !== undefined) {\n    setOpts(decl.services);\n  }\n}\n\nfunction declarationPrefill(t: Translator, sp: ClientPS, setOpts: React.Dispatch<React.SetStateAction<SDRef[]>>) {\n  if (sp.mem.declTemplate === undefined || sp.mem.declTemplate.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"form-group text-danger\">\n      <label htmlFor=\"prefilled\">{t('pd-prefill')}</label>\n      <select\n        className=\"form-control\"\n        id=\"prefilled\"\n        onChange={ev => prefillPurposeDeclaration(ev, sp.mem.declTemplate, setOpts)}\n        defaultValue=\"\">\n        <option key=\"none\" value=\"\">{t('pd-choose-prefill')}</option>\n        {\n          sp.mem.declTemplate.map(dt => (\n            <option key={dt.purposeDeclarationId} value={dt.purposeDeclarationId}>{dt.name!}</option>\n          ))\n        }\n      </select>\n    </div>\n  );\n}\n\n\nconst DeclarePurposePopup: React.FC<ClientViewProps> = ({ process, arena }) => {\n\n  const t = (...k: string[]) => __({ arena, process }, k);\n  const [show, setShow] = React.useState(false);\n  const [sdrefs, setSDRefs] = React.useState([] as SDRef[]);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} size=\"xl\">\n        <Modal.Header closeButton>\n          <Modal.Title>{t('pd-declaring')}</Modal.Title>\n        </Modal.Header>\n        <form>\n          <Modal.Body>\n            <div className=\"row\">\n              <div className=\"col\">\n                <small>\n                  {t('purpose-decl-intro')}\n                </small>\n              </div>\n            </div>\n            <div className=\"row border-bottom mt-4 mb-2\">\n              <div className=\"col\">\n                <h6>{t('declarer')} {business(address2org(process.name), \"name\")} ({address2org(process.name)})</h6>\n                <input name=\"clientId\" type=\"hidden\" value={address2org(process.name)} />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                {declarationPrefill(t, process, setSDRefs)}\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dIdentifier\">{t('pd-decl-id')}</label>\n                  <input name=\"purposeDeclarationId\" type=\"text\" className=\"form-control\" id=\"dIdentifier\" />\n                  <small id=\"dIdentifierHelp\" className=\"form-text text-muted\">{t('pd-decl-id-help')}</small>\n                </div>\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dName\">{t('pd-decl-name')}</label>\n                  <input name=\"name\" type=\"text\" className=\"form-control\" id=\"dName\" />\n                  <small id=\"dNameHelp\" className=\"form-text text-muted\">{t('pd-decl-name-help')}</small>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dataUsage\">{t('pd-purpose')}</label>\n                  <textarea name=\"description\" className=\"form-control\" id=\"dataUsage\" rows={3} />\n                  <small id=\"dataUsageHelp\" className=\"form-text text-muted\">{t('pd-purpose-help')}</small>\n                </div>\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"services\">{t('pd-services')}</label>\n                  <select name=\"services\"\n                    className=\"custom-select\"\n                    multiple\n                    id=\"services\"\n                    value={sdrefs.map(s => JSON.stringify(s))}\n                    onChange={() => { /* nop. use X button and adding. */ }}\n                  >\n                    {\n                      sdrefs.map(sdref => (\n                        <option\n                          key={JSON.stringify(sdref)}\n                          value={JSON.stringify(sdref)}\n                        >\n                          {sdref.serviceProviderId} {sdref.serviceDeclarationId}\n                        </option>\n                      ))\n                    }\n                  </select>\n                  <input name=\"_spId\" placeholder={t('pd-sp-id')} size={10} />\n                  <input name=\"_sdId\" placeholder={t('pd-sd-id')} size={10} />\n                  <button className=\"btn-sm\" onClick={ev => addSDRef(ev, sdrefs, setSDRefs)}>+</button>\n                  <button className=\"btn-sm\" onClick={ev => { ev.preventDefault(); setSDRefs([]); }} title={t('clear')}>X</button>\n                </div>\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n            <SimpleSend arena={arena} owner={process} onClick={() => handleClose()} text={t('declare')} message={declarePurpose()} />\n          </Modal.Footer>\n        </form>\n      </Modal>\n      <Button variant=\"dark\" onClick={handleShow}>\n        {t('declare')}\n      </Button>\n    </>\n  )\n}\n\n/*\nfunction countConsentRefs(cis: ClientPS): number {\n    let out : number = 0;\n    Object.keys(cis.mem.db.consentRefByUser).forEach(\n        k => { out += Object.keys(cis.mem.db.consentRefByUser[k]).filter(\n            pd => !!(cis.mem.db.consentRefByUser[k][pd])\n        ).length; }\n    );\n    return out;\n}\n*/\n\nfunction purposeView(t: any, purpose: ClientConfig, process: ClientPS, arena: any): React.ReactElement {\n  const consentRef = (process.mem.db.consentRefByUser[process.mem.ui.user!] || {})[purpose.purposeDeclarationId];\n  const consentRefDesc = (consentRef === undefined ? t('consent-ref-not-asked') : consentRef === null ? t('consent-ref-not-found') : consentRef);\n\n  const dropdownToggle = React.forwardRef<HTMLButtonElement, ButtonProps & { onClick?: any }>(({ children, onClick }, ref) => (\n    <button className=\"btn-link\" onClick={onClick} ref={ref}>{children}</button>\n  ));\n\n\n  const updateConsentRefDropdown = React.forwardRef<HTMLDivElement, any>(\n    ({ style, className }, ref) => {\n      return (\n        <div\n          ref={ref}\n          style={style}\n          className={className}\n        >\n          <div className=\"row no-gutters flex-nowrap\">\n            <form>\n              <div className=\"form-group\">\n                <input type=\"text\" size={6} className=\"form-control\" name=\"consentReference\" />\n                <SimpleSend className=\"btn btn-sm btn-outline-secondary ml-1 dropdown-close\"\n                  owner={process} arena={arena}\n                  message={updateConsentRefInCache({\n                    purposeDeclarationId: purpose.purposeDeclarationId\n                  })} text=\"Set\" />\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    },\n  );\n\n  return (\n    <span className=\"card small mt-2\" key={purpose.purposeDeclarationId}>\n      <div className=\"w-100 row no-gutters p-1 align-items-center\">\n        <div className=\"col-auto flex-fill\">\n          {t(\"service\", purpose.purposeDeclarationId, \"name\")}<br />\n          {t('consent-ref')}\n          <Dropdown className=\"d-inline-block\">\n            <Dropdown.Toggle as={dropdownToggle} id={`consentref-update-dropdown-${purpose.purposeDeclarationId}`}>{consentRefDesc}</Dropdown.Toggle>\n            <Dropdown.Menu as={updateConsentRefDropdown} />\n          </Dropdown>\n        </div>\n        <div className=\"col-auto\">\n          <SimpleSend className=\"btn btn-sm btn-outline-secondary\" owner={process} arena={arena} message={executeRequest({\n            requestReference: generateRequestReference(),\n            purposeId: purpose.purposeDeclarationId\n          })} text=\"GO\" title=\"Tee päring kõigile selle eesmärgi teenustele\" />\n          <SimpleSend className=\"btn btn-sm btn-outline-secondary ml-1\" owner={process} arena={arena} message={fetchConsentReference({\n            purposeDeclarationId: purpose.purposeDeclarationId\n          })} text={t('fcr')}\n            title=\"Küsi nõusolekuviide uuesti\"\n          />\n          {consentRef &&\n            <SimpleSend className=\"btn btn-sm btn-outline-secondary ml-1\" owner={process} arena={arena} message={validateConsentRef({\n              consentReference: consentRef\n            })} text=\"vcr\"\n              title=\"Valideeri nõusolekuviide nõusolekuteenuses\"\n            />\n          }\n          {consentRef &&\n            <SimpleSend className=\"btn btn-sm btn-outline-secondary ml-1\" owner={process} arena={arena} message={updateConsentRefInCache({\n              purposeDeclarationId: purpose.purposeDeclarationId\n            })} text=\"rcr\"\n              title=\"Unusta see nõusolekuviide\"\n            />\n          }\n\n        </div>\n      </div>\n      { /*\n            \n            <table className=\"table\">\n                <tbody>\n                    { purpose.services.map(\n                        s => {\n                            const resp = findFrom((process.mem.ui.response || []), { \n                                purposeDeclarationId: purpose.purposeDeclarationId,\n                                serviceAddress: s.serviceAddress,\n                                serviceName: s.serviceName,\n                            });\n\n                            return (\n                                <tr>\n                                    <td>{ s.serviceAddress }<br/>{ s.serviceName }</td>\n                                    <td>{ resp && resp.requestReferenceId }</td>\n                                    <td>{ resp && \n                                        (resp.data === null \n                                            ? t('response-has-no-data') \n                                            : <>{ resp.data.length }{t('data-items-returned')}</>\n                                        )\n                                    }</td>\n                                    <td>\n                                        <SimpleSend \n                                            className=\"btn btn-sm\"\n                                            owner={process}\n                                            arena={arena}\n                                            message={executeRequest({\n                                                requestReference: generateRequestReference(),\n                                                purposeId: purpose.purposeDeclarationId,\n                                                serviceAddress: s.serviceAddress,\n                                                serviceName: s.serviceName,\n                                            })} text=\"GO\"\n                                            title=\"Ainult see päring\"\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        }\n                    )}\n                </tbody>\n            </table>\n\n                    */}\n    </span>\n  )\n}\n\nfunction hasUser(cis: ClientPS): boolean {\n  return cis.mem.ui.user !== undefined;\n}\n\nexport const ClientRenderer: React.FC<ClientViewProps> = ({ process, arena }) => {\n  const t = (...k: string[]) => __({ arena, process }, k);\n\n  /* \n  const serviceCount = Object.keys(process.mem.db.purpose).length;\n  const consentRefCount = countConsentRefs(process);\n  const responseCount = (process.mem.ui.response || []).filter(r => r.data !== null).length;\n  */\n\n  return (<div>\n    <p>{hasUser(process) ? `${t('active-user')} : ${process.mem.ui.user}` : `${t('no-active-user')}.`}</p>\n    { /*\n        <p className=\"small\">\n            { serviceCount } { t('services-configured') }<br/> \n            { consentRefCount } { t('consent-refs-cached') }{ consentRefCount > 0 && <SimpleSend className=\"btn-link mt-2\" owner={process} arena={arena} message={dumpConsentRefCache()} text={ t('dump-consent-ref-cache') }/> }<br/>\n            { responseCount } { t('responses-cached') }{ responseCount > 0 && <SimpleSend className=\"btn-link mt-2\" owner={process} arena={arena} message={selectServiceMessage({ service: process.mem.ui.service })} text={ t('dump-response-cache') }/> }\n          \n        </p>\n         */ }\n    <div className=\"row mx-1\">\n      <EnduserUI arena={arena} process={process} />\n      <DeclarePurposePopup arena={arena} process={process} />\n    </div>\n    {hasUser(process) && process.mem.config.map(p => purposeView(t, p, process, arena))}\n  </div>);\n}\n\n\n","import { ClientPS, ClientDefaultView, ClientIS, PurposeDeclarationTemplate, ClientConfig } from './types';\nimport { addRenderer } from '../Base';\nimport { ClientRenderer } from './views';\n\n// Client IS is a small information system that:\n// - has a set of purposes that need data from service providers\n// - is able to declare the purpose \n// - tracks consent refs by user and by purpose declaration id. \n// - has UI that allows a user to authenticate\n// - allows to attempt to use the service as authenticated user\n\n\nexport function createClient(\n  name: string,\n  consentService: string,\n  config: ClientConfig[],\n  decls?: PurposeDeclarationTemplate[]\n): ClientPS {\n  return {\n    type: ClientIS,\n    view: ClientDefaultView,\n    name: name,\n    title: name,\n    mem: {\n      ui: {},\n      db: {\n        consentServiceId: consentService,\n        consentRefByUser: {},\n        purpose: {}\n      },\n      declTemplate: decls,\n      config: config,\n    },\n    queue: []\n  }\n}\n\naddRenderer(ClientIS, ClientDefaultView, ClientRenderer);","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport { ProcessAndArena } from \"../Base\";\nimport { SimpleSend } from \"../../components/SendButton\";\n\nimport { ServiceProviderState, ServiceProviderPS, ServiceDeclarationTemplate } from \"./types\";\nimport { declareService, addData } from './messages';\nimport { __, business, Translator } from \"../../i18n\";\nimport { address2org } from \"../../util\";\n\nexport interface ServiceProviderViewProps extends ProcessAndArena<ServiceProviderState> {\n  process: ServiceProviderPS;\n}\n\nconst updateMaxDuration = (ev: any) => {\n  let f = ev.currentTarget.form!;\n  let v = f[\"consentMaxDurationSeconds\"].value =\n    (f[\"_mdValue\"].value - 0) * (f[\"_mdUnit\"].value) * 24 * 3600;\n  f[\"_mdValue\"].className = \"form-control\" + (v < 1 ? \" is-invalid\" : \"\");\n};\n\nfunction prefillServiceDeclaration(ev: any, decls?: ServiceDeclarationTemplate[]) {\n  ev.preventDefault();\n\n  let declId = ev.currentTarget.value;\n\n  let form = ev.currentTarget.form;\n  let decl = decls!.find(d => d.serviceDeclarationId! === declId);\n  if (decl === undefined) {\n    return;\n  }\n\n  form[\"name\"].value = decl.name;\n  form[\"serviceDeclarationId\"].value = decl.serviceDeclarationId;\n  form[\"technicalDescription\"].value = decl.technicalDescription;\n  form[\"description\"].value = decl.description;\n  form[\"needSignature\"].checked = decl.needSignature === true;\n  let md = decl.consentMaxDurationSeconds || (1 * 365 * 24 * 3600);\n  md = ((md / (24 * 3600)) | 0);\n  if (md > 365) {\n    form[\"_mdValue\"].value = ((md / 365) | 0);\n    form[\"_mdUnit\"].value = 365;\n  } else if (md > 30) {\n    form[\"_mdValue\"].value = ((md / 30) | 0);\n    form[\"_mdUnit\"].value = 30;\n  } else {\n    form[\"_mdValue\"].value = md;\n    form[\"_mdUnit\"].value = 1;\n  }\n\n  updateMaxDuration({ currentTarget: form[\"consentMaxDurationSeconds\"] });\n}\n\nfunction declarationPrefill(t: Translator, sp: ServiceProviderPS) {\n  if (sp.mem.declTemplate === undefined || sp.mem.declTemplate.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"form-group text-danger\">\n      <label htmlFor=\"prefilled\">{t('sd-prefill')}</label>\n      <select className=\"form-control\" id=\"prefilled\" onChange={ev => prefillServiceDeclaration(ev, sp.mem.declTemplate)} defaultValue=\"\">\n        <option key=\"none\" value=\"\">{t('sd-choose-prefill')}</option>\n        {\n          sp.mem.declTemplate.map(dt => (\n            <option key={dt.serviceDeclarationId} value={dt.serviceDeclarationId}>{dt.name!}</option>\n          ))\n        }\n      </select>\n    </div>\n  );\n}\n\nconst DeclareServicePopup: React.FC<ServiceProviderViewProps> = ({ process, arena }) => {\n\n  const t = (...k: string[]) => __({ process, arena }, k);\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} size=\"xl\">\n        <Modal.Header closeButton>\n          <Modal.Title>{t('declare-service-declaration')}</Modal.Title>\n        </Modal.Header>\n        <form>\n          <Modal.Body>\n            <div className=\"row\">\n              <div className=\"col\">\n                <small>\n                  {t('service-decl-intro')}\n                </small>\n              </div>\n            </div>\n\n            <div className=\"row border-bottom mt-4 mb-2\">\n              <div className=\"col\">\n                <h6>{t('declarer')} {business(address2org(process.name), \"name\")} ({address2org(process.name)})</h6>\n                <input name=\"serviceProviderId\" type=\"hidden\" value={address2org(process.name)} />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                {declarationPrefill(t, process)}\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"sdIdentifier\">{t('service-declaration-id')}</label>\n                  <input name=\"serviceDeclarationId\" type=\"text\" className=\"form-control\" id=\"sdIdentifier\" />\n                  <small id=\"sdIdentifierHelp\" className=\"form-text text-muted\">{t('service-declaration-id-help')}</small>\n                </div>\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"sdName\">{t('service-declaration-name')}</label>\n                  <input name=\"name\" type=\"text\" className=\"form-control\" id=\"sdName\" />\n                  <small id=\"sdNameHelp\" className=\"form-text text-muted\">{t('service-declaration-name-help')}</small>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"sdTechDescription\">{t('sd-tech-description')}</label>\n                  <textarea name=\"technicalDescription\" className=\"form-control\" id=\"sdTechDescription\" rows={3} />\n                  <small id=\"sdTechDescriptionHelp\" className=\"form-text text-muted\">{t('sd-tech-description-help')}</small>\n                </div>\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"sdDescription\">{t('sd-description')}</label>\n                  <textarea name=\"description\" className=\"form-control\" id=\"sdDescription\" rows={3} />\n                  <small id=\"sdDescriptionHelp\" className=\"form-text text-muted\">{t('sd-description-help')}</small>\n                </div>\n              </div>\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <input type=\"hidden\" name=\"consentMaxDurationSeconds\" value={1 * 365 * 24 * 3600} />\n                  <label htmlFor=\"maxDuration\">{t('sd-max-validity')}</label>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md\">\n                      <input type=\"number\" size={3} className=\"form-control\" id=\"maxDuration\" name=\"_mdValue\" onChange={updateMaxDuration} defaultValue={1} />\n                    </div>\n                    <div className=\"form-group col-md\">\n                      <select name=\"_mdUnit\" className=\"form-control input-group-append\" onChange={updateMaxDuration}>\n                        <option value={365}>{t('year')}</option>\n                        <option value={30}>{t('month')}</option>\n                        <option value={1}>{t('day')}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"form-check\">\n                    <input name=\"needSignature\" className=\"form-check-input\" type=\"checkbox\" id=\"signature\" value=\"true|false\" />\n                    <label className=\"form-check-label\" htmlFor=\"signature\">{t('sd-need-signature')}</label>\n                    <small id=\"signatureHelp\" className=\"form-text text-muted\">{t('sd-need-signature-help')}</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>{t('close')}</Button>\n            <SimpleSend arena={arena} owner={process} onClick={() => handleClose()} text={t('declare')} message={declareService()} />\n          </Modal.Footer>\n        </form>\n      </Modal>\n      <Button variant=\"dark\" onClick={handleShow}>\n        {t('declare')}\n      </Button>\n\n    </>\n  )\n}\n\n\nfunction cutAt(s: string, n: number) {\n  if (s && s.length < n) {\n    return s;\n  }\n\n  return <span onClick={ev => alert(s)}>{s.substring(0, n) + \"..\"}</span>;\n}\n\nexport const ServiceProviderRenderer: React.FC<ServiceProviderViewProps> = ({ process, arena }) => {\n  const t = (...k: string[]) => __({ process, arena }, k);\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const allValues: string[] = (() => {\n    let values = process.mem.services.map(s => s.returnedDatatypes).flat().concat(process.mem.db.map(r => r.type));\n    values.sort();\n    let out: string[] = [];\n    values.forEach((v) => { if (out.length === 0 || v !== out[out.length - 1]) out.push(v); });\n    return out;\n  })();\n  return (<div>\n    <p className=\"small\">\n      {/* process.mem.services.length } { t('services-defined') }<br/> //FIXME: Confusing for demo audience?*/}\n      {process.mem.db.length} <button className=\"btn-link\" onClick={handleShow}>{t('records-in-db')}</button>\n    </p>\n    <Modal show={show} onHide={handleClose} size=\"lg\">\n      <Modal.Header>\n        <Modal.Title>{t('database')}: {t('title')}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"border-top-0\">id</th>\n                <th className=\"border-top-0\">type</th>\n                <th className=\"border-top-0\">subject</th>\n                <th className=\"border-top-0\">data</th>\n                <th className=\"border-top-0\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                process.mem.db.map(r => (\n                  <tr key={r.key}>\n                    <td>{r.key}</td>\n                    <td>{r.type}</td>\n                    <td>{r.subject}</td>\n                    <td>{cutAt(JSON.stringify(r.data, undefined, \" \"), 40)}</td>\n                    <td>\n                      <SimpleSend arena={arena} owner={process} text=\"-\" message={\n                        addData({ key: r.key, datatype: undefined, subject: undefined, data: undefined })\n                      } />\n                    </td>\n                  </tr>\n                ))\n              }\n              <tr key=\"add\">\n                <td><input className=\"form-control\" type=\"text\" size={10} name=\"key\" defaultValue={(Math.random() * 10000) | 0} /></td>\n                <td><input className=\"form-control\" type=\"text\" size={8} name=\"datatype\"\n                  defaultValue={allValues.length > 0 ? allValues[0] : \"\"} /></td>\n                <td><input className=\"form-control\" type=\"text\" size={10} name=\"subject\" /></td>\n                <td><input className=\"form-control\" type=\"text\" size={10} name=\"data\" /></td>\n                <td><SimpleSend arena={arena} owner={process} text=\"+\" message={addData()} onClick={(ev) => {\n                  let f = ev.currentTarget.form;\n                  f.key.value = (Math.random() * 10000) | 0;\n                  f.datatype.value = \"\";\n                  f.subject.value = \"\";\n                  f.data.value = \"\";\n                }} /></td>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>{t('close')}</Button>\n      </Modal.Footer>\n    </Modal>\n    <DeclareServicePopup arena={arena} process={process} />\n  </div>);\n}\n\n","import { ServiceConfig, ServiceProviderPS, ServiceProviderDefaultView, ServiceProviderIS, SecretRecord, ServiceDeclarationTemplate } from \"./types\";\nimport { addRenderer } from \"../Base\";\nimport { ServiceProviderRenderer } from \"./views\";\n\n\nexport function createServiceProvider(name: string, title: string, config: ServiceConfig[], db?: SecretRecord[], decls?: ServiceDeclarationTemplate[]): ServiceProviderPS {\n  return {\n    type: ServiceProviderIS,\n    view: ServiceProviderDefaultView,\n    name: name,\n    title: title,\n    mem: {\n      db: db === undefined ? [] : db,\n      services: config,\n      inflight: [],\n      declTemplate: decls,\n    },\n    queue: []\n  };\n}\n\naddRenderer(ServiceProviderIS, ServiceProviderDefaultView, ServiceProviderRenderer);\n","import { fullname } from \"../i18n\"\n\n// example HL7 messages as JSON\n\nfunction firstname(id: string): string {\n  return fullname(id).split(' ')[0];\n}\n\nfunction lastname(id: string): string {\n  let fn = fullname(id);\n  return fn.substring(fn.split(' ')[0].length + 1);\n}\n\nfunction id(root: string, ext: string) {\n  return {\n    \"@root\": root,\n    \"@extension\": ext\n  }\n}\n\nexport function diagnosisFor(patient: string) {\n  return {\n    \"templateId\": id(\"1.3.6.1.4.1.28284.6.1.1\", \"1.3.6.1.4.1.28284.6.1.1.37.3\"),\n    \"id\": id(\"1.3.6.1.4.1.28284.6.2.4.14\", \"EHR.3570338\"),\n    \"creationTime\": { \"@value\": \"20191127131137\" },\n    \"versionCode\": { \"@code\": \"V3-2007-09\" },\n    \"interactionId\": id(\"2.16.840.1.113883\", \"RCMR_IN000030UV01\"),\n    \"processingCode\": { \"@code\": \"P\" },\n    \"processingModeCode\": { \"@code\": \"T\" },\n    \"acceptAckCode\": { \"@code\": \"NE\" },\n    \"receiver\": {\n      \"@typeCode\": \"RCV\",\n      \"device\": {\n        \"@classCode\": \"DEV\",\n        \"@determinerCode\": \"INSTANCE\",\n        \"id\": id(\"1.3.6.1.4.1.28284.8.7.2.5\", \"Tallinn\")\n      }\n    },\n    \"sender\": {\n      \"@typeCode\": \"SND\",\n      \"device\": {\n        \"@classCode\": \"DEV\",\n        \"@determinerCode\": \"INSTANCE\",\n        \"id\": id(\"1.3.6.1.4.1.28284.6.2.2.18.2\", \"TL\")\n      }\n    },\n    \"acknowledgement\": {\n      \"typeCode\": { \"@code\": \"AA\" },\n      \"targetMessage\": { \"id\": id(\"1.3.6.1.4.1.28284.8.7\", \"1.3.6.1.4.1.28284.8.7_637104570979090003\") }\n    },\n    \"controlActProcess\": {\n      \"@moodCode\": \"EVN\",\n      \"@type\": \"ext:RCMR_IN000030UV01_Extension.ControlActProcess\",\n      \"@HL7-Domain\": \"QUQI_DM000000UV\",\n      \"@realmCode\": \"EE\",\n      \"subject\": {\n        \"clinicalDocument\": {\n          \"@type\": \"ext:RCMR_MT000001UV_Extension.ClinicalDocument\",\n          \"templateId\": id(\"1.3.6.1.4.1.28284.6.1.1\", \"1.3.6.1.4.1.28284.6.1.1.5.8\"),\n          \"id\": id(\"1.3.6.1.4.1.28284.8.7.2.2.3\", \"11356823.S140.1\"),\n          \"code\": {\n            \"@code\": \"2\",\n            \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.3.1\",\n            \"@codeSystemName\": \"Dokumendi tüüp\",\n            \"@displayName\": \"Ambulatoorne epikriis\"\n          },\n          \"statusCode\": { \"@code\": \"completed\" },\n          \"effectiveTime\": { \"@value\": \"20191127131059\" },\n          \"confidentialityCode\": {\n            \"@code\": \"N\",\n            \"@codeSystem\": \"2.16.840.1.113883.5.25\",\n            \"@codeSystemName\": \"Konfidentsiaalsus\",\n            \"@displayName\": \"avatud\",\n            \"translation\": [\n              {\n                \"@code\": \"N\",\n                \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.39.1\",\n                \"@codeSystemName\": \"Konfidentsiaalsus arstile\",\n                \"@displayName\": \"avatud\"\n              },\n              {\n                \"@code\": \"N\",\n                \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.37.1\",\n                \"@codeSystemName\": \"Konfidentsiaalsus eestkostjale\",\n                \"@displayName\": \"avatud\"\n              }\n            ]\n          },\n          \"languageCode\": { \"@code\": \"EST\" },\n          \"setId\": id(\"1.3.6.1.4.1.28284.8.7.2.1\", \"140.1\"),\n          \"versionNumber\": { \"@value\": \"1\" },\n          \"recordTarget\": {\n            \"@typeCode\": \"RCT\",\n            \"realmCode\": { \"@code\": \"PAT\" },\n            \"patient\": {\n              \"@classCode\": \"PAT\",\n              \"id\": id(\"1.3.6.1.4.1.28284.6.2.2.16.1\", patient),\n              \"statusCode\": { \"@code\": \"A\" },\n              \"patientPerson\": {\n                \"@classCode\": \"PSN\",\n                \"name\": {\n                  \"given\": firstname(patient),\n                  \"family\": lastname(patient)\n                }\n              }\n            }\n          },\n          \"author\": {\n            \"@typeCode\": \"AUT\",\n            \"time\": { \"@value\": \"20191127131059\" },\n            \"assignedAuthor\": {\n              \"@classCode\": \"ASSIGNED\",\n              \"@type\": \"ext:RCMR_MT000001UV_Extension.COCT_MT090000UV.AssignedEntity\",\n              \"id\": id(\"1.3.6.1.4.1.28284.6.2.4.9\", \"D04220\"),\n              \"code\": {\n                \"@code\": \"DOCTOR\",\n                \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.15.1\",\n                \"@codeSystemName\": \"Tervishoiutöötaja tüüp\",\n                \"@displayName\": \"arst\"\n              },\n              \"assignedPerson\": {\n                \"@classCode\": \"PSN\",\n                \"@determinerCode\": \"INSTANCE\",\n                \"name\": {\n                  \"given\": firstname(patient),\n                  \"family\": lastname(patient)\n                }\n              },\n              \"asLicencedEntity\": {\n                \"id\": {\n                  \"@root\": \"1.3.6.1.4.1.28284.6.2.1.4.2\",\n                  \"@extension\": \"E420\",\n                  \"@assigningAuthorityName\": \"üldkirurgia\"\n                }\n              }\n            }\n          },\n          \"componentOf\": {\n            \"encompassingEncounter\": {\n              \"@classCode\": \"ENC\",\n              \"@moodCode\": \"EVN\",\n              \"id\": id(\"1.3.6.1.4.1.28284.8.7.2.1\", \"140.1\"),\n              \"code\": {\n                \"@code\": \"AMB\",\n                \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.5.1\",\n                \"@codeSystemName\": \"Haigusjuhtumi tüüp\",\n                \"@displayName\": \"Ambulatoorne haigusjuht\"\n              },\n              \"effectiveTime\": {\n                \"low\": { \"@value\": \"20191127131033\" },\n                \"high\": { \"@value\": \"20191127131033\" }\n              }\n            }\n          },\n          \"sourceOf\": {\n            \"@typeCode\": \"XCERPT\",\n            \"observation\": {\n              \"@classCode\": \"OBS\",\n              \"@moodCode\": \"EVN\",\n              \"code\": {\n                \"@code\": \"DGN\",\n                \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.5.1\",\n                \"@codeSystemName\": \"Observation liik\",\n                \"@displayName\": \"Diagnoos\"\n              },\n              \"statusCode\": { \"@code\": \"completed\" },\n              \"value\": {\n                \"@code\": \"F02.2\",\n                \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.13.3\",\n                \"@codeSystemName\": \"RHK-10\",\n                \"@displayName\": \"Dementsus Huntingtoni tõvest\",\n                \"@type\": \"CD\",\n                \"originalText\": null,\n                \"qualifier\": {\n                  \"value\": {\n                    \"@code\": \"1\",\n                    \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.1.2\",\n                    \"@codeSystemName\": \"Diagnoosi statistiline liik\",\n                    \"@displayName\": \"esmajuhtum\"\n                  }\n                }\n              },\n              \"interpretationCode\": {\n                \"@code\": \"MAIN\",\n                \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.2.1\",\n                \"@codeSystemName\": \"Diagnoosi liik\",\n                \"@displayName\": \"Põhihaigus\"\n              }\n            }\n          }\n        }\n      },\n      \"queryAck\": {\n        \"queryId\": id(\"1.3.6.1.4.1.28284.8.7.2.7\", \"1.3.6.1.4.1.28284.8.7_637104570979090003\"),\n        \"queryResponseCode\": { \"@code\": \"OK\" },\n        \"resultTotalQuantity\": { \"@value\": \"1\" }\n      },\n      \"queryByParameter\": {\n        \"@type\": \"ext:RCMR_MT000003UV_Extension.QueryByParameter\",\n        \"@HL7-Domain\": \"RCMR_RM000000\",\n        \"@realmCode\": \"EE\",\n        \"queryId\": id(\"1.3.6.1.4.1.28284.8.7.2.7\", \"1.3.6.1.4.1.28284.8.7_637104570979090003\"),\n        \"patient.id\": { \"value\": id(\"1.3.6.1.4.1.28284.6.2.2.16.1\", patient) },\n        \"serviceEvent.code\": {\n          \"value\": {\n            \"@code\": \"diagnosis\",\n            \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.32.2\"\n          }\n        },\n        \"observation.effectiveTime\": {\n          \"value\": {\n            \"low\": { \"@value\": \"20161127000000\" },\n            \"high\": { \"@value\": \"20191128235959\" }\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function studyFor(patient: string) {\n  return {\n    \"templateId\": id(\"1.3.6.1.4.1.28284.6.1.1\", \"1.3.6.1.4.1.28284.6.1.1.40.9\"),\n    \"id\": id(\"1.3.6.1.4.1.28284.6.2.4.14\", \"EHR.3572157\"),\n    \"creationTime\": { \"@value\": \"20191129133942\" },\n    \"versionCode\": { \"@code\": \"V3-2007-09\" },\n    \"interactionId\": id(\"2.16.840.1.113883\", \"RCMR_IN000030UV01\"),\n    \"processingCode\": { \"@code\": \"P\" },\n    \"processingModeCode\": { \"@code\": \"T\" },\n    \"acceptAckCode\": { \"@code\": \"NE\" },\n    \"receiver\": {\n      \"@typeCode\": \"RCV\",\n      \"device\": {\n        \"@classCode\": \"DEV\",\n        \"@determinerCode\": \"INSTANCE\",\n        \"id\": { \"@root\": \"1.3.6.1.4.1.28284.1.26.2.5\" }\n      }\n    },\n    \"sender\": {\n      \"@typeCode\": \"SND\",\n      \"device\": {\n        \"@classCode\": \"DEV\",\n        \"@determinerCode\": \"INSTANCE\",\n        \"id\": id(\"1.3.6.1.4.1.28284.6.2.2.18.2\", \"TL\")\n      }\n    },\n    \"acknowledgement\": {\n      \"typeCode\": { \"@code\": \"AA\" },\n      \"targetMessage\": { \"id\": id(\"1.3.6.1.4.1.28284.1.26.2.7\", \"SonumID\") }\n    },\n    \"controlActProcess\": {\n      \"@moodCode\": \"EVN\",\n      \"@type\": \"ext:RCMR_IN000030UV01_Extension.ControlActProcess\",\n      \"@HL7-Domain\": \"QUQI_DM000000UV\",\n      \"@realmCode\": \"EE\",\n      \"subject\": [\n        {\n          \"clinicalDocument\": {\n            \"@type\": \"ext:RCMR_MT000001UV_Extension.ClinicalDocument\",\n            \"templateId\": id(\"1.3.6.1.4.1.28284.6.1.1\", \"1.3.6.1.4.1.28284.6.1.1.64.8\"),\n            \"id\": id(\"1.3.6.1.4.1.3516.13.1.2.3.1.3\", \"1866393\"),\n            \"code\": {\n              \"@code\": \"64\",\n              \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.3.9\",\n              \"@codeSystemName\": \"Dokumendi tüüp\",\n              \"@displayName\": \"saatekirja vastus\"\n            },\n            \"statusCode\": { \"@code\": \"completed\" },\n            \"effectiveTime\": { \"@value\": \"20191129130504\" },\n            \"confidentialityCode\": {\n              \"@code\": \"N\",\n              \"@codeSystem\": \"2.16.840.1.113883.5.25\",\n              \"@codeSystemName\": \"Konfidentsiaalsus\",\n              \"@displayName\": \"avatud\"\n            },\n            \"languageCode\": { \"@code\": \"EST\" },\n            \"setId\": id(\"1.3.6.1.4.1.29907.1.1.6.11\", \"107233297\"),\n            \"versionNumber\": { \"@value\": \"1\" },\n            \"recordTarget\": {\n              \"@typeCode\": \"RCT\",\n              \"patient\": {\n                \"@classCode\": \"PAT\",\n                \"id\": id(\"1.3.6.1.4.1.28284.6.2.2.1\", patient),\n                \"statusCode\": { \"@code\": \"A\" },\n                \"patientPerson\": {\n                  \"name\": {\n                    \"given\": firstname(patient),\n                    \"family\": lastname(patient)\n                  }\n                }\n              }\n            },\n            \"author\": {\n              \"@typeCode\": \"AUT\",\n              \"time\": { \"@value\": \"20191129130504\" },\n              \"assignedAuthor\": {\n                \"@classCode\": \"ASSIGNED\",\n                \"@type\": \"ext:RCMR_MT000001UV_Extension.COCT_MT090000UV.AssignedEntity\",\n                \"id\": { \"@nullFlavor\": \"NI\" },\n                \"representedOrganization\": {\n                  \"@classCode\": \"ORG\",\n                  \"@determinerCode\": \"INSTANCE\",\n                  \"id\": id(\"1.3.6.1.4.1.28284.4\", \"10822068\"),\n                  \"name\": \"AS Ida-Tallinna Keskhaigla\",\n                  \"addr\": {\n                    \"@use\": \"PHYS\",\n                    \"country\": \"EST\",\n                    \"county\": \"Harju maakond\",\n                    \"city\": \"Tallinn\",\n                    \"streetName\": \"Ravi\",\n                    \"houseNumber\": \"18\",\n                    \"unitID\": \"0298\",\n                    \"postalCode\": \"10138\",\n                    \"unitType\": \"EHAK\"\n                  }\n                }\n              }\n            },\n            \"custodian\": {\n              \"@typeCode\": \"CST\",\n              \"assignedCustodian\": {\n                \"representedOrganization\": {\n                  \"id\": id(\"1.3.6.1.4.1.28284.4\", \"10822068\"),\n                  \"name\": \"AS Ida-Tallinna Keskhaigla\"\n                }\n              }\n            },\n            \"componentOf\": {\n              \"encompassingEncounter\": {\n                \"@classCode\": \"ENC\",\n                \"@moodCode\": \"EVN\",\n                \"id\": id(\"1.3.6.1.4.1.29907.1.1.6.11\", \"107233297\"),\n                \"effectiveTime\": { \"@nullFlavor\": \"NI\" }\n              }\n            },\n            \"sourceOf\": {\n              \"@typeCode\": \"XCERPT\",\n              \"procedure\": {\n                \"@classCode\": \"PROC\",\n                \"@moodCode\": \"EVN\",\n                \"code\": {\n                  \"@code\": \"3414-0\",\n                  \"@codeSystem\": \"2.16.840.1.113883.6.1\",\n                  \"@codeSystemName\": \"ELMÜ LOINC koodistik\",\n                  \"@displayName\": \"Buprenorfiin uriinis\"\n                },\n                \"statusCode\": { \"@code\": \"completed\" },\n                \"effectiveTime\": { \"@value\": \"20191129130504\" },\n                \"specimen\": {\n                  \"id\": id(\"Barcode\", \"IP0041250068\"),\n                  \"specimenNatural\": {\n                    \"code\": {\n                      \"@code\": \"U\",\n                      \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.244.5\",\n                      \"@codeSystemName\": \"ELMÜ proovimaterjali tüüp\",\n                      \"@displayName\": \"Uriin\"\n                    }\n                  },\n                  \"participation1\": {\n                    \"process\": {\n                      \"@moodCode\": \"EVN\",\n                      \"effectiveTime\": { \"@value\": \"20191129125700\" }\n                    }\n                  }\n                },\n                \"sourceOf2\": [\n                  {\n                    \"@typeCode\": \"COMP\",\n                    \"observation\": {\n                      \"@classCode\": \"OBS\",\n                      \"@moodCode\": \"EVN\",\n                      \"id\": id(\"1.3.6.1.4.1.3516.13.1.2.3.1.5\", \"30591836\"),\n                      \"code\": {\n                        \"@code\": \"ANA\",\n                        \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.5.1\",\n                        \"@codeSystemName\": \"Observation liik\",\n                        \"@displayName\": \"Analüüs\"\n                      },\n                      \"value\": {\n                        \"@type\": \"CD\",\n                        \"@code\": \"N\",\n                        \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.266.3\",\n                        \"@codeSystemName\": \"Kvalitatiivse uuringu vastus\",\n                        \"@displayName\": \"negatiivne\"\n                      },\n                      \"interpretationCode\": {\n                        \"@code\": \"N\",\n                        \"originalText\": null\n                      },\n                      \"referenceRange\": {\n                        \"@typeCode\": \"REFV\",\n                        \"observationRange\": {\n                          \"value\": {\n                            \"@type\": \"ED\",\n                            \"#text\": \"negatiivne\"\n                          },\n                          \"interpretationCode\": { \"@code\": \"N\" }\n                        }\n                      }\n                    }\n                  },\n                  {\n                    \"@typeCode\": \"COMP\",\n                    \"procedure\": {\n                      \"@classCode\": \"PROC\",\n                      \"@moodCode\": \"EVN\",\n                      \"code\": {\n                        \"@code\": \"L-4888\",\n                        \"@codeSystem\": \"2.16.840.1.113883.6.1\",\n                        \"@codeSystemName\": \"ELMÜ LOINC koodistik\",\n                        \"@displayName\": \"Nõusolek lisauuringuks\"\n                      },\n                      \"statusCode\": { \"@code\": \"completed\" },\n                      \"specimen\": {\n                        \"id\": id(\"Barcode\", \"IP0041250068\"),\n                        \"specimenNatural\": {\n                          \"code\": {\n                            \"@code\": \"U\",\n                            \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.244.5\",\n                            \"@codeSystemName\": \"ELMÜ proovimaterjali tüüp\",\n                            \"@displayName\": \"Uriin\"\n                          }\n                        },\n                        \"participation1\": {\n                          \"process\": {\n                            \"@moodCode\": \"EVN\",\n                            \"effectiveTime\": { \"@value\": \"20191129125700\" }\n                          }\n                        }\n                      },\n                      \"sourceOf2\": {\n                        \"@typeCode\": \"COMP\",\n                        \"observation\": {\n                          \"@classCode\": \"OBS\",\n                          \"@moodCode\": \"EVN\",\n                          \"id\": id(\"1.3.6.1.4.1.3516.13.1.2.3.1.5\", \"30591834\"),\n                          \"code\": {\n                            \"@code\": \"ANA\",\n                            \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.5.1\",\n                            \"@codeSystemName\": \"Observation liik\",\n                            \"@displayName\": \"Analüüs\"\n                          },\n                          \"value\": {\n                            \"@type\": \"ED\",\n                            \"#text\": \"JAH\"\n                          },\n                          \"interpretationCode\": {\n                            \"@code\": \"N\",\n                            \"originalText\": null\n                          }\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      ],\n      \"queryAck\": {\n        \"queryId\": id(\"1.3.6.1.4.1.28284.1.26.2.8\", \"ParinguID\"),\n        \"queryResponseCode\": { \"@code\": \"OK\" },\n        \"resultTotalQuantity\": { \"@value\": \"283\" }\n      },\n      \"queryByParameter\": {\n        \"@type\": \"ext:RCMR_MT000003UV_Extension.QueryByParameter\",\n        \"@HL7-Domain\": \"RCMR_RM000000\",\n        \"@realmCode\": \"EE\",\n        \"queryId\": id(\"1.3.6.1.4.1.28284.1.26.2.8\", \"ParinguID\"),\n        \"patient.id\": { \"value\": id(\"1.3.6.1.4.1.28284.6.2.2.1\", patient) },\n        \"serviceEvent.code\": {\n          \"value\": {\n            \"@code\": \"procedures\",\n            \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.32.10\"\n          }\n        },\n        \"procedure.effectiveTime\": {\n          \"value\": {\n            \"low\": { \"@value\": \"20190101\" },\n            \"high\": { \"@value\": \"20191129\" }\n          }\n        }\n      },\n      \"queryContinuation\": {\n        \"startResultNumber\": { \"@value\": \"1\" },\n        \"continuationQuantity\": { \"@value\": \"15\" },\n        \"statusCode\": { \"@code\": \"deliveredResponse\" }\n      }\n    }\n  }\n}\n\nexport function immunizationFor(patient: string) {\n  return {\n    \"typeId\": id(\"2.16.840.1.113883.1.3\", \"POCD_HD000040\"),\n    \"templateId\": id(\"1.3.6.1.4.1.28284.6.1.1\", \"1.3.6.1.4.1.28284.6.1.1.281.1\"),\n    \"id\": id(\"1.3.6.1.4.1.28284.6.2.4.96\", \"db923307-d53c-4c07-bab3-144afa974d1c\"),\n    \"code\": {\n      \"@code\": \"83\",\n      \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.1.3.5\",\n      \"@codeSystemName\": \"Dokumendi tüüp\",\n      \"@displayName\": \"Immuniseerimispass\"\n    },\n    \"title\": \"Immuniseerimispass\",\n    \"effectiveTime\": { \"@value\": \"20191126134144\" },\n    \"confidentialityCode\": {\n      \"@code\": \"N\",\n      \"@codeSystem\": \"2.16.840.1.113883.5.25\",\n      \"@codeSystemName\": \"Konfidentsiaalsus\",\n      \"@displayName\": \"avatud\"\n    },\n    \"languageCode\": { \"@code\": \"EST\" },\n    \"versionNumber\": { \"@value\": \"1\" },\n    \"recordTarget\": {\n      \"@typeCode\": \"RCT\",\n      \"realmCode\": { \"@code\": \"PAT\" },\n      \"patientRole\": {\n        \"@classCode\": \"PAT\",\n        \"id\": id(\"1.3.6.1.4.1.28284.6.2.2.1\", patient),\n        \"patient\": {\n          \"@classCode\": \"PSN\",\n          \"@determinerCode\": \"INSTANCE\",\n          \"name\": {\n            \"given\": firstname(patient),\n            \"family\": lastname(patient)\n          }\n        }\n      }\n    },\n    \"author\": {\n      \"@typeCode\": \"AUT\",\n      \"time\": { \"@value\": \"20191126134144\" },\n      \"assignedAuthor\": {\n        \"@classCode\": \"ASSIGNED\",\n        \"id\": id(\"1.3.6.1.4.1.28284.6.2.4.32\", \"DL\"),\n        \"representedOrganization\": {\n          \"@classCode\": \"ORG\",\n          \"@determinerCode\": \"INSTANCE\",\n          \"id\": id(\"1.3.6.1.4.1.28284.6.2.4.32\", \"DL\"),\n          \"name\": \"Tervise ja Heaolu Infosüsteemide Keskus\"\n        }\n      }\n    },\n    \"custodian\": {\n      \"@typeCode\": \"CST\",\n      \"assignedCustodian\": {\n        \"representedCustodianOrganization\": {\n          \"id\": id(\"1.3.6.1.4.1.28284.6.2.4.32\", \"DL\"),\n          \"name\": \"Tervise infosüsteem\"\n        }\n      }\n    },\n    \"component\": {\n      \"@typeCode\": \"COMP\",\n      \"structuredBody\": {\n        \"@classCode\": \"DOCBODY\",\n        \"@moodCode\": \"EVN\",\n        \"component\": {\n          \"@typeCode\": \"COMP\",\n          \"section\": {\n            \"@classCode\": \"DOCSECT\",\n            \"@moodCode\": \"EVN\",\n            \"code\": {\n              \"@code\": \"IMM\",\n              \"@codeSystem\": \"1.3.6.1.4.1.28284.6.2.2.11.6\",\n              \"@codeSystemName\": \"Sektsiooni kodeering\",\n              \"@displayName\": \"Immuniseerimine\"\n            },\n            \"title\": \"Immuniseerimine\",\n            \"text\": {\n              \"paragraph\": [\n                {\n                  \"content\": {\n                    \"Immuniseerimine\": \"01.08.2008\",\n                    \"Mille vastu\": \"Tuberkuloos\",\n                    \"Vaktsiin\": \"\",\n                    \"Partii\": \"ABS&<32413\",\n                    \"ATC\": \"J07AN01, BCG VACCINE SSI\",\n                    \"Annus\": \"400 mg\",\n                    \"Annuse kordsus\": \"\",\n                    \"Immuniseerija\": \"Tatjana Katjuk, kood D06176\",\n                    \"Järgmine immuniseerimine\": \"\",\n                    \"Allikas\": \"\",\n                    \"Kuupäev\": \"05.08.2008 11:23:45\",\n                    \"Tervishoiutöötaja\": \"Ants Kass, kood D02488\",\n                    \"Asutus\": \"90006399 SA Põhja-Eesti Regionaalhaigla\",\n                    \"Dokumendi number\": \"27122016_0\",\n                    \"Dokumendi tüüp\": \"Ambulatoorne epikriis\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n","import { Store } from 'redux';\nimport { InstanceName, ViewName, MESSAGE, Message, Payload, ProcessImplName, ProcessState } from './process/Base';\nimport { AppState } from './store';\nimport { __, Translator, TranslatorWithParams } from './i18n';\n\nexport const STATE_UPDATE = \"STATE_UPDATE\";\nexport const INITIALIZED = \"INITIALIZED\";\n\ntype MessagingTarget = Window | ServiceWorker | null;\n\nexport class StateUpdateMessage<P> {\n  type!: typeof STATE_UPDATE;\n  name!: InstanceName;\n  impl!: ProcessImplName;\n  view!: ViewName;\n  mem?: P;\n  statusUpdateChannel?: number;\n}\n\nfunction selectProcess(state: AppState, arena: string, process: InstanceName): StateUpdateMessage<any> {\n  let ps = state.theatre.arenas.byName[arena].process.byName[process];\n  if (ps === undefined) {\n    // no such process?\n    return { type: STATE_UPDATE, name: process, impl: \"\", view: \"\" };\n  }\n  return { type: STATE_UPDATE, name: process, impl: ps.type, view: ps.view, mem: ps.mem }\n}\n\nclass StateUpdater {\n  arena: string;\n  process: InstanceName;\n  store: Store;\n  url: URL;\n  ui: MessagingTarget;\n\n  _cachedState: any;\n  _storeUnsubscriber: any = null;\n  _messageListener: ((message: MessageEvent) => any) | null = null;\n  _channel: number;\n\n  constructor(arena: string, process: InstanceName, store: Store, url: string, ui?: MessagingTarget) {\n    this.arena = arena;\n    this.process = process;\n    this.store = store;\n    this.url = new URL(url, window.location.href);\n    if (ui === undefined) {\n      this.ui = window.open(url, `${arena} - ${process}`);\n    } else {\n      this.ui = ui;\n    }\n    this._channel = Math.random();\n  }\n\n  registerListeners() {\n    this._storeUnsubscriber = this.store.subscribe(() => { this.stateChanged(); })\n    this._messageListener = (message) => { this.processMessage(message); };\n    window.addEventListener(\"message\", this._messageListener);\n    return this;\n  }\n\n  unregisterListeners() {\n    this._storeUnsubscriber();\n    this._storeUnsubscriber = null;\n\n    if (this._messageListener !== null) {\n      window.removeEventListener(\"message\", this._messageListener);\n      this._messageListener = null;\n    }\n\n    return this;\n  }\n\n  stateChanged() {\n    let state = selectProcess(this.store.getState(), this.arena, this.process);\n    if (state !== this._cachedState) {\n      // postMessage originiga, mis ei ole \"*\" ei tööta ffga?\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Example lõpp\n      try {\n        this.ui!.postMessage({ ...state, statusUpdateChannel: this._channel }, this.url.origin);\n      } catch (e) {\n        console.error(\"Error posting message, stopping\", e);\n        this.unregisterListeners();\n      }\n      this._cachedState = state;\n    }\n    return this;\n  }\n\n  processMessage(msg: MessageEvent): void {\n    switch (msg.data.type) {\n      case INITIALIZED:\n        this._cachedState = undefined; // force state update\n        this.stateChanged();\n        return;\n\n      default:\n        if (msg.data.statusUpdateChannel !== this._channel) {\n          // not for us. \n          return;\n        }\n\n        // only messages to self.\n        this.store.dispatch({\n          type: MESSAGE,\n          arena: this.arena,\n          sender: this.process,\n          receivers: [this.process],\n          message: { ...msg.data, statusUpdateChannel: undefined },\n        } as Message<Payload>);\n    }\n  }\n}\n\nconst registeredUpdaters: StateUpdater[] = [];\n\nexport function registerGlobalListener(store: Store) {\n  window.addEventListener(\"message\", ev => {\n    if (ev.data.type === INITIALIZED) {\n      let [arena, process] = ev.data.target.split(' - ');\n      let url = ev.data.url;\n      if (registeredUpdaters.find(su => su.arena === arena && su.process === process && su.ui === ev.source) === undefined) {\n        console.log(\"Unregistered childwindow, registering: \", ev.data);\n        registeredUpdaters.push(\n          new StateUpdater(arena, process, store, url, ev.source as Window)\n            .registerListeners()\n            .stateChanged()\n        );\n        ev.preventDefault();\n      }\n    }\n  });\n}\n\nexport function launchUI(arena: string, process: InstanceName, url: string, store: Store) {\n  registeredUpdaters.push(new StateUpdater(arena, process, store, url).registerListeners());\n}\n\n\nexport class BackendStateUpdater<S, C extends BackendAPI<S>> {\n  state!: StateUpdateMessage<S>;\n\n  setter: (newState: BackendAPI<S>) => void;\n  caster: { new(s: StateUpdateMessage<S>): C };\n\n  constructor(setter: (newState: BackendAPI<S>) => void, caster: { new(s: StateUpdateMessage<S>): C }) {\n    this.setter = setter;\n    this.caster = caster;\n    console.log(\"setting listener\");\n    window.addEventListener(\"message\", (ev) => { this.receiveNewState(ev); });\n  }\n\n  setState(newState: StateUpdateMessage<S>) {\n    console.log(\"updating state:\", newState);\n    this.state = newState;\n    this.setter(new this.caster(newState).withUpdater(this));\n  }\n\n  resetState() {\n    this.postMessage(INITIALIZED, { target: window.name, url: window.location.href });\n  }\n\n  postMessage(type: string, message?: any) {\n    if (window.opener === null) {\n      this.setState({ type: STATE_UPDATE, view: \"\", mem: { \"error\": \"NO OPENER WINDOW\", ui: {} } } as any);\n      return;\n    }\n\n    const channelId = this.state !== undefined ? { statusUpdateChannel: this.state.statusUpdateChannel } : {};\n\n    let msg = Object.assign({}, (message === undefined ? {} : message), { type }, channelId);\n    console.log(\"posting message:\", msg);\n    window.opener.postMessage(msg);\n  }\n\n  receiveNewState(ev: MessageEvent) {\n    if (ev.data.type === STATE_UPDATE) {\n      this.setState(ev.data);\n    }\n  }\n}\n\nexport class BackendAPI<S> extends StateUpdateMessage<S> {\n  updater!: BackendStateUpdater<S, BackendAPI<S>>;\n\n  constructor(msg?: StateUpdateMessage<S>) {\n    super();\n    Object.assign(this, msg);\n  }\n\n  withUpdater(updater: BackendStateUpdater<S, BackendAPI<S>>) {\n    this.updater = updater;\n    return this;\n  }\n\n  post(msg: () => Payload) {\n    let m = msg();\n    this.updater.postMessage(m.type, m);\n  }\n\n\n  arena(): string {\n    return window.name.split(\" - \")[0];\n  }\n\n  tRefs(): [Translator, TranslatorWithParams] {\n    let _this = this;\n    let arena = this.arena();\n    let props = { arena: arena, process: { name: _this.name, type: _this.impl } as ProcessState<any> };\n\n    return [(...k) => __(props, k), (k, o) => __(props, k, o)];\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ProcessState, Message, Payload } from '../process/Base';\nimport { AppState } from '../store';\nimport { arenaFromState } from '../process/Theatre';\nimport { LogRow, receivers, formatLogtime } from './LogRows';\nimport { Modal, Button, ModalFooter } from 'react-bootstrap';\nimport { __ } from '../i18n';\n\ninterface LogProps {\n  arena: string;\n  owner?: ProcessState<any>;\n  showSelf?: boolean;\n  maxRows?: number;\n  rows?: Message<any>[];\n  t?: any;\n  className?: string;\n  scroll?: boolean;\n}\n\n\nclass LogView extends React.Component<LogProps> {\n\n  ref: React.RefObject<any> = React.createRef();\n\n  state = {\n    msg: undefined as (Message<any> | undefined)\n  }\n\n  closePopup() {\n    this.setState({ msg: undefined });\n  }\n\n  showPopup(msg: Message<any>) {\n    this.setState({ msg });\n  }\n\n  componentDidUpdate() {\n    this.scollToBottom();\n  }\n\n  componentDidMount() {\n    if (this.props.scroll) {\n      setTimeout(() => {\n        this.scollToBottom();\n      })\n    }\n  }\n\n  scollToBottom() {\n    if (this.ref.current) this.ref.current.scroll(0, this.ref.current.scrollHeight);\n  }\n\n  filterFn: (msg: Message<Payload>) => boolean = (msg) => {\n    if (msg.receivers.length === 1 && msg.receivers.includes(msg.sender) && !this.props.showSelf) {\n      return false;\n    }\n\n    if (this.props.owner !== undefined && !(msg.sender === this.props.owner.name || msg.receivers.includes(this.props.owner.name))) {\n      return false;\n    }\n\n    return true;\n  }\n\n  formatLogLine(msg: Message<Payload>, index: number, owner?: ProcessState<any>) {\n    const _this = this;\n    return (<li className=\"log-item\" key={index}>\n      {LogRow(this.props.arena, index, msg, owner, msg => { _this.showPopup(msg) })}\n    </li>);\n  }\n\n  popup() {\n    const msg = this.state.msg;\n    const _this = this;\n    const t = this.props.t || ((a: string) => a);\n\n    return (\n      <Modal show={msg !== undefined} onHide={() => _this.closePopup()} size=\"lg\">\n        <Modal.Body>\n          {msg === undefined ? \"No message?\" : (\n            <div>\n              <div className=\"log-details\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h4>{t('msg-log.sender')}:</h4>\n                    <p>{msg!.sender}</p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h4>{t('msg-log.receivers')}:</h4>\n                    <p>{receivers(msg!.receivers)}</p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h4>{t('msg-log.type')}:</h4>\n                    <p>{msg!.message.type}</p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h4>{t('msg-log.time')}:</h4>\n                    <p>{formatLogtime(msg.now!)}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <pre className=\"text-left\">\n                    {JSON.stringify({\n                      ...msg,\n                      type: undefined,\n                      statusUpdateChannel: undefined,\n                      arena: undefined,\n                      now: undefined,\n                      random: undefined,\n                    }, undefined, \"  \")}\n                  </pre>\n                </div>\n              </div>\n            </div>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={(ev: any) => _this.closePopup()}>{t('close')}</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  render() {\n    const logLines = (this.props.rows!\n      .filter(this.filterFn)\n      .slice(-(this.props.maxRows || 4)));\n\n    if (logLines.length === 0) {\n      return (\n        <span className=\"no-msg-log\">\n          {__({ arena: this.props.arena, process: (this.props.owner || {}) as ProcessState<any> }, [\"no-log-lines\"])}\n        </span>\n      );\n    }\n\n    return (\n      <>\n        {this.popup()}\n        <samp className=\"msg-log\" ref={this.ref}>\n          <ul className=\"log-view\">\n            {logLines.map((line, index) => this.formatLogLine(line, index, this.props.owner))}\n          </ul>\n        </samp>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: AppState, ownProps: LogProps) {\n  return { rows: arenaFromState(state, ownProps.arena).log };\n}\n\nexport const MessageLog = connect(mapStateToProps)(LogView);\n\n\nexport class LogButton extends React.PureComponent<LogProps, { show: boolean }> {\n  state = { show: false };\n\n  render() {\n    const t = this.props.t;\n    return (<>\n      <Modal show={this.state.show} onHide={() => this.setState({ show: false })} size=\"lg\">\n        <Modal.Header>\n          <Modal.Title>{__({ arena: this.props.arena, process: this.props.owner! }, [\"log\"])}: {\n            this.props.owner !== undefined ? __({ arena: this.props.arena, process: this.props.owner }, [\"title\"]) : <></>}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"msg-log-popup\">\n            <MessageLog {...this.props} scroll={true} />\n          </div>\n        </Modal.Body>\n        <ModalFooter>\n          <Button variant=\"secondary\" onClick={(ev: any) => this.setState({ show: false })}>{t('close')}</Button>\n        </ModalFooter>\n      </Modal>\n      <Button className={this.props.className} onClick={(ev: any) => this.setState({ show: true })}>{this.props.children}</Button>\n    </>)\n  }\n}","import * as React from 'react';\n\nimport { ProcessState, ProcessRenderer, findRenderer, uiMap } from '../process/Base';\nimport { useStore } from 'react-redux';\nimport { launchUI } from '../postMessage';\nimport { __ } from '../i18n';\nimport { LogButton } from './MessageLog';\nimport { Modal, ModalFooter, Button } from 'react-bootstrap';\n\nfunction render<S>({ process, arena }: ProcessUIProps<S>): ReturnType<ProcessRenderer<S>> {\n  return (findRenderer(process))({ process, arena });\n}\n\n// Protsessi-kasti komponent. \n\nexport interface ProcessUIProps<S> {\n  process: ProcessState<S>;\n  arena: string; // current arena.\n  children?: any;\n  button?: boolean;\n}\n\n\n\nexport function ProcessUI({ process, arena }: ProcessUIProps<any>) {\n  const t = (...keys: string[]) => __({ arena, process }, keys);\n  const [visible, setVisible] = React.useState(false);\n  return (\n    <div className=\"col\">\n      <div className={`card process style-${t('stylename')}`} id={`proc-${process.name}`}>\n        <div className=\"card-header\">\n          <Modal show={visible} onHide={() => setVisible(false)} size=\"lg\">\n            <Modal.Header>\n              <Modal.Title>{t(\"internal-state\")}: {t('title')}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"msg-log-popup\">\n                <pre className=\"msg-log\">{JSON.stringify(process, undefined, \"  \")}</pre>\n              </div>\n            </Modal.Body>\n            <ModalFooter>\n              <Button variant=\"secondary\" onClick={() => setVisible(false)}>{t('close')}</Button>\n            </ModalFooter>\n          </Modal>\n          <span\n            className=\"process-name\"\n            onClick={() => setVisible(true)}>\n            {t(\"title\")}\n          </span>\n          <LogButton\n            arena={arena}\n            owner={process}\n            showSelf={true}\n            maxRows={100}\n            t={t}\n            className=\"btn-log btn-light btn-sm\"\n          >{t('msg-log.log-button')}</LogButton>\n        </div>\n        <div className=\"card-body\">\n          <span className=\"process-state\">{render({ process, arena })}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function UILink({ arena, process, children, button }: ProcessUIProps<any>) {\n  const store = useStore();\n  function launch() {\n    launchUI(arena, process.name, uiMap[process.type], store);\n  }\n\n  const el = button === true ? 'button' : 'div'\n\n  if (uiMap[process.type] === undefined) {\n    return <></>;\n  } else {\n    return React.createElement(el, {\n      className: button !== true ? \"process-uilink\" : \"btn btn-primary\",\n      onClick: () => launch()\n    }, children === undefined ? \"\\u2398\" : children);\n  }\n}\n\n","import { ConsentServicePS, ConsentServiceState } from './types';\nimport { ProcessAndArena } from '../Base';\nimport React from 'react';\nimport { UILink } from '../../components/Process';\nimport { __ } from '../../i18n';\n\nexport interface CSViewProps extends ProcessAndArena<ConsentServiceState> {\n  process: ConsentServicePS;\n}\n\nexport const ConsentServiceRenderer: React.FC<CSViewProps> = ({ process, arena }) => {\n  const t = (...k: string[]) => __({ process, arena }, k);\n\n  const now = (Date.now() / 1000) | 0;\n\n  return (<div>\n    <p>{process.mem.ui.user !== undefined ? `${t('active-user')} : ${process.mem.ui.user}` : `${t('no-active-user')}.`}</p>\n    <p className=\"small\">\n      {process.mem.db.serviceDeclarations.length} {t('service-declarations')}, <br />\n      {process.mem.db.purposeDeclarations.length} {t('purpose-declarations')}, <br />\n      {process.mem.db.consents.filter(c => (!c.revoked && c.validFrom <= now && c.validUntil >= now)).length} {t('active-consents')}, <br />\n      {process.mem.db.consents.length} {t('total-consents')}\n    </p>\n    <UILink process={process} arena={arena} button={true}> {t('open-end-user-view')}</UILink>\n  </div>);\n}\n\n","import { ConsentServicePS, ConsentServiceDefaultView, ConsentService } from './types'\nimport { addUi, addRenderer } from '../Base';\nimport { ConsentServiceRenderer } from './views';\n\nexport function createConsentService(name: string): ConsentServicePS {\n  return {\n    type: ConsentService,\n    view: ConsentServiceDefaultView,\n    name: name,\n    title: name,\n    mem: {\n      ui: {\n        activePurposeDeclaration: {},\n      },\n      db: {\n        serviceDeclarations: [],\n        purposeDeclarations: [],\n        consents: [],\n        usageLog: [],\n      }\n    },\n    queue: [],\n  };\n}\n\naddRenderer(ConsentService, ConsentServiceDefaultView, ConsentServiceRenderer);\naddUi(ConsentService, './ui/csui/');\n","import { createClient } from \"../process/client/constructor\";\nimport { createServiceProvider } from \"../process/serviceProvider/constructor\";\nimport { diagnosisFor, studyFor, immunizationFor } from \"./hl7\";\nimport { createConsentService } from \"../process/consentService/constructor\";\nimport { consentRefApiLogRenderers } from \"../components/LogRows\";\nimport { SecretRecord } from \"../process/serviceProvider/types\";\n\nconst CS1Address = \"EE/GOV/70009770/nt\";\n\nexport function createData(subjectId: string, type: string, data: any): SecretRecord {\n  return {\n    key: \"\" + ((Math.random() * 10000) | 0),\n    type: type,\n    subject: subjectId,\n    data: data\n  };\n}\n\n\nexport function createDemoArena() {\n  return {\n    processes: [\n      createClient(\"EE/COM/10112345/healthstartup\", CS1Address, [ // client configuration\n        { // vaktsineerimise meeldetuletused\n          purposeDeclarationId: \"tervisepaevik_vaktsineerimised\",\n          services: [\n            {\n              serviceAddress: \"EE/GOV/70009770/digilugu\",\n              serviceName: \"hl7!1.3.6.1.4.1.28284.6.1.1.282\",\n            }\n          ]\n        },\n        { // terviseandmete visualiseerimine\n          purposeDeclarationId: \"tervisepaevik_visualiseerimine\",\n          services: [\n            { // diagnoosid\n              serviceAddress: \"EE/GOV/70009770/digilugu\",\n              serviceName: \"hl7!1.3.6.1.4.1.28284.6.1.1.32\",\n            },\n            { // uuringud\n              serviceAddress: \"EE/GOV/70009770/digilugu\",\n              serviceName: \"hl7!1.3.6.1.4.1.28284.6.1.1.35\",\n            }\n          ]\n        }\n      ], [ // prefilled service declaration templates\n        {\n          purposeDeclarationId: \"tervisepaevik_visualiseerimine\",\n          name: \"Terviseandmete visualiseerimine\",\n          description: \"HealthStartup diagnooside ja uuringute tulemuste visualiseerimist pakkuv teenus.\\n\\n\" +\n            \"Nõusoleku tagasivõtmisel kustutab HealthStartup kõik Sinu kohta saadud andmed.\",\n          services: [\n            { serviceProviderId: \"EE/GOV/70009770\", serviceDeclarationId: \"hl7_diagnoosid\" },\n            { serviceProviderId: \"EE/GOV/70009770\", serviceDeclarationId: \"hl7_uuringud\" }\n          ]\n        },\n        {\n          purposeDeclarationId: \"tervisepaevik_vaktsineerimised\",\n          name: \"Vaktsineerimiste meeldetuletused\",\n          description: \"HealthStartup vaktsineerimiste meeldetuletusi ja immuniseerimisplaani pakkuv teenus.\\n\\n\" +\n            \"Nõusoleku tagasivõtmisel kustutab HealthStartup kõik Sinu kohta saadud andmed.\",\n          services: [\n            { serviceProviderId: \"EE/GOV/70009770\", serviceDeclarationId: \"hl7_immuniseerimispass\" }\n          ]\n        }\n      ]),\n\n      createServiceProvider(\"EE/GOV/70009770/digilugu\", \"Tervise Infosüsteem\", [ // services\n        { // immuniseerimispassi teenus\n          serviceName: \"hl7!1.3.6.1.4.1.28284.6.1.1.282\",\n          consentService: CS1Address,\n          requiredServiceDeclarationIds: [\"hl7_immuniseerimispass\"],\n          returnedDatatypes: [\"immuniseerimine\"]\n        },\n        { // uuringute päringu teenus\n          serviceName: \"hl7!1.3.6.1.4.1.28284.6.1.1.35\",\n          consentService: CS1Address,\n          requiredServiceDeclarationIds: [\"hl7_uuringud\"],\n          returnedDatatypes: [\"uuring\"]\n        },\n        { // \n          serviceName: \"hl7!1.3.6.1.4.1.28284.6.1.1.32\",\n          consentService: CS1Address,\n          requiredServiceDeclarationIds: [\"hl7_diagnoosid\"],\n          returnedDatatypes: [\"diagnoos\"],\n        }\n      ], [ // secret data\n        createData(\"01234567890\", \"diagnoos\", { diagnoos: \"A01\", arst: \"D03677\" }),\n        createData(\"12345678901\", \"diagnoos\", { diagnoos: \"J01\", arst: \"D08031\" }),\n        createData(\"47302200234\", \"diagnoos\", diagnosisFor(\"47302200234\")),\n        createData(\"47302200234\", \"uuring\", studyFor(\"47302200234\")),\n        createData(\"47302200234\", \"immuniseerimine\", immunizationFor(\"47302200234\")),\n      ], [ // prefilled service declaration templates\n        {\n          serviceDeclarationId: \"hl7_uuringud\",\n          name: \"Uuringute päring\",\n          technicalDescription: \"X-tee teenuse 'hl7' päring, HL7 OID: 1.3.6.1.4.1.28284.6.1.1.35\",\n          description: \"Andmekogule saadetakse päringu parameetrina Sinu isikukood.\\n\\n\" +\n            \"Andmekogust Tervise Infosüsteem saadakse iga Sinu uuringu kohta järgmised andmed:\\n\" +\n            \"  * Sinu andmed: nimi ja isikukood:\\n\" +\n            \"  * Uuringu andmed:\\n\" +\n            \"    * Uuringu tegemise aeg ja koht (raviasutus)\\n\" +\n            \"    * Proovimaterjali tüüp\\n\" +\n            \"    * Uuringu tüüp\\n\" +\n            \"    * Uuringu vastus\\n\" +\n            \"  * Uuringu teostanud tervishoiutöötaja andmed: nimi, kood ja tervishoiuasutuse andmed\",\n          needSignature: true,\n          consentMaxDurationSeconds: 5 * 365 * 24 * 3600,\n        },\n        {\n          serviceDeclarationId: \"hl7_diagnoosid\",\n          name: \"Diagnooside päring\",\n          technicalDescription: \"X-tee teenuse 'hl7' päring, HL7 OID: 1.3.6.1.4.1.28284.6.1.1.32\",\n          description: \"Andmekogust Tervise Infosüsteem saadakse iga Sinu diagnoosi kohta järgmised andmed:\\n\" +\n            \"  * Sinu andmed: nimi ja isikukood\\n\" +\n            \"  * Haigusjuhtumi andmed: diagnoosi andmise aeg, diagnoos\\n\" +\n            \"  * Diagnoosi andnud tervishoiutöötaja andmed: nimi, kood ja tervishoiuasutuse andmed\",\n          needSignature: true,\n          consentMaxDurationSeconds: 5 * 365 * 24 * 3600,\n        },\n        {\n          serviceDeclarationId: \"hl7_immuniseerimispass\",\n          name: \"Immuniseerimispassi päring\",\n          technicalDescription: \"X-tee teenuse 'hl7' päring, HL7 OID: 1.3.6.1.4.1.28284.6.1.1.282\",\n          description: \"Andmekogust Tervise Infosüsteem saadakse iga Sinu immuniseerimise kohta järgmised andmed:\\n\" +\n            \"  * Sinu andmed: nimi ja isikukood\\n\" +\n            \"  * Immuniseerimise andmed:\\n\" +\n            \"    * Haigus mille vastu immuniseeriti\\n\" +\n            \"    * Immuniseerimise kuupäev\\n\" +\n            \"    * Immuunpreparaadi nimi, partii number ja manustatud annus\\n\" +\n            \"    * Mitmes annus\\n\" +\n            \"    * Järgmine immuniseerimise varaseim kuupäev\\n\" +\n            \"  * Immuniseerija andmed: nimi, kood ja tervishoiuasutuse andmed\",\n          needSignature: true,\n          consentMaxDurationSeconds: 5 * 365 * 24 * 3600,\n        },\n\n      ]),\n\n      createConsentService(\"EE/GOV/70009770/nt\"),\n    ],\n    logRenderers: {\n      ...consentRefApiLogRenderers\n    },\n  };\n}","import { ProcessState } from \"./process/Base\";\nimport { createArena } from \"./process/Arena\";\nimport { fromArray } from \"./byNameStore\";\nimport { TheatreState } from \"./process/Theatre\";\nimport { LogRendererMap, addLogRenderers } from \"./components/LogRows\";\nimport { createDemoArena } from \"./config/demo\";\n\n// initial configuration\n\ntype ConfigType = {\n  defaultArena: string;\n  arenas: { [name: string]: { processes: ProcessState<any>[]; logRenderers?: LogRendererMap }; }\n};\n\nconst config: ConfigType = {\n  defaultArena: \"demo\",\n  // arenas: arena -> [process]\n  arenas: {\n    \"demo\": createDemoArena(),\n  }\n};\n\nexport function initialTheatre(): TheatreState {\n  return {\n    name: \"theatre\",\n    arenas: fromArray(Object.keys(config.arenas).map(a => createArena(a, config.arenas[a].processes))),\n    active: config.defaultArena,\n  }\n}\n\nObject.keys(config.arenas).forEach(arena => {\n  if (config.arenas[arena].logRenderers !== undefined) {\n    addLogRenderers(arena, config.arenas[arena].logRenderers!);\n  }\n})\n","import { ArenaState, reduceArena, ArenaActionType } from './Arena';\nimport { ByNameStore, reduceByName } from '../byNameStore';\nimport { initialTheatre } from '../config';\nimport { AnyAction } from 'redux';\nimport { AppState } from '../store';\n\ntype Arenas = ByNameStore<ArenaState>;\n\nexport interface TheatreState {\n  name: string;\n  arenas: Arenas;\n  active: string;\n}\n\nexport function arenaFromState(state: AppState, arena: string) {\n  return state.theatre.arenas.byName[arena];\n}\n\nconst SELECT_ARENA = \"Theatre/SELECT_ARENA\";\ninterface SelectArenaAction extends AnyAction {\n  type: typeof SELECT_ARENA;\n  arena: string;\n}\n\nexport function selectArenaMessage(arena: string): SelectArenaAction {\n  return { type: SELECT_ARENA, arena: arena };\n}\n\nexport function reduceTheatre(state: TheatreState = initialTheatre(), action: any): TheatreState {\n  switch (action.type) {\n    case SELECT_ARENA:\n      return ({ ...state, active: action.arena });\n    default:\n      return ({ ...state, arenas: reduceByName(state.arenas, (a) => reduceArena(a, action as ArenaActionType)) });\n  }\n}\n\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { ProcessUI } from './Process';\nimport { MessageLog } from './MessageLog';\n\nimport { AppState } from '../store';\nimport { arenaFromState } from '../process/Theatre';\nimport { useTranslation } from 'react-i18next';\nimport { ArenaState } from '../process/Arena';\n\n\ninterface ArenaProps {\n  arena: ArenaState;\n}\n\nfunction ArenaElement({ arena }: ArenaProps) {\n  const { t } = useTranslation();\n  const processes = arena.process.allNames.map(\n    (p) => (<ProcessUI process={arena.process.byName[p]} arena={arena.name} key={p} />)\n  );\n  return (\n    <div>\n      <div className=\"row align-self-stretch\">{processes}</div>\n      <div className=\"card w-100 mt-4 mb-2\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{t('msg-log.title')}</h5>\n          {arena.log.length === 0 &&\n            <div className=\"d-flex align-items-center\">\n              <div className=\"spinner-grow spinner-grow-sm\" role=\"status\"></div>\n              <p className=\"card-text ml-1\">{t('msg-log.empty')}</p>\n            </div>\n          }\n          <MessageLog arena={arena.name} showSelf={false} maxRows={1000} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state: AppState, props: ArenaProps) {\n  return { log: arenaFromState(state, props.arena.name).log };\n}\n\nexport const Arena = connect(mapStateToProps)(ArenaElement);\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../store';\nimport { TheatreState, selectArenaMessage } from '../process/Theatre';\nimport { Arena } from './Arena';\nimport { Translation } from 'react-i18next';\n\ninterface TheatreProps {\n  theatre: TheatreState;\n}\n\nclass _Theatre extends React.PureComponent<TheatreProps> {\n  componentDidMount() {\n    require('../App.css');\n    require('../bootstrap.css');\n  }\n\n  render() {\n    return (\n      <div>\n        <Arena arena={this.props.theatre.arenas.byName[this.props.theatre.active]} />\n      </div>\n\n    )\n  }\n}\n\nexport const Theatre = connect(mapStateToProps)(_Theatre);\n\nfunction mapStateToProps(state: AppState) {\n  return { theatre: state.theatre }\n}\n\n\ninterface ArenaSelectorProps {\n  arenaNames: string[];\n  selectArenaMessage: (arena: string) => void;\n}\n\nclass ArenaSelectorComponent extends React.PureComponent<ArenaSelectorProps> {\n  render() {\n    if (this.props.arenaNames.length < 2) {\n      return null;\n    }\n    return (\n      <Translation>{(t) => (\n        <select className=\"form-component\" onChange={(ev) => this.props.selectArenaMessage(ev.currentTarget.value)}>\n          {this.props.arenaNames.map(\n            n => (\n              <option value={n} key={n}>\n                {t(n + \".arenaname\")}\n              </option>\n            )\n          )}\n        </select>\n      )}</Translation>\n    );\n  }\n}\n\nexport const ArenaSelector = connect(undefined, { selectArenaMessage })(ArenaSelectorComponent);\n","import { BackendAPI } from \"../../../postMessage\";\nimport { ConsentServiceState, PurposeDeclaration, Consent, UsageRecord, PurposeDeclarationRef, findFrom, ServiceDeclarationRef, ServiceDeclaration } from \"../types\";\nimport React, { useContext } from \"react\";\nimport { loginMessage, giveConsentMessage, revokeConsentMessage, activatePurposeDeclarationMessage } from \"../ui\";\nimport { hash } from \"../../../util\";\nimport { fixRevoked } from \"../referenceAPI\";\n\nexport class ConsentServiceBackend extends BackendAPI<ConsentServiceState> {\n  login(ev: any, user?: string) {\n    console.log(\"login(\", user, \")\");\n    ev.preventDefault();\n    this.post(loginMessage({ user }));\n  }\n\n  giveConsentByPurpose(ev: any, services: ServiceDeclarationRef[], clientId: string, purposeDeclarationId: string) {\n    console.log(`giveConsent(${clientId}, ${purposeDeclarationId})`);\n    ev.preventDefault();\n    this.post(giveConsentMessage({\n      dataSubject: this.mem!.ui.user,\n      clientId: clientId,\n      purposeDeclarationId: purposeDeclarationId,\n      validFrom: (Date.now() / 1000) | 0,\n      validUntil: this.getValidUntil(services),\n      revoked: false,\n      // for technical reasons, we issue consentReference here. \n      // in real system it happens in (real) backend. \n      consentReference: hash(clientId + purposeDeclarationId + Date.now())\n    }))\n  }\n\n  revokeConsent(ev: any, consentReference: string) {\n    console.log(`revokeConsent(${consentReference})`);\n    ev.preventDefault();\n    this.post(revokeConsentMessage({ consentReference, revokeAt: Math.floor(Date.now() / 1000) }))\n  }\n\n  // parameetrita/valid === undefined -> kõik aktiivse kasutaja konsendid\n  // parameetriga -> ainult need, mis kas kehtivad v]i mitte\n  getConsents(valid?: boolean): Consent[] {\n    if (this.mem === undefined) {\n      return [];\n    }\n\n    let now = (Date.now() / 1000) | 0;\n    let user = this.mem.ui.user!;\n\n    return (this.mem.db.consents\n      .map(fixRevoked(now))\n      .filter(\n        c => (c.dataSubject === user\n          && (valid === undefined\n            || (valid === (c.validFrom <= now && c.validUntil >= now && !c.revoked))))\n      ));\n  }\n\n  // need asjad kõlbavad consendi andmiseks (nõusolekutaotlused)\n  getPDsWithoutValidConsent(): PurposeDeclaration[] {\n    if (this.mem === undefined) {\n      console.error(\"Not connected? No local state yet\");\n      return [];\n    }\n\n    let consents = this.getConsents(true);\n\n    return this.mem!.db.purposeDeclarations.filter(\n      pd => (\n        consents.find(\n          c => (c.clientId === pd.clientId && c.purposeDeclarationId === pd.purposeDeclarationId)\n        ) === undefined\n      )\n    );\n  }\n\n  getUsageLogRecords(): UsageRecord[] {\n    if (this.mem === undefined) {\n      return [];\n    }\n\n    return this.mem.db.usageLog.filter(ur => ur.subjectId === this.mem!.ui.user);\n  }\n\n  activatePurposeDeclaration(ev: any, ref: PurposeDeclarationRef) {\n    ev.preventDefault();\n    if (this.mem === undefined) {\n      return;\n    }\n\n    this.post(activatePurposeDeclarationMessage(ref));\n  }\n\n  getActivePurposeDeclaration(): PurposeDeclaration | undefined {\n    if (this.mem === undefined\n      || this.mem.ui.activePurposeDeclaration === undefined\n      || this.mem.ui.activePurposeDeclaration[this.mem.ui.user!] === undefined) {\n      return undefined;\n    }\n\n    let candidate = findFrom(\n      this.mem.db.purposeDeclarations,\n      {\n        ...this.mem.ui.activePurposeDeclaration[this.mem.ui.user!],\n        callbackURL: undefined\n      } as PurposeDeclarationRef\n    );\n\n    if (candidate === undefined ||\n      findFrom(this.getConsents(true), { // if there is a valid consent for that candidate\n        clientId: candidate.clientId,\n        purposeDeclarationId: candidate.purposeDeclarationId\n      }) !== undefined) {\n\n      return undefined;\n    }\n    return {\n      ...candidate,\n      validUntil: this.getValidUntil(this.mem.db.serviceDeclarations)\n    };\n  }\n\n  getServiceDeclaration(ref: ServiceDeclarationRef): ServiceDeclaration | undefined {\n    if (this.mem === undefined) {\n      return undefined;\n    }\n\n    return findFrom(this.mem.db.serviceDeclarations, ref);\n  }\n\n  getPurposeDeclaration(ref: PurposeDeclarationRef): PurposeDeclaration | undefined {\n    if (this.mem === undefined) {\n      return undefined;\n    }\n\n    return findFrom(this.mem.db.purposeDeclarations, ref);\n  }\n\n  getValidUntil(services: ServiceDeclarationRef[]) {\n    const expiresIn = services.map(s => this.getServiceDeclaration(s)!.consentMaxDurationSeconds).sort()[0];\n    return Number(Math.floor(Date.now() / 1000)) + Number(expiresIn)\n  }\n}\n\nexport const CSBackend = React.createContext(undefined as (ConsentServiceBackend | undefined));\n\nexport class Backend {\n  use() {\n    const ctx = useContext(CSBackend);\n    return (ctx === undefined || ctx === null) ? ctx : new ConsentServiceBackend(ctx);\n  }\n}\n","import * as React from 'react';\n\n// <div className=\"footer-logo\">\n//   <img className=\"logo-brand\" alt=\"logo\" src={require('./../../../../static/assets/images/logo-est.png')} />\n// </div>\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer-top\">\n        <div className=\"footer-contact\">\n          <div>\n            <div className=\"footer-contact-icon\">\n              <i className=\"icon-phone\"></i>\n            </div>\n          </div>\n          <div className=\"footer-contact-text\">\n            <table>\n              <tbody>\n                <tr>\n                  <th><a className=\"link-phone\" href=\"tel:+372-555-1\">555 1234</a></th>\n                  <th>Üldinfo</th>\n                </tr>\n                <tr>\n                  <td><a className=\"link-phone\" href=\"tel:+372-555-1234\">555 1234</a></td>\n                  <td>Teine osakond</td>\n                </tr>\n                <tr>\n                  <td><a className=\"link-phone\" href=\"tel:+372-555-1234\">555 1234</a></td>\n                  <td>Kolmas osakond</td>\n                </tr>\n              </tbody>\n            </table>\n            <a className=\"link-orange\" href=\"http://www.digilugu.ee/\" target=\"_blank\" rel=\"noopener noreferrer\">Kõik kontaktandmed</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import { useTranslation } from \"react-i18next\";\nimport React from \"react\";\n\nexport const LanguageSelector = () => {\n  const { i18n } = useTranslation();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <div className=\"language\">\n      {\n        i18n.options.whitelist &&\n        i18n.options.whitelist.filter(\n          lang => (process.env.NODE_ENV !== \"production\" || lang !== \"cimode\")\n        ).map(\n          lang => <a href=\"#!\"\n            key={lang}\n            onClick={(e) => { e.preventDefault(); changeLanguage(lang) }}\n            className={i18n.language === lang || i18n.language.startsWith(lang + \"-\") ? 'active' : ''}>{lang}</a>\n        )\n      }\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { fullname } from '../../../../i18n';\nimport { Backend } from '../backendAPI';\nimport { LanguageSelector } from '../../../../components/LanguageSelector';\nimport { Translation } from 'react-i18next';\n\nconst Header = ({ backend }: { backend: Backend }) => {\n  const backendUse = backend.use();\n  const [t] = backendUse ? backendUse.tRefs() : [];\n  return (\n    <Translation>{ (_t) => (\n    <>\n      <nav className=\"navbar\">\n        <ul className=\"navbar-nav desktop-nav\">\n          <li className=\"nav-item with-logo\">\n            <img className=\"logo-brand\" alt=\"logo\" width=\"170\" src={require('./../../../../static/assets/images/logo-est.png')} />\n          </li>\n          <li className=\"nav-item\">\n            <LanguageSelector/>\n          </li>\n          {backendUse && backendUse.mem && backendUse.mem.ui.user &&\n            <li className=\"nav-item with-title\">\n              <p className=\"nav-item-title\">{t!('header-user')}</p>\n              <p>{fullname(backendUse.mem.ui.user)}</p>\n            </li>\n          }\n          {backendUse && backendUse.mem && backendUse.mem.ui.user &&\n            <li className=\"nav-item nav-logout\">\n              <button className=\"btn btn-logout\" onClick={(ev) => backendUse.login(ev)}>{t!('header-logout')}</button>\n            </li>\n          }\n        </ul>\n      </nav>\n    </>\n    )}</Translation>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport Footer from './footer';\nimport Header from './header';\n\nconst VeeraLayout = ({ children, backend }: any) => {\n  let backendUse = backend.use();\n  return (\n    <div className={\"wrapper \" + (backendUse && backendUse.mem && backendUse.mem.ui.user ? 'push' : '')}>\n      {backendUse && backendUse.mem && backendUse.mem.ui.user &&\n        <Header backend={backend} />\n      }\n      <div className=\"content-wrapper\">\n        <div className=\"workarea\">\n          {children}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\nexport default VeeraLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\ninterface Props {\n  activeTab: string;\n  label: string;\n  id: string;\n  onClick: (tab: string) => void;\n}\n\nexport class Tab extends React.Component<Props, {}> {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n        id\n      },\n    } = this;\n\n    let className = 'sidebar-item';\n\n    if (activeTab === id) {\n      className += ' active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n        style={{ cursor: 'pointer' }}\n        key={id}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\n\ninterface Props {\n  children: React.ReactElement<any>[];\n}\n\ninterface State {\n  activeTab: string;\n}\n\ndeclare module 'react' {\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n    // extends React's HTMLAttributes\n    label?: string;\n    id?: string;\n  }\n}\n\nclass Tabs extends React.Component<Props, State> {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.id,\n    };\n  }\n\n  onClickTabItem = (tab: string) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div>\n        <div id=\"sidebar\">\n          <ol>\n            {children.filter(c => c.props.label !== undefined).map((child) => {\n              const { id, label } = child.props;\n\n              return (\n                <Tab\n                  activeTab={activeTab}\n                  key={id}\n                  label={label}\n                  id={id}\n                  onClick={() => onClickTabItem(id)}\n                />\n              );\n            })}\n          </ol>\n        </div>\n        <div className=\"section\">\n          {children.map((child) => {\n            if (child.props.id !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import { ConsentServiceBackend } from \"./backendAPI\";\nimport { Consent } from \"../types\";\nimport React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { formatDate } from \"./CSEnduserUI\";\nimport { isConsentActive } from \"./MyConsents\";\nimport { business } from \"../../../i18n\";\nimport { renderText } from \"../../../util\";\n\nexport const ConsentModal: React.FC<{ backend: ConsentServiceBackend, consent: Consent, buttonText: string }> = ({ backend, consent, buttonText }) => {\n  const [t, t_] = backend.tRefs();\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleRevoke = (ev: any) => {\n    setShow(false);\n    backend.revokeConsent(ev, consent.consentReference);\n  }\n\n  if (backend.mem === undefined) {\n    return null;\n  }\n  const dec = backend.mem.db.purposeDeclarations.find(p => p.purposeDeclarationId === consent.purposeDeclarationId);\n  if (dec === undefined) {\n    return null;\n  }\n\n  const rowView = (name: string, value: any, last?: boolean) => {\n    return (\n      <div className=\"row\" key={name}>\n        <div className=\"col-md\">\n          <div className={last ? \"d-flex align-items-end\" : \"d-flex align-items-baseline\"}>\n            <div><h4> {name}</h4></div>\n            <div>{value}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const Body = () => {\n    let services = dec.services.map(sdref => {\n      const sd = backend.getServiceDeclaration(sdref);\n      if (sd === undefined) {\n        return <></>;\n      }\n      return (\n        <>\n          <h4>{sd.name}</h4>\n          {renderText(sd.description)}\n        </>\n      )\n    })\n    return (\n      <div className=\"tab-info\">\n        {rowView(t('consent-client'), `${business(dec.clientId, \"name\")} (${business(dec.clientId, \"ntr\")})`)}\n        {rowView(t('consent-purpose-name'), `${dec.name}`)}\n        {rowView(t('consent-given-at'), formatDate(consent.validFrom))}\n        {isConsentActive(consent)\n          ? rowView(t('consent-valid-until'), formatDate(consent.validUntil))\n          : rowView(t('consent-withdrawn-at'), formatDate(consent.validUntil))}\n        {rowView(t('consent-purpose-text'), renderText(dec.description), true)}\n        {rowView(t_(['gets-under-consent'], {\n          clientName: business(dec.clientId, \"name\")\n        }), services, true)}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} size=\"lg\">\n        <Modal.Header>\n          <Modal.Title>{t('consent-details')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Body />\n        </Modal.Body>\n        <Modal.Footer>\n          {isConsentActive(consent) &&\n            <Button variant=\"primary\" onClick={(ev: any) => handleRevoke(ev)}>\n              {t('consent-withdraw-consent')}\n            </Button>\n          }\n          <Button variant=\"secondary\" onClick={handleClose}>\n            {t('close')}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Button variant=\"primary\" onClick={handleShow}>\n        {buttonText}\n      </Button>\n    </>\n  )\n};","import { ConsentServiceBackend } from './backendAPI';\nimport React from 'react';\nimport { Consent } from '../types';\nimport { formatDate } from './CSEnduserUI';\nimport { ConsentModal } from './ConsentModal';\nimport { business, TranslatorWithParams, Translator } from '../../../i18n';\n\nexport function isConsentActive(consent: Consent) {\n  return !consent.revoked && consent.validUntil > Date.now() / 1000;\n}\n\nfunction consentDescription(t: Translator, t_: TranslatorWithParams, backend: ConsentServiceBackend, c: Consent) {\n  const a = backend.getPurposeDeclaration({ clientId: c.clientId, purposeDeclarationId: c.purposeDeclarationId });\n  return t_(['consent-description-line'], {\n    clientName: business(c.clientId, \"name\"),\n    purposeDeclName: a!.name,\n    endName: t(c.revoked ? 'consent-desc-withdrawn-at' : 'consent-desc-valid-until'),\n    validFrom: formatDate(c.validFrom),\n    validUntil: formatDate(c.validUntil)\n  });\n}\n\nexport const MyConsents = (backend: ConsentServiceBackend) => {\n  const [t, t_] = backend.tRefs();\n\n  const Table = (consents: Consent[], header: JSX.Element) => {\n    return (\n      <>\n        <h4>{header}</h4>\n        <table className=\"table align-middle\">\n          <tbody>\n            {consents.map(c => (\n              <tr key={c.clientId}>\n                <td>{consentDescription(t, t_, backend, c)}</td>\n                <td><ConsentModal backend={backend} consent={c} buttonText={t('consent-open-details')} /></td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    )\n  }\n\n  const Body = (backend: ConsentServiceBackend) => {\n\n    if (backend.getConsents().length === 0) {\n      return (\n        <p>{t('no-consents-found')}</p>\n      )\n    }\n\n    const header = (title: string, length: number) => (\n      <h4>\n        <span>{title}</span>\n        {length === 0 &&\n          <span className=\"badge badge-default ml-2\">\n            <span className=\"badge-text\">{t('consents-missing-badge')}</span>\n          </span>\n        }\n      </h4>\n    )\n\n    return (\n      <>\n        {Table(backend.getConsents(true), header(t('valid-consents'), backend.getConsents(true).length))}\n        {Table(backend.getConsents(false), header(t('invalid-consents'), backend.getConsents(false).length))}\n      </>\n    )\n  }\n\n  return (\n    <div label={t('tab-my-consents')} id=\"tab-my-consents\" key=\"tab-my-consents\"> {Body(backend)} </div>\n  )\n}\n","import { ConsentServiceBackend } from './backendAPI';\nimport { UsageRecord, PurposeDeclaration } from '../types';\nimport React from 'react';\nimport { formatDateTime } from './CSEnduserUI';\nimport { ConsentModal } from './ConsentModal';\nimport { business, TranslatorWithParams } from '../../../i18n';\n\n\nfunction header(t_: TranslatorWithParams, u: UsageRecord, backend: ConsentServiceBackend, p?: PurposeDeclaration) {\n  return formatDateTime(u.usageTime) + \" \" + business(u.clientId, \"name\") +\n    (p ? t_(['purpose-in-usage-log'], { purposeName: p.name }) : \"\");\n}\n\nfunction usageRecordDescription(t_: TranslatorWithParams, u: UsageRecord, backend: ConsentServiceBackend) {\n  const c = backend.getConsents().find(c => c.consentReference === u.consentReference);\n  if (!c) {\n    return header(t_, u, backend) + t_(['reason-no-consent'], {});\n  }\n  const p = backend.getPurposeDeclaration({ clientId: u.clientId, purposeDeclarationId: c.purposeDeclarationId });\n  if (u.result === 'OK') {\n    return header(t_, u, backend, p) + t_(['reason-ok'], {});\n  } else {\n    return header(t_, u, backend, p) + t_(['reason-consent-not-valid'], {});\n  }\n}\n\nexport const ConsentHistory = (backend: ConsentServiceBackend) => {\n  const [t, t_] = backend.tRefs();\n\n  const Modal = (backend: ConsentServiceBackend, consentReference: string) => {\n    if (!backend.mem) {\n      return;\n    }\n    const con = backend.mem.db.consents.find(c => c.consentReference === consentReference);\n    if (!con) {\n      return;\n    }\n    return (<td><ConsentModal backend={backend} consent={con} buttonText=\"Vaata nõusolekut\" /></td>)\n  }\n\n  const Body = (backend: ConsentServiceBackend) => {\n    if (backend.getUsageLogRecords().length === 0) {\n      return (\n        <p>{t('no-consent-use-events')}</p>\n      )\n    }\n    return (\n      <>\n        <h4>{t('use-history')}</h4>\n        <table className=\"table align-middle\">\n          <tbody>\n            {\n              backend.getUsageLogRecords().map(\n                u => (\n                  <tr key={u.clientId}>\n                    <td>{usageRecordDescription(t_, u, backend)}</td>\n                    {u.consentReference ? Modal(backend, u.consentReference) : (<></>)}\n                  </tr>\n                )\n              )\n            }\n          </tbody>\n        </table>\n      </>\n    )\n  }\n\n  return (\n    <div label={t('tab-consent-usage-log')} id=\"tab-usagelog\" key=\"tab-usagelog\">\n      {Body(backend)}\n    </div>\n  );\n};\n","import React from 'react';\nimport { BackendStateUpdater } from '../../../postMessage';\nimport { ConsentServiceState, PurposeDeclaration } from '../types';\nimport { ConsentServiceBackend, Backend, CSBackend } from './backendAPI';\nimport VeeraLayout from './veera/layout';\nimport Tabs from './tabs/Tabs';\nimport { MyConsents } from './MyConsents';\nimport { ConsentHistory } from './ConsentHistory';\nimport { business, Translator, TranslatorWithParams } from '../../../i18n';\nimport { renderText } from '../../../util';\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useTranslation } from 'react-i18next';\n\n\nfunction LoginScreen(t: Translator) {\n  return (\n    <div className=\"section\">\n      <h4>{t('please-login')}</h4>\n      <p className=\"mt-3\"><a href=\"../ria/\" className=\"btn btn-primary\">{t('login')}</a></p>\n    </div>\n  );\n}\n\ninterface APDProps {\n  backend: ConsentServiceBackend;\n  activeDecl?: PurposeDeclaration;\n  tabRef: React.RefObject<Tabs>;\n  label: string;\n  id: string;\n  t: Translator;\n  t_: TranslatorWithParams;\n}\n\ninterface State {\n  signPopup: boolean;\n  returnPopup: boolean;\n  savedClientId?: string;\n}\n\nclass ActivePurposeDeclaration extends React.PureComponent<APDProps, State> {\n  state: State = {\n    signPopup: false,\n    returnPopup: false,\n  };\n\n  constructor(props: APDProps) {\n    super(props);\n    this.showConsentTab = this.showConsentTab.bind(this);\n  }\n\n  showSignPopup(show: boolean) {\n    this.setState(s => ({ ...s, signPopup: show }));\n  }\n\n  showReturnPopup(show = true, clientId?: string) {\n    this.setState(s => ({ ...s, returnPopup: show, savedClientId: clientId }))\n  }\n\n  toggleSignPopup() {\n    this.setState(s => ({ ...s, signPopup: !s.signPopup }))\n  }\n\n  showConsentTab(ev: any) {\n    ev.preventDefault();\n    if (this.props.tabRef.current) this.props.tabRef.current.onClickTabItem(\"tab-my-consents\");\n  };\n\n  Popover() {\n    return (\n      <>\n        <Modal show={this.state.signPopup} onHide={() => this.toggleSignPopup()}>\n          <Modal.Body>\n            <h4>{this.props.t(\"sign-digitally\")}</h4>\n          </Modal.Body>\n          <Modal.Footer>\n            <button className=\"btn btn-primary\" onClick={(ev) => {\n              this.props.backend.giveConsentByPurpose(\n                ev,\n                this.props.activeDecl!.services,\n                this.props.activeDecl!.clientId,\n                this.props.activeDecl!.purposeDeclarationId\n              );\n              this.toggleSignPopup();\n              this.showReturnPopup(true, this.props.activeDecl!.clientId);\n            }}>{this.props.t('consent-request-sign')}</button>\n            <Button variant=\"secondary\" onClick={(ev: any) => this.toggleSignPopup()}>\n              {this.props.t('consent-request-back')}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Button variant=\"primary\" className=\"mr-2\" onClick={(ev: any) => this.toggleSignPopup()}>\n          {this.props.t('consent-request-give')}\n        </Button>\n        <Button variant=\"secondary\" onClick={(ev: any) => window.close()}>\n          {this.props.t('consent-request-do-not-give')}\n        </Button>\n      </>\n    );\n  }\n\n  ReturnScreen() {\n    let t = this.props.t;\n    return (\n      <div>\n        <h4>{t('consent-to')}{business(this.state.savedClientId!, \"name\")}{t('consent-to-after')}</h4>\n        <p>{t('consent-given-all-consents')}<a href=\"../../ui/csui\" onClick={this.showConsentTab}>{t('tab-my-consents')}</a>{t('consent-given-all-consents-after')}</p>\n        <button className=\"btn btn-primary\" onClick={() => {\n          window.close();\n          this.showReturnPopup(false);\n        }}>{t('consent-given-return')}</button>\n      </div>\n    );\n  }\n\n  render() {\n\n    const activeDecl = this.props.activeDecl;\n\n    if (activeDecl === undefined) {\n      if (this.state.returnPopup) {\n        return this.ReturnScreen();\n      } else {\n        return (<div>{this.props.t('no-open-consent-request')}</div>);\n      }\n    }\n\n    return (\n      <div className=\"tab-info\">\n        <h4 className=\"mb-4 title\">{\n          this.props.t_(['asks-for-consent'], {\n            clientName: business(activeDecl.clientId, \"name\"),\n            clientNTR: business(activeDecl.clientId, \"ntr\")\n          })\n        }</h4>\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <div className=\"d-flex align-items-baseline\">\n              <div><h4>{this.props.t('purpose-of-use')}</h4></div>\n              <div>\n                {renderText(activeDecl.description)}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <div className=\"d-flex align-items-end\">\n              <div><h4>{this.props.t('validity')}</h4></div>\n              <div>{activeDecl.validUntil && `${this.props.t('valid-until')}${formatTimestamp(activeDecl.validUntil)}`}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <div className=\"d-flex align-items-end\">\n              <div><h4>{\n                this.props.t_(['gets-under-consent'], {\n                  clientName: business(activeDecl.clientId, \"name\"),\n                  clientNTR: business(activeDecl.clientId, \"ntr\")\n                })\n              }\n              </h4></div>\n              <div>\n                {\n                  activeDecl.services.map(sdref => {\n                    const sd = this.props.backend.getServiceDeclaration(sdref);\n                    if (sd === undefined) {\n                      return <></>;\n                    }\n                    return (\n                      <>\n                        <h4>{sd.name}</h4>\n                        {renderText(sd.description)}\n                      </>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md mt-4 mb-2 text-muted\">\n            {this.props.t('you-can-withdraw')}<a href=\"../../ui/csui\" onClick={this.showConsentTab}>{this.props.t('tab-my-consents')}</a>\n          </div>\n        </div>\n        <p className=\"mt-4\">\n          {this.Popover()}\n        </p>\n      </div>\n    );\n  }\n};\n\nconst MainView = (props: { backend: Backend; tabRef: any}) => {\n\n  useTranslation();\n\n  let backendUse = props.backend.use();\n\n  if (backendUse === null || backendUse === undefined) {\n    return (\n      <>\n        <div className=\"section\">Wait, or reinit the client UI from the main window... '{window.name}'</div>\n      </>\n    );\n  }\n\n  const [t, t_] = backendUse.tRefs();\n\n  if (backendUse.mem!.ui.user === undefined) {\n    return LoginScreen(t);\n  }\n\n  const activeDecl = backendUse.getActivePurposeDeclaration();\n\n  return (\n    <Tabs ref={props.tabRef}>\n      <div label={t('tab-open-consent-requests')} id=\"tab-open-requests\" key=\"tab-open-requests\">\n        <ActivePurposeDeclaration\n          label={t('tab-open-consent-requests')}\n          id=\"tab-open-requests\"\n          backend={backendUse}\n          activeDecl={activeDecl}\n          tabRef={props.tabRef}\n          t={t} t_={t_} />\n      </div>\n      {MyConsents(backendUse)}\n      {ConsentHistory(backendUse)}\n    </Tabs>\n  )\n}\n\n\n\nexport class CSEnduserUI extends React.PureComponent<{}, ConsentServiceBackend> {\n  backendLink: BackendStateUpdater<ConsentServiceState, ConsentServiceBackend>;\n  backend: Backend;\n  ref: React.RefObject<any>;\n\n  constructor(props: any, context?: any) {\n    super(props, context);\n    this.backendLink = new BackendStateUpdater(\n      csb => { this.setState(csb as ConsentServiceBackend); },\n      ConsentServiceBackend\n    );\n    this.backend = new Backend();\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    if (process.env.NODE_ENV === \"development\") {\n      require('../../../static/css/mta_visuaal.css');\n    }\n    document.body.classList.add('temp');\n    this.backendLink.resetState();\n  }\n\n  render() {\n    return (\n      <CSBackend.Provider value={this.state}>\n        <VeeraLayout backend={this.backend}>\n          <MainView backend={this.backend} tabRef={this.ref} />\n        </VeeraLayout>\n      </CSBackend.Provider>\n    );\n  }\n}\n\nexport function formatTimestamp(timestamp: number, withTime?: boolean) {\n  if (withTime) {\n    return Intl.DateTimeFormat(\n      'et',\n      {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n      }\n    ).format(new Date(timestamp * 1000));\n  }\n  // FIXME: language code should come from translation file?\n  return Intl.DateTimeFormat('et').format(new Date(timestamp * 1000));\n}\n\nexport function formatDate(timestamp: number) {\n  return formatTimestamp(timestamp, false);\n}\n\nexport function formatDateTime(timestamp: number) {\n  return formatTimestamp(timestamp, true);\n}","import React from 'react';\nimport { BackendStateUpdater } from '../../../postMessage';\nimport { ConsentServiceState } from '../types';\nimport { ConsentServiceBackend, Backend, CSBackend } from './backendAPI';\nimport { useTranslation } from 'react-i18next';\nimport { LanguageSelector } from '../../../components/LanguageSelector';\n\n\nexport class Ria extends React.PureComponent<{}, ConsentServiceBackend> {\n  backendLink: BackendStateUpdater<ConsentServiceState, ConsentServiceBackend>;\n  backend: Backend;\n\n  constructor(props: any, context?: any) {\n    super(props, context);\n    this.backendLink = new BackendStateUpdater(csb => { this.setState(csb as ConsentServiceBackend); }, ConsentServiceBackend);\n    this.backend = new Backend();\n  }\n\n  componentDidMount() {\n    if (process.env.NODE_ENV === \"development\") {\n      require('../../../static/assets/tara/main.css');\n    }\n    this.backendLink.resetState();\n  }\n\n  render() {\n    return (\n      <CSBackend.Provider value={this.state}>\n        <MainView backend={this.backend} />\n      </CSBackend.Provider>\n    )\n  }\n\n}\n\nconst MainView = ({ backend }: { backend: Backend }) => {\n  useTranslation();\n\n  let backendUse = backend.use();\n  if (!backendUse) return (<p>Backend failed, close and reopen window.</p>)\n  let click = (ev: React.MouseEvent<HTMLButtonElement>) => {\n    ev.preventDefault();\n    backendUse!.login(ev, (ev.currentTarget.form!.elements[0] as any).value)\n    window.location.href = \"../csui/\";\n  }\n  const [t] = backendUse.tRefs();\n  return (\n    <div className=\"c-layout\">\n      <div className=\"c-layout--full\">\n        <div className=\"c-header-bar\">\n          <div className=\"container\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <header role=\"banner\">\n                <h1 aria-label={t('tara-head-short')} aria-hidden=\"true\"></h1>\n                <p aria-label={t('tara-head-title')}>{t('tara-head-title')}</p>\n              </header>\n              <div>\n                <LanguageSelector />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"c-header\">\n          <div className=\"container\">\n            <div className=\"c-header__logo\">\n              <div className=\"c-header__logo-link\">\n                <img src={require('./../../../static/assets/tara/tara-logo-et.png')} aria-hidden=\"true\" alt=\"\" /></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"c-tab-login\">\n            <main role=\"main\" className=\"c-tab-login__main\">\n              <div className=\"c-tab-login__content is-active\" data-tab=\"mobile-id\" aria-hidden=\"false\">\n                <div className=\"c-tab-login__content-wrap\">\n                  <div className=\"c-tab-login__content-icon\">\n                    <svg role=\"img\" aria-label=\"\" className=\"icon icon-mobile-id\"><use href=\"#icon-mobile-id\"></use></svg>\n                  </div>\n                  <div className=\"c-tab-login__content-text\">\n                    <div role=\"heading\">\n                      <h2>{t('tara-mobile-id')}</h2>\n                    </div>\n                    <p>{t('tara-mobile-id-explained')}</p>\n                    <form>\n                      <table>\n                        <tbody>\n                          <tr>\n                            <td className=\"col-label\">\n                              <label htmlFor=\"mid-personal-code\" className=\"form-label\">{t('tara-personal-code')}</label>\n                            </td>\n                            <td>\n                              <div className=\"input-group\">\n                                <div className=\"input-group-prepend\">\n                                  <span className=\"input-group-text\">EE</span>\n                                </div>\n                                <input type=\"text\" id=\"mid-personal-code\" className=\"form-control\" name=\"principalCode\" defaultValue=\"47302200234\" />\n                              </div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td className=\"col-label\">\n                              <label htmlFor=\"mid-phone-number\" className=\"form-label\">{t('tara-phone-number')}</label>\n                            </td>\n                            <td>\n                              <div className=\"input-group\">\n                                <div className=\"input-group-prepend\">\n                                  <span className=\"input-group-text\">+372</span>\n                                </div>\n                                <input type=\"tel\" id=\"mid-phone-number\" className=\"form-control\" name=\"mobileNumber\" defaultValue=\"53883333\" /></div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td></td>\n                            <td>\n                              <button className=\"c-btn c-btn--primary\" onClick={(ev) => click(ev)}>{t('tara-continue')}</button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </form>\n                  </div>\n                </div>\n                <div className=\"c-tab-login__footer\">\n                  <p><a href=\"https://tim.www.eesti.ee/tim/cancel-auth\">{t('tara-return')}</a></p>\n                  <p>\n                    <a href=\"https://www.id.ee/?id=35803&amp;group_id=1\" target=\"_blank\" rel=\"noopener noreferrer\">{t('tara-help')}</a>\n                  </p>\n                </div>\n              </div>\n            </main>\n          </div>\n        </div>\n        <p className=\"link-back-mobile\">\n          <a href=\"https://tim.www.eesti.ee/tim/cancel-auth\">{t('tara-return')}</a>\n        </p>\n        <svg aria-hidden=\"true\" className=\"c-inline-svg__hidden\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <symbol id=\"icon-mobile-id\" viewBox=\"0 0 20 32\">\n              <title>mobile-id</title>\n              <path d=\"M7.218 28.027h5.476v1.12h-5.476zM15.876 31.68h-12.089c-0 0-0 0-0 0-1.8 0-3.261-1.454-3.271-3.252v-24.854c0.005-1.803 1.468-3.262 3.271-3.262 0 0 0 0 0 0h12.089c0 0 0 0 0 0 1.803 0 3.266 1.459 3.271 3.262v24.845c-0.005 1.803-1.468 3.262-3.271 3.262 0 0 0 0 0 0v0zM3.787 1.422c0 0 0 0-0 0-1.19 0-2.155 0.962-2.16 2.151v22.045h16.409v-22.044c0 0 0 0 0-0 0-1.188-0.963-2.151-2.151-2.151-0.003 0-0.006 0-0.009 0h0zM1.627 28.418c0.005 1.189 0.97 2.151 2.16 2.151 0 0 0 0 0 0h12.089c0 0 0 0 0 0 1.19 0 2.155-0.962 2.16-2.151v-1.689h-16.409zM12.382 8.951c-0.721-0.218-1.55-0.343-2.408-0.343-0.544 0-1.076 0.050-1.592 0.147l0.053-0.008c-0.018 0.004-0.039 0.006-0.060 0.006-0.154 0-0.282-0.108-0.313-0.252l-0-0.002c-0.009-0.089 0-0.169 0.053-0.231 0.047-0.068 0.119-0.117 0.202-0.133l0.002-0c0.494-0.094 1.063-0.147 1.644-0.147 0.922 0 1.813 0.135 2.653 0.386l-0.065-0.017c0.132 0.040 0.226 0.16 0.226 0.302 0 0.174-0.141 0.315-0.315 0.315-0.032 0-0.062-0.005-0.091-0.013l0.002 0.001zM14.187 11.396c-0 0-0.001 0-0.001 0-0.066 0-0.127-0.020-0.178-0.054l0.001 0.001c-1.129-0.791-2.531-1.263-4.043-1.263-1.375 0-2.659 0.391-3.747 1.067l0.030-0.017c-0.049 0.032-0.109 0.051-0.174 0.051-0.113 0-0.213-0.059-0.27-0.148l-0.001-0.001c-0.033-0.049-0.053-0.108-0.053-0.173 0-0.116 0.064-0.217 0.158-0.271l0.002-0.001c1.151-0.716 2.547-1.141 4.043-1.141 1.65 0 3.18 0.517 4.435 1.397l-0.025-0.016c0.142 0.089 0.178 0.293 0.089 0.436-0.059 0.081-0.153 0.133-0.26 0.133-0.002 0-0.005-0-0.007-0h0zM5.236 13.92c-0.176-0.001-0.318-0.144-0.318-0.32 0-0.070 0.023-0.135 0.061-0.188l-0.001 0.001c1.147-1.527 2.954-2.505 4.99-2.505 1.961 0 3.709 0.907 4.85 2.324l0.009 0.012c0.107 0.142 0.089 0.338-0.053 0.444-0.053 0.041-0.121 0.066-0.195 0.066-0.101 0-0.19-0.046-0.249-0.119l-0-0.001c-1.035-1.279-2.604-2.090-4.364-2.090-1.826 0-3.448 0.874-4.471 2.227l-0.010 0.014c-0.057 0.078-0.146 0.13-0.248 0.133l-0.001 0zM5.556 17.138c-0.003 0-0.006 0-0.009 0-0.172 0-0.311-0.139-0.311-0.311 0-0 0-0 0-0v0-0.018c0.161-2.486 2.216-4.441 4.728-4.441 2.137 0 3.943 1.415 4.534 3.358l0.009 0.034c0.004 0.018 0.006 0.039 0.006 0.061 0 0.177-0.143 0.32-0.32 0.32-0.128 0-0.238-0.075-0.289-0.183l-0.001-0.002v-0.018c-0.511-1.722-2.079-2.956-3.936-2.956-2.181 0-3.963 1.703-4.091 3.852l-0.001 0.011c-0.010 0.164-0.145 0.293-0.311 0.293-0.003 0-0.007-0-0.010-0h0zM7.004 19.387c-0.176-0-0.319-0.144-0.319-0.32 0-0.025 0.003-0.050 0.008-0.073l-0 0.002c0.082-0.236 0.129-0.507 0.129-0.79 0-0.116-0.008-0.231-0.023-0.343l0.001 0.013c-0.085-0.277-0.134-0.596-0.134-0.926 0-1.802 1.461-3.262 3.262-3.262 1.579 0 2.896 1.122 3.197 2.612l0.004 0.021c0.142 0.587 0.213 1.182 0.204 1.778 0 0.178-0.142 0.32-0.32 0.32-0.17-0.005-0.306-0.141-0.311-0.311v-0c0-0.551-0.062-1.102-0.178-1.636-0.291-1.16-1.325-2.005-2.556-2.005-1.453 0-2.631 1.178-2.631 2.631 0 0.222 0.028 0.439 0.080 0.645l-0.004-0.018c0.080 0.329 0.044 0.809-0.107 1.422-0.036 0.137-0.157 0.236-0.302 0.24h-0zM8.311 20.151l-0.089-0.009c-0.128-0.041-0.219-0.158-0.219-0.297 0-0.034 0.005-0.066 0.015-0.096l-0.001 0.002c0.169-0.456 0.266-0.982 0.266-1.531 0-0.244-0.019-0.483-0.056-0.717l0.003 0.026c-0.059-0.17-0.093-0.367-0.093-0.571 0-0.992 0.804-1.796 1.796-1.796 0.892 0 1.632 0.65 1.772 1.503l0.001 0.010c0.213 0.836 0.222 1.804 0.027 2.88-0.001 0.176-0.144 0.319-0.32 0.319s-0.32-0.143-0.32-0.32c0-0.038 0.007-0.074 0.018-0.107l-0.001 0.002c0.178-0.987 0.169-1.867-0.018-2.631-0.128-0.51-0.583-0.882-1.124-0.882-0.639 0-1.158 0.518-1.158 1.158 0 0.098 0.012 0.193 0.035 0.284l-0.002-0.008c0.16 0.64 0.089 1.502-0.222 2.56-0.043 0.13-0.163 0.222-0.305 0.222-0.002 0-0.005-0-0.007-0h0zM9.804 20.329c-0.172-0.005-0.31-0.147-0.31-0.32 0-0.025 0.003-0.050 0.008-0.073l-0 0.002c0.159-0.552 0.256-1.187 0.267-1.843l0-0.006c0-0.311-0.036-0.622-0.107-0.916-0.001-0.008-0.001-0.017-0.001-0.026 0-0.177 0.143-0.32 0.32-0.32 0.131 0 0.244 0.079 0.294 0.192l0.001 0.002c0.089 0.356 0.124 0.711 0.116 1.067-0.010 0.716-0.113 1.403-0.298 2.056l0.014-0.056c-0.036 0.137-0.157 0.236-0.302 0.24h-0z\"></path>\n            </symbol>\n          </defs>\n        </svg>\n      </div>\n    </div>\n  )\n}","import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { TFunction } from \"i18next\";\n\n\n\nexport const Explainer = (props: { arena: string; t: TFunction }) => {\n  const [visible, setVisible] = useState(!window.localStorage.getItem(\"arena-explained-\" + props.arena));\n\n  const hide = (ev?: any) => {\n    if (ev) { ev.preventDefault(); }\n    window.localStorage.setItem(\"arena-explained-\" + props.arena, \"true\");\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Modal show={visible} onHide={hide} size=\"lg\">\n        <Modal.Body>\n          <div dangerouslySetInnerHTML={{ __html: props.t(props.arena + '.arena-explained') }} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={hide}>{props.t('close')}</Button>\n        </Modal.Footer>\n      </Modal>\n      <Button className=\"btn badge mx-2\" variant=\"secondary\" title=\"Reopen explainer / ava seletav tekst uuesti\" onClick={(ev: any) => { ev.preventDefault(); setVisible(true); }}>?</Button>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Theatre, ArenaSelector } from './components/Theatre';\nimport { CSEnduserUI } from './process/consentService/altUI/CSEnduserUI';\nimport { Ria } from './process/consentService/altUI/tara';\nimport { LanguageSelector } from './components/LanguageSelector';\nimport { useTranslation } from 'react-i18next';\nimport { useStore } from 'react-redux';\nimport { Explainer } from './components/Explainer';\n\n\n\nconst Page = () => {\n  const { t } = useTranslation(); // to force init of translations.\n  const store = useStore();\n  const theatre = store.getState().theatre;\n\n  return (\n    <div className=\"App\">\n      <Router basename=\".\">\n        <Switch>\n          <Route path=\"(.*)/ui/ria\">\n            <Ria />\n          </Route>\n          <Route path=\"(.*)/ui/csui\">\n            <CSEnduserUI />\n          </Route>\n          <Route path=\"/\">\n            <nav className=\"navbar navbar-light bg-light mb-4\">\n              <span className=\"navbar-brand\">\n                <img alt=\"logo\" src={require('./static/assets/images/arena-logo.png')} width=\"30\" />\n              </span>\n              <span>\n                <ArenaSelector arenaNames={theatre.arenas.allNames} />\n              </span>\n              <div className=\"w-auto\">\n                <LanguageSelector />\n                <Explainer arena={theatre.active} t={t} />\n              </div>\n            </nav>\n            <div className=\"container-fluid\">\n              <Theatre />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n// loading component for suspense fallback\nconst Loader = () => (\n  <div className=\"App\">\n    <div>loading...</div>\n  </div>\n);\n\nconst App: React.FC = () => {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Page />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { queueListener } from \"./process/Arena\";\nimport { reduceTheatre } from \"./process/Theatre\";\nimport { registerGlobalListener } from \"./postMessage\";\n\nconst rootReducer = combineReducers({\n  theatre: reduceTheatre,\n});\n\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default function configureStore() {\n  const middlewares = [thunkMiddleware];\n  const middleWareEnhancer = applyMiddleware(...middlewares);\n\n  const store = createStore(\n    rootReducer,\n    composeWithDevTools(middleWareEnhancer)\n  );\n\n  store.subscribe(() => queueListener(store));\n\n  registerGlobalListener(store);\n\n  return store;\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\nimport './i18n';\n\nconst store = configureStore();\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}